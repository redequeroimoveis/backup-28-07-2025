{
  "createdAt": "2025-07-25T13:54:47.497Z",
  "updatedAt": "2025-07-28T12:55:39.000Z",
  "id": "IJGgHocdw0MLpx3K",
  "name": "Consulta CPF - SCR BACEN + SCORE (Dados) Principal",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Nome Consulta",
              "value": "=Consulta SCR BACEN",
              "type": "string"
            },
            {
              "id": "ac5a7a11-a016-4827-a7ae-88a6490e25ec",
              "name": "URL Consulta Padrão",
              "value": "-",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": "=7",
              "type": "number"
            },
            {
              "id": "d33c7538-b8cf-4d31-ad21-94b5a8eb1f89",
              "name": "URL-LOGO",
              "value": "=https://i.imgur.com/g0gImpK.jpeg",
              "type": "string"
            },
            {
              "id": "eb9b41f0-7773-4009-b986-39f72a9845c7",
              "name": "Prompt PDF",
              "value": "=Objetivo: Formatar os dados da consulta de crédito de forma estruturada e organizada, seguindo o modelo de análise de crédito do Serasa, retornando exclusivamente um código HTML.\nInstruções:\n* Retornar apenas o HTML, sem nenhum outro texto no output.\n* Seguir a estrutura de tabelas para organizar os dados.\n* Usar fontes de até 11px para informações dentro das tabelas.\n* Remover o título <h1>, mas adicionar duas quebras de linha (<br><br>) após a logo para espaçamento.\n* Não alterar o campo \"URL-LOGO\", pois ele será substituído dinamicamente.\n* Incluir um rodapé com informações de confidencialidade e LGPD, usando fonte de 9px e alinhado à esquerda.\n* Nunca utilizar a expressão \"Dados do Cotista\", apenas \"Dados\".\nFormato esperado:\n* HTML bem estruturado, com seções claras.\n* Uso de <div> para blocos de informações e <table> para dados tabulares.\n* Listas <ul> para e-mails, telefones e parentes.\n* Footer fixo no final do relatório.\n* Caso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\n* É obrigatório que todas as informações fornecidas abaixo conste no HTML.\n* Se tiver \"_Sem pendências registradas._\", \"_Sem pendências._\" ou algo que comece e termine com \"_\", remova o \"_\".\n* Se o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\n* Se não existir nenhum email, não adicione no html Email\n* Se não existir nenhum telefone, não adicione no html Telefone\n* Se não existir nenhum Possíveis Parentes, não adicione no html Possíveis Parentes\n* Se email estiver vazio ou não existir, não crie no html <strong>Email:</strong>\n* Se telefone estiver vazio ou não existir, não crie no html <strong>Telefone:</strong>\n\nAdicione também um rodapé na página com fonte tamanho 9 alinhado a esquerda da página com os seguintes dados:\n\"INFORMAÇÕES IMPORTANTES\nESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO , RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.\n\nMINUTA DE DECLARAÇÃO LGPD\nDECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.\"\n\nHTML DE EXEMPLO 1:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\">\n        <br><br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Razão Social:</span> MARANATA DISTRIBUIDORA LTDA</p>\n            <p><span class=\"info\">Nome Fantasia:</span> MARANATA DISTRIBUIDORA</p>\n            <p><span class=\"info\">CNPJ:</span> 41172801000111</p>\n            <p><span class=\"info\">Situação Cadastral:</span> Ativa</p>\n            <p><span class=\"info\">Porte:</span> Micro Empresa</p>\n            <p><span class=\"info\">Natureza Juridica:</span> Sociedade Empresária Limitada</p>\n        </div>\n        <br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Contato</h2>\n            <p><span class=\"info\">Telefone:</span> (38)98732549</p>\n            <p><span class=\"info\">Email:</span> maranatadistribuidora@yahoo.com</p>\n        </div>\n        <br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Endereço</h2>\n            <p><span class=\"info\">Endereço:</span> RUA DA BAHIA, Número 374,  - CENTRO, Pirapora - MG, CEP - 39270088</p>\n        </div>\n        <br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Atividade</h2>\n            <p><span class=\"info\">Atividade Principal:</span> Comércio atacadista de produtos alimentícios em geral</p>\n            <p><span class=\"info\">Atividade secundária:</span> Fabricação de produtos de panificação industrial</p>\n        </div>\n        <br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sócios</h2>\n            <ul>\n                <li>ALEXANDER RODRIGUES DA SILVA</li>\n            </ul>\n        </div>\n        <br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Prejuízo</h2>\n            <p><span class=\"info\">Valor:</span> R$79586,23</p>\n            <p><span class=\"info\">Descrição:</span> CREDITOS BAIXADOS COMO PREJUIZO ATE 12 MESES</p>\n        </div>\n        <br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Créditos a Vencer</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Descrição</th>\n                        <th>Valor</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr><td>CREDITOS A VENCER ATE 30 DIAS</td><td>R$ 4214,00</td></tr>\n                    <tr><td>CREDITOS A VENCER DE 31 A 60 DIAS</td><td>R$ 689,37</td></tr>\n                    <tr><td>CREDITOS A VENCER DE 61 A 90 DIAS</td><td>R$ 680,54</td></tr>\n                    <tr><td>CREDITOS A VENCER DE 91 A 180 DIAS</td><td>R$ 1334,89</td></tr>\n                </tbody>\n            </table>\n            <p><strong>Total:</strong> R$6918,80</p>\n            <p><strong>Percentual:</strong> 6,86%</p>\n        </div>\n        <br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Créditos Vencidos</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Descrição</th>\n                        <th>Valor</th>\n                        <th>Percentual</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr><td>CREDITOS VENCIDOS DE 31 A 60 DIAS</td><td>R$ 716,61</td><td>0,71%</td></tr>\n                    <tr><td>CREDITOS VENCIDOS DE 61 A 90 DIAS</td><td>R$ 725,92</td><td>0,72%</td></tr>\n                    <tr><td>CREDITOS VENCIDOS DE 91 A 120 DIAS</td><td>R$ 740,76</td><td>0,73%</td></tr>\n                    <tr><td>CREDITOS VENCIDOS DE 121 A 150 DIAS</td><td>R$ 740,76</td><td>0,73%</td></tr>\n                    <tr><td>CREDITOS VENCIDOS DE 301 A 360 DIAS</td><td>R$ 11461,02</td><td>11,36%</td></tr>\n                </tbody>\n            </table>\n        </div>\n        <br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Empréstimos</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Modalidade</th>\n                        <th>Sub Modalidade</th>\n                        <th>Total</th>\n                        <th>Descrição</th>\n                        <th>Valor</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>EMPRESTIMOS</td>\n                        <td>CREDITO ROTATIVO VINCULADO A CARTAO DE CREDITO</td>\n                        <td>R$104,51</td>\n                        <td>CREDITOS A VENCER ATE 30 DIAS</td>\n                        <td>R$104,51</td>\n                    </tr>\n                    <tr>\n                        <td>EMPRESTIMOS</td>\n                        <td>CARTAO DE CREDITO – COMPRA, FATURA PARCELADA OU SAQUE FINANCIADO PELA INSTITUICAO EMITENTE DO CARTAO</td>\n                        <td>R$1485,68</td>\n                        <td>CREDITOS A VENCER ATE 30 DIAS</td>\n                        <td>R$1485,68</td>\n                    </tr>\n                    <tr>\n                        <td>EMPRESTIMOS</td>\n                        <td>CHEQUE ESPECIAL</td>\n                        <td>R$3924,15</td>\n                        <td>CREDITOS VENCIDOS DE 301 A 360 DIAS</td>\n                        <td>R$3924,15</td>\n                    </tr>\n                    <tr>\n                        <td>EMPRESTIMOS</td>\n                        <td>CONTA GARANTIDA</td>\n                        <td>R$5683,20</td>\n                        <td>CREDITOS BAIXADOS COMO PREJUIZO ATE 12 MESES</td>\n                        <td>R$5683,20</td>\n                    </tr>\n                    <tr>\n                        <td>EMPRESTIMOS</td>\n                        <td>CAPITAL DE GIRO COM PRAZO VENCIMENTO SUPERIOR 365 D</td>\n                        <td>R$58137,10</td>\n                        <td>CREDITOS BAIXADOS COMO PREJUIZO ATE 12 MESES</td>\n                        <td>R$58137,10</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nImportante, escreva \"Inicio HTML\" e \"Fim HTML\" no inicio e no final. Somente isso. Não escreva mais nenhum dados fora do código.\nQuando for exatamente começar o código HTML, escreva da seguinte maneira: Inicio HTML\\n<!DOCTYPE html>\\n\nEscreva no código html todas as informações fornecidas. Não ignore nenhum dado.\nUma observação. O titulo dos menus entrão entre <>\nCaso a frase comece e termine com \"_\", pode remover o \"_\"\nSempre formate no html utilizando TODOS os dados fornecidos abaixo como informações, valores, dados, tudo sem exceção.\nVocê vai adicionar na formatação somente os dados existentes e informados abaixo.\nImportante. Se o dados como telefone, email ou parentes não estiver disponível e não for fornecido, você não precisa adicionar a \"div class\" no html.\nSempre adicione <br> entre uma \"div class\" e outra.\nSiga fielmente o layout do exemplo de html acima.\nCaso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\nSe o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\nÉ importante que você adicione no HTML somente os dados fornecidos abaixo que são para formatar. Os dados dos HTML de exemplo servem somente para seguir o layout do HTML (Nunca utilize as informações de exemplo ou invente dados para adicionar no html formatado).\nÉ obrigatório que todas as informações fornecidas abaixo conste no HTML.\nRemova todos os _ do html exceto de email.\nImportante, você vai formatar em pendências, somente o que está em pendências, você vai formatar em scpc, somente o que está em scpc e vai formatar em protestos, somente o que está em protestos. E assim por diante.\nSe durante a formatação formar criar >PENDÊNCIAS< crie com somente a primeira letra maiúscula >Pendências<\n\nAtenção, todos os dados e informações acima server exclusivamente como exemplo para você estruturar o HTML.\nAs informações na formatação do HTML precisam estar na ordem dos dados para formatar.\nUtilize somente os dados abaixo para formatar o HTML:",
              "type": "string"
            },
            {
              "id": "29ee42f4-7f4c-4963-af82-f5840c5a9e5f",
              "name": "URL-LOGO",
              "value": "https://i.imgur.com/g0gImpK.jpeg",
              "type": "string"
            },
            {
              "id": "7588d079-438c-477a-afe6-ac2a37d1795c",
              "name": "body.Webhook",
              "value": "={{ $json.body.Webhook }}",
              "type": "string"
            },
            {
              "id": "4d8553c3-bdf0-49f5-bb9e-6043eab31180",
              "name": "Telefone",
              "value": "={{ $json.body.Telefone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "784f13dc-081b-421d-9112-a94914a6d6c7",
      "name": "Dados N8N",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -1300,
        760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $json.creditos }}",
              "rightValue": 7,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "86475957-8f99-44a6-9135-f27cd6cb6965",
      "name": "Crédito maior ou igual",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        80,
        840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a08960b7-6997-40c7-a586-c1813334c296",
      "name": "Se site / bc",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -300,
        740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "30383d33-39b0-416a-9274-bc93c25e5209",
      "name": "Crédito inferior",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -100,
        1040
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c795dd49-958b-409d-ad8c-6d0d5edc1a5b",
      "name": "Respond to Webhook2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        80,
        1040
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a0366829-9172-401c-998d-53b4f379cb41",
      "name": "Retornar Créditos Site",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -100,
        840
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## SE SITE VERIFICAR CRÉDITO",
        "height": 618.9881218861381,
        "width": 710.1829541272629,
        "color": 4
      },
      "id": "bb556a23-7f50-4009-9674-18f3337d9223",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -380,
        640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "bfac3c94-a23c-4008-aa6c-dd5fcb21c8e6",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ae24099a-a659-49d0-b086-0f1b6ceb20f5",
      "name": "If15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -800,
        760
      ]
    },
    {
      "parameters": {
        "content": "## CPF / CNPJ inválido",
        "height": 857.1068136784003,
        "width": 456.60627452732734,
        "color": 3
      },
      "id": "2bea041b-ed3e-431e-8823-eb39922350d5",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1060,
        700
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, '');\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false;\n\n    let soma = 0, resto;\n\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, '');\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false;\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o número (CPF ou CNPJ) e remove caracteres não numéricos\nlet numero = ($('Webhook').item.json.body.CPF || $('Webhook').item.json.body.CNPJ || '').replace(/[^\\d]+/g, '');\n\n// Completa com zeros à esquerda se necessário\nif (numero.length < 11) {\n    numero = numero.padStart(11, '0'); // CPF com menos de 11 dígitos\n} else if (numero.length > 11 && numero.length < 14) {\n    numero = numero.padStart(14, '0'); // CNPJ com menos de 14 dígitos\n}\n\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido\n        }\n    }\n];\n"
      },
      "id": "675d0346-2614-41ff-ac3d-d4a5ab2dd200",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1000,
        760
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4b5d9275-679d-43e6-bd3c-aa5c3c040554",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -780,
        1360
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: o {{ $json.tipo }} informado é inválido. Por favor, digite o CPF corretamente 🚨"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "b88eba94-37b5-4e21-a536-ae65511fd665",
      "name": "HTTP Request7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -980,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d8fb66c1-8e90-4b38-b117-40f074bd1e11",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -980,
        1160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "=Atenção: o {{ $json.tipo }} informado é inválido. Por favor, digite o CPF corretamente 🚨"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "Tipo consulta",
              "value": "={{ $('Webhook').item.json.body['Tipo consulta'] }}"
            },
            {
              "name": "Pendências",
              "value": "=Erro"
            },
            {
              "name": "Protestos",
              "value": "=Erro"
            },
            {
              "name": "SCPC",
              "value": "=Erro"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "7b4152e6-4f04-46f7-8920-378e155ecff6",
      "name": "Erro1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -800,
        1140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "511cf2e5-9da4-44e4-9362-94e2a62e7638",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "4cd16684-42ab-4365-90a2-d7eb5dacd956",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7ff0c125-e8d4-4374-93ec-60280b762948",
      "name": "se typebot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -980,
        980
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: o CPF informado é inválido. Por favor, digite o CPF corretamente 🚨",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "638dc75c-8349-49af-b24e-75dbcbed4e3e",
      "name": "typebot",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -620,
        960
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "15007c47-d46b-4649-821e-f6e7b868d540",
      "name": "If17",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4360,
        1280
      ]
    },
    {
      "parameters": {
        "url": "=https://comercial.cnpj.ws/cnpj/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}?token=Fzuivi52ORPdOUUOOnkq17SVWaKq3Gnmab6JjJYJM4cR",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "1da8e3b1-8f4a-4bb7-81bc-fc88b286eb49",
      "name": "HTTP Request9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1280,
        1620
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "9cb94037-f769-42b3-9255-c44ea3453468",
              "leftValue": "={{ $json.razao_social }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "97765a3f-2a32-4db1-9e82-eed17bdca20e",
      "name": "If64",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1540,
        1620
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "=*Razão Social:* _{{ $('HTTP Request9').item.json.razao_social }}_\n*Nome Fantasia:* _{{ $('HTTP Request9').item.json.estabelecimento.nome_fantasia }}_\n*CNPJ:* _{{ $('Webhook').item.json.body.CPF.padStart(14, '0') }}_\n*Situação Cadastral:* _{{ $('HTTP Request9').item.json.estabelecimento.situacao_cadastral }}_\n\n*Porte:* _{{ $('HTTP Request9').item.json.porte.descricao }}_\n*Natureza Juridica:* _{{ $('HTTP Request9').item.json.natureza_juridica.descricao }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5d7b68c1-a14b-4da5-b4b3-34f750c67b9d",
      "name": "Informações4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1780,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.socios[4].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1ea38726-150c-462e-9b30-466122a3b8d0",
      "name": "If65",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3320,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request9').item.json.socios[0].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[1].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[2].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[3].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[4].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6da30550-5202-4146-849e-d8d8ce6468a5",
      "name": "Informações57",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3320,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.socios[3].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f1e6de07-26c0-4c94-982f-4499ec0598f9",
      "name": "If66",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3520,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request9').item.json.socios[0].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[1].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[2].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[3].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bcbc9c4f-7e15-433b-b074-591d1563e8d1",
      "name": "Informações58",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3520,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.socios[2].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "90a382ff-7013-43f3-99ba-fbcb808244ab",
      "name": "If67",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3700,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request9').item.json.socios[0].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[1].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[2].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5e0ed0d1-c013-4d08-8502-22bd88ac2240",
      "name": "Informações59",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3700,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.socios[1].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "464bbf27-5ee0-4e17-a532-af7bb0ba7fef",
      "name": "If68",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3880,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request9').item.json.socios[0].nome }}_\n- _{{ $('HTTP Request9').item.json.socios[1].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "01254104-1a3c-4f45-ba62-1fad766d8816",
      "name": "Informações60",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3880,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.socios[0].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b680262c-991d-4373-893d-4869c1c3b1a2",
      "name": "If69",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4060,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request9').item.json.socios[0].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5c1d6454-cd8a-4404-b092-8067d8a7e4f3",
      "name": "Informações61",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4060,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.estabelecimento.atividade_principal.descricao }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0bdba825-34e4-4fae-9970-71951b7df549",
      "name": "If70",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2800,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Atividade Principal*\n{{ $('HTTP Request9').item.json.estabelecimento.atividade_principal.descricao }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9377ac37-e6dd-4ca0-a3a8-b0e7e5ecb187",
      "name": "Informações62",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2800,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.estabelecimento.logradouro }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e4f29310-0b9c-4bed-9029-f2aede7e735f",
      "name": "If71",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2560,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Endereço*\n{{ $('HTTP Request9').item.json.estabelecimento.tipo_logradouro }} {{ $('HTTP Request9').item.json.estabelecimento.logradouro }}, Número {{ $('HTTP Request9').item.json.estabelecimento.numero }}, {{ $('HTTP Request9').item.json.estabelecimento.complemento }} - {{ $('HTTP Request9').item.json.estabelecimento.bairro }}\n{{ $('HTTP Request9').item.json.estabelecimento.cidade.nome }} - {{ $('HTTP Request9').item.json.estabelecimento.estado.sigla }}\nCEP - {{ $('HTTP Request9').item.json.estabelecimento.cep }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "65e8f117-96b0-4d7e-9728-bd4ccd143d3e",
      "name": "Informações63",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2560,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.estabelecimento.atividades_secundarias[0].descricao }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f898e705-a275-44bb-9ef6-7dca3d495ec5",
      "name": "If72",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2980,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Atividade secundária*\n{{ $('HTTP Request9').item.json.estabelecimento.atividades_secundarias[0].descricao }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0af1a972-0a76-4dfd-aeb6-ebb6c6b52041",
      "name": "Informações64",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2980,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.estabelecimento.telefone1 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "97f16573-ad74-4300-8d1d-e2a975cb6470",
      "name": "If73",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2120,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Telefone*\n({{ $('HTTP Request9').item.json.estabelecimento.ddd1 }}){{ $('HTTP Request9').item.json.estabelecimento.telefone1 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bc62238b-ab86-4a32-8649-499940c5804e",
      "name": "Informações65",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2120,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request9').item.json.estabelecimento.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3b7a10b3-a1f3-446b-ba02-299a15c91738",
      "name": "If74",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2300,
        1600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Email*\n{{ $('HTTP Request9').item.json.estabelecimento.email }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7da9459c-d796-451e-8cfc-e71eff6a39dd",
      "name": "Informações66",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2300,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "cde8f9bf-3362-42a2-9f07-c11f84c600c5",
              "leftValue": "={{ $('Code2').item.json.tipo }}",
              "rightValue": "CPF",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2696caf3-991b-4aeb-80a1-0eb61361a16a",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        900,
        720
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "scr-bacen",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "ed09c786-c659-468d-ae20-1f1c4e971433",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1520,
        760
      ],
      "webhookId": "48240b93-86f2-4463-b79a-e1ba48f86001"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "=*CNPJ:* _{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e34e8fac-36ec-4a7b-bacb-880017205bea",
      "name": "Informações",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1540,
        1820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "60288151-e6eb-4293-b30b-a838e064013e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "373f3ae0-9702-488d-9656-12ccd5582588",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e1780603-c841-4aa5-8bd6-d73494080851",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -280,
        1240
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cbda795e-2fa7-4937-b240-13c7a4525396",
      "name": "Edit Fields7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        120,
        1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "4cd16684-42ab-4365-90a2-d7eb5dacd956",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c0abfba1-44f4-45ab-9fb8-6994b04f9849",
      "name": "se typebot4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1240,
        900
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "fbd0942f-e1f0-4b82-87d2-9062c1f1f0a6",
      "name": "Respond to Webhook7",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        5060,
        1260
      ]
    },
    {
      "parameters": {
        "content": "## CONTINUAÇÃO",
        "height": 251.51571340885795,
        "width": 571.376359106563,
        "color": 6
      },
      "id": "79dd8409-9b01-4319-a297-37165b1824a2",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4620,
        1200
      ]
    },
    {
      "parameters": {},
      "id": "9ef1b56f-abff-4e0e-880a-a2de4050b2ce",
      "name": "Limit4",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        4720,
        1260
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.redequeroimoveis.com/webhook/scr-bacen-1",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "CPF",
              "value": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            },
            {
              "name": "URL_LogoPDF",
              "value": "={{ $('Webhook').item.json.body.URL_LogoPDF }}"
            },
            {
              "name": " Tipo consulta",
              "value": "Completa"
            },
            {
              "name": "Prompt PDF",
              "value": "={{ $('Dados N8N').item.json['Prompt PDF'] }}"
            },
            {
              "name": "URL-LOGO",
              "value": "={{ $('Dados N8N').item.json['URL-LOGO'] }}"
            },
            {
              "name": "RequestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "Informações",
              "value": "={{ $json['Informações'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4701d728-5d97-457c-be4b-cbb9c6bc5b86",
      "name": "HTTP Request21",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4880,
        1260
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e76dc917-0a5a-4a6c-8f3e-1df7328ea0a4",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2280,
        3480
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "c208412a-524f-497d-adb3-97733deae894",
      "name": "HTTP Request6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        3480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "52332898-8243-4669-971d-f7ff7cda31df",
      "name": "If13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2040,
        3320
      ]
    },
    {
      "parameters": {
        "content": "## ERRO CONSULTA",
        "height": 658.5660184305109,
        "width": 455.90538040659635,
        "color": 3
      },
      "id": "5ae3bf10-dcf3-4ea8-9c5c-b3465afd9bd1",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1980,
        2980
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1b30565b-fc6b-4ecc-b090-52879d98b91e",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        2060,
        2400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtém a data e hora do campo\nconst currentDate = new Date($('Date & Time1').item.json.currentDate);\n\n// Converte para o horário de São Paulo (GMT-3)\nconst options = { timeZone: 'America/Sao_Paulo', hour12: false };\nconst brazilianTime = new Date(currentDate.toLocaleString('en-US', options));\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado) e a hora\nconst dayOfWeek = brazilianTime.getDay(); // 0=Domingo, 1=Segunda, ..., 6=Sábado\nconst hour = brazilianTime.getHours();\n\n// Verifica se a hora está entre 08:00 e 18:00 e se o dia é útil (segunda a sexta)\nif (hour >= 9 && hour < 18 && dayOfWeek >= 1 && dayOfWeek <= 5) {\n    return {\n        json: {\n            status: 'Horário funcionamento'\n        }\n    };\n} else {\n    return {\n        json: {\n            status: 'Fora do horário'\n        }\n    };\n}\n"
      },
      "id": "765176ed-3a2a-41c0-ad24-4986639c061a",
      "name": "Code Horário funcionamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2240,
        2400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "Tente novamente utilizando outra opção de consulta disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f9fd4488-4da4-4e2b-bdf7-db4b4192019d",
      "name": "Horário funcionamento1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2240,
        2560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8ec90439-29cc-4f7e-9318-906539cd9a2d",
              "leftValue": "={{ $json.status }}",
              "rightValue": "funcionamento",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5ba0553f-2857-4047-bb8d-028cec412c84",
      "name": "Verificar Horário funcionamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2060,
        2560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "🕗 Alguns birôs restringem as consultas ao horário comercial. Aguarde até o horário de funcionamento para realizar a consulta e melhor experiência ou tente novamente utilizando outra opção disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d120d09b-eb02-4db2-b30e-db73d1728a4e",
      "name": "Fora do horário",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2060,
        2700
      ]
    },
    {
      "parameters": {
        "content": "## Horário funcionamento",
        "height": 578.2747827033502,
        "width": 397.97803245596407,
        "color": 3
      },
      "id": "9b59d47b-39d1-4114-ade1-7b53a61cbb6b",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2000,
        2320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Informações",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Consulta - 1",
              "value": "=Erro"
            },
            {
              "name": "Consulta - 2",
              "value": "=Erro"
            },
            {
              "name": "Consulta - 3",
              "value": "=Erro"
            },
            {
              "name": "Consulta - 4",
              "value": "=Erro"
            },
            {
              "name": "Consulta - 5",
              "value": "=Erro"
            },
            {
              "name": "Consulta - 6",
              "value": "=Erro"
            },
            {
              "name": "Consulta - 7",
              "value": "=Erro"
            },
            {
              "name": "Tipo consulta",
              "value": "=F"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "494ff42b-1077-412c-928f-7ca97fda6c4c",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2280,
        3300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "323510c9-a141-4ad3-b3ee-d9e67758614e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "66e45b04-cb18-48c5-abd2-d26c45a53280",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "a56d9c6c-7816-483d-8ffb-9bd587025bf2",
      "name": "se typebot1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2040,
        3120
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "={{ $('se typebot3').item.json['Consulta erro'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "df1bd1d2-5707-4250-8083-e334d649b88a",
      "name": "typebot1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2480,
        3120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('se typebot1').item.json['Consulta erro'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2460,
        2920
      ],
      "id": "7808ebb8-3468-466b-b164-24b3e0800a48",
      "name": "Base44 API - Erro Consulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "66e45b04-cb18-48c5-abd2-d26c45a53280",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e190d450-138a-4544-b939-fdfe3f3f0dfe",
      "name": "se typebot3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2040,
        2960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "908e77b0-26f6-41b1-bc97-12751204cd3c",
      "name": "If9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -180,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Dados N8N').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Dados N8N').item.json.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "Atenção: estamos realizando algumas atualizações no sistema. Tente novamente mais tarde."
            },
            {
              "name": "Nome Menu",
              "value": "={{ $('Dados N8N').item.json['Nome Menu'] }}"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Menu'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "23037288-6c06-4ead-890b-3de8e17944a1",
      "name": "Consulta ERRO2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: estamos realizando algumas atualizações no sistema.\nTente novamente mais tarde.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b458e15b-ada9-470b-835a-33b2b790ba7f",
      "name": "Edit Fields10",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "2e18167a-d375-4618-8e57-b415ac262db4",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        0,
        400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Dados N8N').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Dados N8N').item.json.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: estamos realizando algumas atualizações no sistema.\nTente novamente mais tarde."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "d91e7a9b-3698-44fb-a393-081700312ec3",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -200,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "1ff6c905-3e5b-40db-b0e6-e9819b8478a3",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "b25a9f16-4fef-415f-828c-c90d64c8c4e0",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0f4dd782-dff9-4636-8be8-79dcbd7453d7",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -180,
        20
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -800,
        960
      ],
      "id": "1a830ad6-969e-4e82-be64-79387ca8260e",
      "name": "EvolutionAPI - CPF Invalido",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -100,
        1240
      ],
      "id": "405fa730-3950-414d-99aa-e15d2beed6db",
      "name": "EvolutionAPI - Sem credito",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "={{ $('se typebot2').item.json['Consulta erro'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2240,
        3080
      ],
      "id": "615543c0-9c67-45cd-b128-8f6f9dfa5f65",
      "name": "EvolutionAPI - Erro",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a4ea19e9-6167-473d-ad80-c739ad364aa5",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5360,
        1260
      ],
      "id": "78d4cc34-9147-4947-a188-691ea59cb8a2",
      "name": "If3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Dados N8N').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Dados N8N').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Dados N8N').item.json.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: O link para download do PDF estará disponível por apenas 1 minuto. Após esse período, ele será deletado automaticamente.\n\n### PDF\n{{ $('If3').item.json.urlpdf }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5920,
        1220
      ],
      "id": "1faf00d3-1dc4-4442-a373-7513e888a7a2",
      "name": "EvolutionAPI - Resposta",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Dados N8N').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Dados N8N').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Dados N8N').item.json.Telefone }}"
            },
            {
              "name": "text",
              "value": "={{ $json.resposta\n  .replace(/_ /g, '_')\n  .replace(/-------+/g, '------- / / -------') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5560,
        1240
      ],
      "id": "3ae21fb0-118e-47a9-b707-304fe14377bf",
      "name": "EvolutionAPI - Resposta1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8cc86a13-85cf-4301-a6ce-34881ad480c6",
              "leftValue": "={{ $('If3').item.json.urlpdf }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5740,
        1240
      ],
      "id": "498e6ef9-b77e-4559-ad87-6059982fdc22",
      "name": "Se URLPDF"
    },
    {
      "parameters": {
        "content": "## Resposta Typebot",
        "height": 260,
        "width": 780,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5300,
        1160
      ],
      "typeVersion": 1,
      "id": "699c106b-2a1e-4112-b9f6-b77e0f5c5dca",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Dados N8N').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Dados N8N').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Aguarde, realizando consulta..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1040,
        480
      ],
      "id": "acf15ac9-86c3-4a5d-b5f6-9a466b48f6e4",
      "name": "EvolutionAPI - Realizando consulta",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Captura o retorno do JSON\nconst retorno = $json.RETORNO || {};\nconst cadastrais = retorno.CADASTRAIS || {};\n\nconst telefonesFixo = retorno.TELEFONES_FIXO?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_FIXO.TELEFONE) \n        ? retorno.TELEFONES_FIXO.TELEFONE \n        : [retorno.TELEFONES_FIXO.TELEFONE] \n    : [];\n\nconst telefonesMovel = retorno.TELEFONES_MOVEL?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_MOVEL.TELEFONE) \n        ? retorno.TELEFONES_MOVEL.TELEFONE \n        : [retorno.TELEFONES_MOVEL.TELEFONE] \n    : [];\n\nconst emails = retorno.EMAILS?.EMAIL \n    ? Array.isArray(retorno.EMAILS.EMAIL) \n        ? retorno.EMAILS.EMAIL \n        : [retorno.EMAILS.EMAIL] \n    : [];\n\n// const enderecos = retorno.ENDERECOS?.ENDERECO \n//   ? Array.isArray(retorno.ENDERECOS.ENDERECO) \n//       ? retorno.ENDERECOS.ENDERECO \n//       : [retorno.ENDERECOS.ENDERECO] \n//   : [];\n\nconst parentes = retorno.POSSIVEIS_PARENTES?.CONTATO \n    ? Array.isArray(retorno.POSSIVEIS_PARENTES.CONTATO) \n        ? retorno.POSSIVEIS_PARENTES.CONTATO \n        : [retorno.POSSIVEIS_PARENTES.CONTATO] \n    : [];\n\nconst empresas = retorno.EMPRESAS_SOCIO?.EMPRESA_SOCIO \n    ? Array.isArray(retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO) \n        ? retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO \n        : [retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO] \n    : [];\n\n// Função para tratar dados\nfunction formatField(value) {\n    return value && value.trim() !== \"\" && value !== \"undefined\" ? value : null;\n}\n\n// Cria uma lista formatada com limite de itens\nfunction formatList(items, limit) {\n    return items.slice(0, limit).map(item => `- ${item}`).join('\\n');\n}\n\n// Função para formatar lista de emails no formato _- email_\nfunction formatEmailList(items, limit) {\n    return items.slice(0, limit)\n        .map(email => `_- ${email}_`)\n        .join('\\n');\n}\n\n// Monta o texto formatado\nlet formattedText = `*Nome:* _${formatField(cadastrais.NOME) || \"Não informado\"}_\n*CPF:* _${formatField(cadastrais.CPF) || \"Não informado\"}_\n*Data Nascimento:* _${formatField(cadastrais.NASCTO) || \"Não informado\"}_\n*Idade:* _${formatField(cadastrais.IDADE) || \"Não informado\"}_\\n\\n`;\n\n// Telefones\nconst allTelefones = [\n    ...telefonesFixo.map(tel => tel.NUMERO),\n    ...telefonesMovel.map(tel => tel.NUMERO)\n].filter(num => formatField(num)).slice(0, 5);\n\nif (allTelefones.length > 0) {\n    formattedText += `## *Telefone*\\n${formatList(allTelefones, 5)}\\n\\n`;\n}\n\n// Emails\nif (emails.length > 0) {\n    formattedText += `## *Email*\\n${formatEmailList(emails.filter(email => formatField(email)), 5)}\\n\\n`;\n}\n\n// Endereços (comentado)\n// if (enderecos.length > 0) {\n//     formattedText += `## *Endereços*\\n`;\n//     enderecos.slice(0, 3).forEach((endereco, index) => {\n//         formattedText += `*${index + 1}.*\\n`;\n//         formattedText += `*Logradouro:* _${formatField(endereco.LOGRADOURO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Número:* _${formatField(endereco.NUMERO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Complemento:* _${formatField(endereco.COMPLEMENTO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Bairro:* _${formatField(endereco.BAIRRO) || \"Não informado\"}_\\n`;\n//         formattedText += `*CEP:* _${formatField(endereco.CEP) || \"Não informado\"}_\\n`;\n//         formattedText += `*Cidade:* _${formatField(endereco.CIDADE) || \"Não informado\"}_\\n`;\n//         formattedText += `*Estado:* _${formatField(endereco.ESTADO) || \"Não informado\"}_\\n\\n`;\n//     });\n// }\n\n// Possíveis Parentes\nif (parentes.length > 0) {\n    const formattedParentes = parentes.slice(0, 5).map(parente => {\n        return `- _${formatField(parente.NOME) || \"Desconhecido\"} - ${formatField(parente.PARENTESCO) || \"Não informado\"}_`;\n    });\n    formattedText += `## *Possíveis Parentes*\\n${formattedParentes.join('\\n')}\\n\\n`;\n}\n\n// Empresas\nif (empresas.length > 0) {\n    formattedText += `## *Empresas*\\n`;\n    empresas.slice(0, 5).forEach((empresa, index) => {\n        formattedText += `*${index + 1}.*\\n`;\n        formattedText += `*Razão Social:* _${formatField(empresa.RAZAO_SOCIAL) || \"Não informado\"}_\\n`;\n        formattedText += `*CNPJ:* _${formatField(empresa.CNPJ) || \"Não informado\"}_\\n`;\n        formattedText += `*Cidade:* _${formatField(empresa.CIDADE) || \"Não informado\"}_\\n`;\n        formattedText += `*Qualificação:* _${formatField(empresa.QUALIFICACAO) || \"Não informado\"}_\\n`;\n        formattedText += `*Data Entrada:* _${formatField(empresa.DATA_ENTRADA) || \"Não informado\"}_\\n\\n`;\n    });\n}\n\n// Resultado final sem quebra de linha extra no fim\nreturn { formattedText: formattedText.trimEnd() };\n"
      },
      "id": "ed65f04f-5dec-4f00-8fc1-d003109694ec",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2220,
        720
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedText }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2fc7f03a-fa16-4ba2-8542-7fd261e5a599",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2420,
        720
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set1",
      "type": "n8n-nodes-base.set",
      "position": [
        1620,
        740
      ],
      "typeVersion": 1,
      "id": "f99291c9-0d89-4f27-8c9c-a332c9bb60b1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "attrkey": "$",
          "explicitRoot": true,
          "mergeAttrs": false
        }
      },
      "name": "XML1",
      "type": "n8n-nodes-base.xml",
      "position": [
        1800,
        740
      ],
      "typeVersion": 1,
      "id": "43490f38-a0fc-4007-ac72-c47c9f1b5ded",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const data = $json;\n\n// Helper function to clean up and limit array data, with optional formatter\nfunction formatArray(items, fields, limit = 5, formatter = (str) => str) {\n    const uniqueItems = [...new Set(\n        items\n            .filter(item => fields.some(field => item[field]))\n            .map(item => fields.map(field => item[field]).filter(Boolean).join(\" - \"))\n    )];\n    return uniqueItems.slice(0, limit).map(formatter).join('\\n'); // ← quebras reais aqui\n}\n\n// Extracting and formatting data\nconst personalData = data.msg['Dados Pessoais'] || {};\nconst documents = data.msg['Documentos'] || {};\nconst relatives = data.msg.Parentes || [];\nconst phones = data.msg.Telefones || [];\nconst emails = data.msg.Emails || [];\nconst addresses = data.msg.Enderecos || [];\n\n// Construção com quebras de linha REAIS (não \"\\n\" como texto)\nlet formattedData = [\n    `### Dados Pessoais`,\n    `*Nome:* ${personalData.Nome || ''}`,\n    `*CPF:* ${documents.CPF || ''}`,\n    `*Nascimento:* ${personalData.Nascimento || ''}`,\n    `*Nome da Mãe:* ${personalData['Nome da Mae'] || ''}`,\n];\n\nif (phones.length > 0) {\n    const formattedPhones = formatArray(phones, ['Telefone'], 5, tel => `- ${tel}`);\n    if (formattedPhones) {\n        formattedData.push('', '\\n## *Telefones*', formattedPhones);\n    }\n}\n\n\nif (emails.length > 0) {\n    const formattedEmails = formatArray(emails, ['E-mail'], 5, email => `_- ${email}_`);\n    if (formattedEmails) {\n        formattedData.push('', '\\n## *E-mails*', formattedEmails);\n    }\n}\n\nif (relatives.length > 0) {\n    const formattedRelatives = formatArray(relatives, ['Nome Vinculo', 'Vinculo'], 5, r => `- ${r}`);\n    if (formattedRelatives) {\n        formattedData.push('', '\\n## *Possíveis Parentes*', formattedRelatives);\n    }\n}\n\n// Remove linhas vazias com undefined\nconst final = formattedData\n    .filter(line => line && !line.includes('undefined'))\n    .join('\\n');\n\n// Retorno final\nreturn [{ json: { formattedData: final.trim() } }];\n"
      },
      "id": "f34ae698-cad1-4b77-93a9-1352f6fe4081",
      "name": "Code6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        540
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedData }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4eb0c837-d247-4f17-b0f9-6e00581b6745",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1800,
        540
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "71acf42e-a6b5-453b-beb1-1804ba6e115e",
              "leftValue": "={{ $('evodata').item.json.msg['Dados Pessoais'].Nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9a547b29-e6e6-4565-9460-28aefac5c2f9",
      "name": "If38",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1980,
        540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8e0363a5-1e0a-42f9-a5aa-1488030ed12a",
              "leftValue": "={{ $json.RETORNO.CADASTRAIS.NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "217c6095-2e31-49f0-985d-959268a2495d",
      "name": "If35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1980,
        740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2bad095c-80f7-4556-aead-68e2cf29a4c7",
      "name": "If36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2600,
        720
      ]
    },
    {
      "parameters": {
        "url": "=https://api.searchlock.me/evodata?token=eDRFTvybunIMOnibuYVGTCFXcf&tipo=cpf&dados={{ $('If15').item.json.numeroOriginal }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 5000
        }
      },
      "id": "cdd3daba-aacb-4f1e-b0b5-397f460a4078",
      "name": "evodata",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        540
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "url": "=http://confere.link/api/?acao=CONS_CPF&TK=IGGE-FAO-566021-PUN-4WT4&DADO={{ $('If15').item.json.numeroOriginal }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "9a4dcbab-f90f-49f9-b945-e9fd5616911d",
      "name": "confere.link",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        740
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7111eec3-c3a8-480e-8d0d-32a06cf5326e",
      "name": "Edit Fields16",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1800,
        940
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.Data[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.Data[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a9379c87-51c4-4581-88cc-bd7e3187057e",
      "name": "If50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1980,
        940
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/sus1/cpf/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 20000
        }
      },
      "id": "12addd0f-c233-4450-a083-d0cad2ce525b",
      "name": "Dados - ehmconsultas",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        940
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Obtendo os dados da array do nó \"Dados - ehmconsultas\"\nlet dados = $('Dados - ehmconsultas').item.json.Data;\n\nif (!Array.isArray(dados) || dados.length === 0) {\n    return [{\n        json: {\n            resultado: \"Dados inválidos ou incompletos.\"\n        }\n    }];\n}\n\nlet pessoa = dados[0]; // Pegando o primeiro item da lista\n\n// Função para verificar se o valor é válido (não nulo, não vazio, não undefined)\nfunction valorValido(valor) {\n    return valor !== null && valor !== undefined && String(valor).trim() !== '';\n}\n\n// Função para formatar a data no formato dd/mm/yyyy\nfunction formatarData(data) {\n    if (!valorValido(data)) return null;\n    if (/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(data)) return data;\n    const date = new Date(data);\n    if (isNaN(date)) return null;\n    return date.toLocaleDateString('pt-BR');\n}\n\nlet resultado = '';\n\n// Nome\nif (valorValido(pessoa.NOME)) {\n    resultado += `*Nome:* _${pessoa.NOME}_\\n`;\n}\n\n// CPF\nif (valorValido(pessoa.CPF)) {\n    resultado += `CPF: _${pessoa.CPF}_\\n`;\n}\n\n// Data de nascimento\nconst dataNascimento = formatarData(pessoa.DATA_NASCIMENTO);\nif (dataNascimento) {\n    resultado += `Nascimento: _${dataNascimento}_\\n`;\n}\n\n// Nome da Mãe\nif (valorValido(pessoa.NOME_MAE)) {\n    resultado += `Nome da Mãe: _${pessoa.NOME_MAE}_\\n`;\n}\n\n// Nome do Pai\nif (valorValido(pessoa.NOME_PAI)) {\n    resultado += `Nome do Pai: _${pessoa.NOME_PAI}_\\n`;\n}\n\n// Telefones\nlet telefones = [];\nif (valorValido(pessoa.TELEFONE)) telefones.push(pessoa.TELEFONE);\n\nif (telefones.length > 0) {\n    resultado += `\\n*Telefones:*\\n`;\n    Array.from(new Set(telefones)).slice(0, 3).forEach(tel => {\n        resultado += ` - _${tel}_\\n`;\n    });\n}\n\n// E-mails\nlet emails = [];\nif (valorValido(pessoa.EMAIL)) emails.push(pessoa.EMAIL);\nif (valorValido(pessoa.EMAIL2)) emails.push(pessoa.EMAIL2);\n\nif (emails.length > 0) {\n    resultado += `\\n*E-mails:*\\n`;\n    Array.from(new Set(emails)).slice(0, 3).forEach(email => {\n        resultado += ` _- ${email}_\\n`;\n    });\n}\n\nreturn [{\n    json: {\n        resultado: resultado.trim()\n    }\n}];\n"
      },
      "id": "b511fd12-53c8-4508-9d4e-2688251a4056",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        940
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "61797c7e-a0eb-4ebe-8867-72ddb2518c2e",
      "name": "Edit Fields17",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1800,
        1140
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas1').item.json.DATA.DADOS_PESSOAIS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas1').item.json.DATA.DADOS_PESSOAIS[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b4099b5b-7855-43e9-a8b2-11c49a946bcd",
      "name": "If51",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1980,
        1140
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/dados/cpf/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 20000
        }
      },
      "id": "84b49feb-ae29-43ae-9542-cf28b9526d66",
      "name": "Dados - ehmconsultas1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        1140
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "function formatarDados(dados) {\n    if (!dados.DATA || !dados.DATA.DADOS_PESSOAIS || !dados.DATA.DADOS_PESSOAIS.length) {\n        return \"Dados inválidos ou incompletos.\";\n    }\n\n    let pessoa = dados.DATA.DADOS_PESSOAIS[0];\n    let parentes = dados.DATA.PARENTES || [];\n    let emails = dados.DATA.EMAIL_BASE || [];\n    let telefones = dados.DATA.TELEFONES || [];\n\n    let resultado = '';\n\n    // Função para formatar a data no formato dd/mm/yyyy\n    function formatarData(data) {\n        if (!data) return \"N/A\";\n        const date = new Date(data);\n        return date.toLocaleDateString('pt-BR');\n    }\n\n    // Nome e CPF (sempre devem existir, então já são adicionados diretamente)\n    resultado += `*Nome:* _${pessoa.NOME || \"N/A\"}_\\n`;\n    resultado += `CPF: _${pessoa.CPF || \"N/A\"}_\\n`;\n    resultado += `Nascimento: _${formatarData(pessoa.NASCIMENTO)}_\\n`;\n    resultado += `Nome da Mãe: _${pessoa.NOME_MAE || \"N/A\"}_\\n`;\n    resultado += `Nome do Pai: _${pessoa.NOME_PAI || \"N/A\"}_\\n\\n`;\n\n    // Telefones\n    if (telefones.length > 0) {\n        const telefonesSet = new Set();\n        telefones.forEach(tel => telefonesSet.add(tel.TELEFONE)); // Remover duplicatas\n        \n        if (telefonesSet.size > 0) {\n            resultado += \"*Telefones:*\\n\";\n            Array.from(telefonesSet).slice(0, 3).forEach(telefone => {\n                resultado += ` - _${telefone || \"Desconhecido\"}_\\n`;\n            });\n            resultado += \"\\n\";\n        }\n    }\n  \n    // E-mails\n    if (emails.length > 0) {\n        resultado += \"*E-mails:*\\n\";\n        emails.slice(0, 3).forEach(email => {\n            resultado += ` _- ${email.EMAIL || \"Desconhecido\"}_\\n`;\n        });\n        resultado += \"\\n\";\n    }\n\n    // Parentes\n    if (parentes.length > 0) {\n        resultado += \"*Parentes:*\\n\";\n        parentes.slice(0, 3).forEach(parente => {\n            resultado += ` - _${parente.NOME || \"N/A\"} (${parente.VINCULO || \"N/A\"})_\\n`;\n        });\n    }\n\n    return resultado;\n}\n\n// Pegando os dados do input do n8n\nlet dadosConsulta = items[0].json;\nlet resultadoFormatado = formatarDados(dadosConsulta);\n\n// Retornando os dados no formato correto para o n8n\nreturn [{\n    json: {\n        resultado: resultadoFormatado\n    }\n}];\n"
      },
      "id": "3cf06ace-9524-41bc-b6e2-f259c1f23206",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        1140
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "=*CPF:* _{{ $('If15').item.json.numeroOriginal }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f3103ef3-6b33-468b-8fb9-2e424cdea493",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2260,
        1180
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "8b8095b1-ba11-4306-8602-9e78be3503cd",
              "leftValue": "={{ $('minerdapifoda3').item.json.DADOS[0].NOME }}",
              "rightValue": "Nome:",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9c96ba62-4f0b-4537-9c85-b39c94ee706c",
      "name": "If24",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1980,
        340
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para calcular idade com base na data de nascimento\nfunction calcularIdade(dataNasc) {\n    const hoje = new Date();\n    const [dia, mes, ano] = dataNasc.split('/');\n    const nascimento = new Date(`${ano}-${mes}-${dia}`);\n    let idade = hoje.getFullYear() - nascimento.getFullYear();\n    const mesAtual = hoje.getMonth();\n    const diaAtual = hoje.getDate();\n    if (mesAtual < nascimento.getMonth() || \n       (mesAtual === nascimento.getMonth() && diaAtual < nascimento.getDate())) {\n        idade--;\n    }\n    return idade;\n}\n\n// Função para evitar duplicatas\nfunction removerDuplicatas(array) {\n    return array.filter((item, index, self) =>\n        index === self.findIndex((t) => JSON.stringify(t) === JSON.stringify(item))\n    );\n}\n\n// Pegar os dados diretamente do nó 'minerdapifoda2'\nconst origem = $('minerdapifoda3').item.json;\n\nconst dados = origem.DADOS?.[0] || {};\nconst emails = removerDuplicatas(origem.EMAIL || []).slice(0, 5);\nconst telefones = removerDuplicatas(origem.HISTORICO_TELEFONES || [])\n    .filter(tel => tel.TELEFONE && tel.TELEFONE !== \"undefined\")\n    .slice(0, 5)\n    .map(tel => `${tel.DDD}${tel.TELEFONE}`);\nconst parentes = removerDuplicatas(origem.PARENTES || []).slice(0, 5);\n\n// Início da formatação\nlet resultadoFormatado = \"\";\n\n// Adicionar dados principais\nif (dados.NOME && dados.CPF && dados.NASC) {\n    const idade = calcularIdade(dados.NASC);\n    resultadoFormatado += `*Nome:* _${dados.NOME}_\\n`;\n    resultadoFormatado += `*CPF:* _${dados.CPF}_\\n`;\n    resultadoFormatado += `*Data Nascimento:* _${dados.NASC}_\\n`;\n    resultadoFormatado += `*Idade:* _${idade} anos_\\n\\n`;\n}\n\n// Adicionar telefones\nif (telefones.length) {\n    resultadoFormatado += `## *Telefone*\\n`;\n    telefones.forEach(tel => {\n        resultadoFormatado += `- ${tel}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar emails\nif (emails.length) {\n    resultadoFormatado += `## *Email*\\n`;\n    emails.forEach(email => {\n        resultadoFormatado += `_- ${email.EMAIL}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar parentes\nif (parentes.length) {\n    resultadoFormatado += `## *Possíveis Parentes*\\n`;\n    parentes.forEach(parente => {\n        const nome = parente.NOME_VINCULO || \"Não informado\";\n        const vinculo = parente.VINCULO || \"Não informado\";\n        resultadoFormatado += `- _${nome} - ${vinculo}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Retornar resultado formatado\nreturn {\n    json: {\n        resultadoFormatado: resultadoFormatado.trim()\n    }\n};\n"
      },
      "id": "28bd9b2d-296e-4123-adc3-e72631db2214",
      "name": "Code12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1620,
        340
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a3c190a-4b1a-4e2f-bbee-6fa4d37c118f",
              "name": "Informações",
              "value": "={{ $json.resultadoFormatado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "976511a9-bf3c-436d-a9a6-b82b41025aed",
      "name": "Edit Fields12",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1800,
        340
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://nada.sistemafull.site:80/api/cpffull?CPF={{ $('If15').item.json.numeroOriginal }}",
        "options": {
          "timeout": 5000
        }
      },
      "id": "237d2a51-a832-4656-8549-ddb5baed7fff",
      "name": "minerdapifoda3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        340
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    }
  ],
  "connections": {
    "Dados N8N": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          },
          {
            "node": "EvolutionAPI - Realizando consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito maior ou igual": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se site / bc": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Site",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito inferior": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Site": {
      "main": [
        [
          {
            "node": "Crédito maior ou igual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Se site / bc",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Erro1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Erro1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot": {
      "main": [
        [
          {
            "node": "EvolutionAPI - CPF Invalido",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Limit4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request9": {
      "main": [
        [
          {
            "node": "If64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If64": {
      "main": [
        [
          {
            "node": "Informações4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Informações",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações4": {
      "main": [
        [
          {
            "node": "If73",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If65": {
      "main": [
        [
          {
            "node": "Informações57",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If66",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações57": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If66": {
      "main": [
        [
          {
            "node": "Informações58",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If67",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações58": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If67": {
      "main": [
        [
          {
            "node": "Informações59",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If68",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações59": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If68": {
      "main": [
        [
          {
            "node": "Informações60",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If69",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações60": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If69": {
      "main": [
        [
          {
            "node": "Informações61",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações61": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If70": {
      "main": [
        [
          {
            "node": "Informações62",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If72",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações62": {
      "main": [
        [
          {
            "node": "If72",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If71": {
      "main": [
        [
          {
            "node": "Informações63",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If70",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações63": {
      "main": [
        [
          {
            "node": "If70",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If72": {
      "main": [
        [
          {
            "node": "Informações64",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If65",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações64": {
      "main": [
        [
          {
            "node": "If65",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If73": {
      "main": [
        [
          {
            "node": "Informações65",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If74",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações65": {
      "main": [
        [
          {
            "node": "If74",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If74": {
      "main": [
        [
          {
            "node": "Informações66",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If71",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações66": {
      "main": [
        [
          {
            "node": "If71",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "minerdapifoda3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados N8N",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Sem credito",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crédito inferior",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot4": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook7": {
      "main": [
        []
      ]
    },
    "Limit4": {
      "main": [
        [
          {
            "node": "HTTP Request21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request21": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request6": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Code Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Horário funcionamento": {
      "main": [
        [
          {
            "node": "Verificar Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Horário funcionamento1": {
      "main": [
        [
          {
            "node": "se typebot3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Horário funcionamento": {
      "main": [
        [
          {
            "node": "Horário funcionamento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fora do horário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fora do horário": {
      "main": [
        [
          {
            "node": "se typebot3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot1": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Erro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - Erro Consulta": {
      "main": [
        [
          {
            "node": "typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot3": {
      "main": [
        [
          {
            "node": "typebot1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Consulta ERRO2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta ERRO2": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields10": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - CPF Invalido": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Sem credito": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Erro": {
      "main": [
        [
          {
            "node": "Base44 API - Erro Consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Resposta1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Resposta1": {
      "main": [
        [
          {
            "node": "Se URLPDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se URLPDF": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Resposta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "If36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set1": {
      "main": [
        [
          {
            "node": "XML1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML1": {
      "main": [
        [
          {
            "node": "If35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If38": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "confere.link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If35": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If36": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "evodata": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "confere.link": {
      "main": [
        [
          {
            "node": "Set1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields16": {
      "main": [
        [
          {
            "node": "If50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If50": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Edit Fields16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields17": {
      "main": [
        [
          {
            "node": "If51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If51": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Edit Fields17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If24": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "evodata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Edit Fields12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields12": {
      "main": [
        [
          {
            "node": "If24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda3": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "n8n.redequeroimoveis.com",
            "content-length": "242",
            "sentry-trace": "a58b9d2d5c224f65bdaaeddf7a054a49-b2d195fc052bb23a-0",
            "baggage": "sentry-trace_id=a58b9d2d5c224f65bdaaeddf7a054a49,sentry-environment=production_new,sentry-release=e6288d475a59940d33ade37f835ec0ad422241f6,sentry-public_key=af3c6636fa6e4f89948eaa4e575b3286,sentry-transaction=/api/v1/blocks_integration/test_request/,sentry-sample_rate=0.005,sentry-sampled=false",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "content-type": "application/json"
          },
          "params": {},
          "query": {},
          "body": {
            "CPF": "2369232420",
            "Webhook": "https://new-backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/LxErT7lgt34x/",
            "Telefone": "553799781110",
            "URL_LogoPDF": "11HQEpkA-HEprYtECt9loSst9Jdm3huIX1KfXnsSX_30",
            "Tipo consulta": "CPF"
          },
          "webhookUrl": "http://localhost:5678/webhook-test/scr-bacen",
          "executionMode": "test"
        }
      }
    ],
    "Erro1": [
      {
        "json": {}
      }
    ],
    "EvolutionAPI - Realizando consulta": [
      {
        "json": {
          "key": {
            "remoteJid": "553799781110@s.whatsapp.net",
            "fromMe": true,
            "id": "3EB0C26CADD35A15DA2349809898D6EABC9AEBAC"
          },
          "pushName": "",
          "status": "PENDING",
          "message": {
            "conversation": "Aguarde, realizando consulta..."
          },
          "contextInfo": null,
          "messageType": "conversation",
          "messageTimestamp": 1751031320,
          "instanceId": "3a5325cb-be47-4e5a-81e6-70e60a7440d1",
          "source": "unknown"
        }
      }
    ],
    "evodata": [
      {
        "json": {
          "retorno": "OK",
          "msg": {
            "Dados Pessoais": {
              "Nome": "NEILTON RODRIGUES DOS SANTOS",
              "Sexo": "NEILTON RODRIGUES DOS SANTOS",
              "Nascimento": "16/10/1999",
              "Nome da Mae": "LUCINEIDE DAVI DOS SANTOS",
              "Nome do Pai": "VALDIVINO PAULO RODRIGUES DOS SANTOS",
              "Conjuge": null,
              "CPF do Conjuge": null,
              "CD Sit Cad": "2",
              "DT Sit Cad": "2020-01-25 00:00:00",
              "Endereco de Nascimento": "RUA MAXIMILIANO KOLBE",
              "Raca/Cor": "PARDA",
              "Falecido": null,
              "Data Falecimento": null,
              "Id Portador Deficiencia": null
            },
            "Documentos": {
              "CPF": "70583924123",
              "CBO": null,
              "CNS": "705405438353990",
              "NIS": null,
              "PIS": null,
              "RG": {
                "Numero": null,
                "Orgao Emissor": null,
                "UF": null,
                "Data da Emissao": null
              },
              "CTPS": {
                "Numero": null,
                "Serie": null,
                "Data da Emissao": null
              },
              "Titulo de Eleitor": {
                "Numero": null,
                "Zona": null,
                "Secao": null
              },
              "Certidao de Nascimento": null,
              "Certidao de Casamento": null
            },
            "Parentes": [],
            "Veiculos": [],
            "Dados Universitarios": [],
            "Dados Trabalhistas": [],
            "Poder Aquisitivo": {
              "ID Contatos": "368689306",
              "Codigo do Poder Aquisitivo": "2",
              "Poder Aquisitivo": "BAIXO",
              "Renda Poder Aquisitivo": "746,1001015860885",
              "Fx Poder Aquisitivo": "De R$ 630 até R$ 1018",
              "Instituicao Bancaria": null,
              "Codigo da Agencia": null,
              "Ano Referencia": null,
              "Data Lote": null,
              "Tarjetas": []
            },
            "Perfil de Consumo": [],
            "Telefones": [
              {
                "Nome": "NEILTON RODRIGUES DOS SANTOS",
                "CPF": "70583924123",
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": "NEILTON RODRIGUES DOS SANTOS",
                "CPF": "70583924123",
                "Telefone": "5562993115118",
                "Tipo": null
              }
            ],
            "Emails": [
              {
                "Nome": "NEILTON RODRIGUES DOS SANTOS",
                "CPF": "70583924123",
                "E-mail": null
              }
            ],
            "Enderecos": [
              {
                "Rua": "RUA MAXIMILIANO KOLBE",
                "Bairro": "VIII CENTENARIO",
                "CEP": "75490000",
                "Cidade": "São Francisco de Goiás",
                "Estado": "Goiás"
              }
            ],
            "Vizinhos": []
          }
        }
      }
    ],
    "confere.link": [
      {
        "json": {
          "data": "<?xml version='1.0' encoding='ISO-8859-1'?><RETORNO>\r\n<CADASTRAIS>\r\n<CPF>11383223696</CPF>\r\n<NOME>ARTHUR BALDIOTTI MENDONCA ALVARES</NOME>\r\n<NOME_MAE>MARIA LUIZA BALDIOTTI MENDONCA</NOME_MAE>\r\n<NASCTO>03/04/1993</NASCTO>\r\n<IDADE>31 anos</IDADE>\r\n<SEXO>Masculino</SEXO>\r\n\r\n<RG></RG>\r\n<ORGAO_EMISSOR></ORGAO_EMISSOR>\r\n<UF_EMISSAO></UF_EMISSAO>\r\n<TITULO_ELEITOR></TITULO_ELEITOR>\r\n<NIT></NIT>\r\n<ESCOLARIDADE> </ESCOLARIDADE>\r\n<NACIONALIDADE></NACIONALIDADE>\r\n<PROFISSAO></PROFISSAO>\r\n<SALARIO></SALARIO>\r\n<CLASSE_ECONOMICA></CLASSE_ECONOMICA>\r\n<CONSTA_OBITO></CONSTA_OBITO>\r\n\r\n</CADASTRAIS>\r\n<INSS>\r\n\r\n</INSS><TELEFONES_FIXO><TELEFONE><NUMERO>3133344803</NUMERO><OPERADORA>TELEMAR/MG</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>FIXO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE></TELEFONES_FIXO><TELEFONES_MOVEL><TELEFONE><NUMERO>31997781110</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999493378</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999812824</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA>23/03/2013</DATA_REFERENCIA><TIPO_TEL>MOVEL POS-PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999951110</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>31975122221</NUMERO><OPERADORA>TIM CELULAR S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE></TELEFONES_MOVEL><EMAILS><EMAIL>tiosam_importados@hotmail.com</EMAIL>\r\n<EMAIL>arthurbaldiotti@hotmail.com</EMAIL>\r\n</EMAILS><ENDERECOS><ENDERECO><LOGRADOURO>R FRANCISCO SALES</LOGRADOURO><NUMERO>129</NUMERO><COMPLEMENTO>AP 602</COMPLEMENTO><BAIRRO>CENTRO</BAIRRO><CEP>35660017</CEP><CIDADE>PARA DE MINAS</CIDADE><ESTADO>MG</ESTADO></ENDERECO></ENDERECOS><POSSIVEIS_PARENTES><CONTATO><CPF>43315763615</CPF>\r\n<NOME>MARIA LUIZA BALDIOTTI MENDONCA</NOME>   \r\n<IDADE>63 anos</IDADE>\r\n<LOCAL>PARA DE MINAS/MG</LOCAL>\r\n<PARENTESCO>MAE</PARENTESCO>\r\n</CONTATO>\r\n<CONTATO>\r\n<CPF>11628911654</CPF>\r\n<NOME>AUGUSTO BALDIOTTI MENDONCA ALVARES</NOME>   \r\n<IDADE>24 anos</IDADE>\r\n<LOCAL></LOCAL>\r\n<PARENTESCO>IRMAO(A)</PARENTESCO>\r\n</CONTATO></POSSIVEIS_PARENTES><POSSIVEIS_CONTATOS></POSSIVEIS_CONTATOS><REFERENCIA_PROFISSIONAL></REFERENCIA_PROFISSIONAL><EMPRESAS_SOCIO><EMPRESA_SOCIO>\r\n<RAZAO_SOCIAL>REDE QUERO IMOVEIS LTDA</RAZAO_SOCIAL>\r\n<CNPJ>40126612000140</CNPJ>\r\n<CIDADE>PARA DE MINAS-MG</CIDADE>\r\n<QUALIFICACAO>Socio-Administrador</QUALIFICACAO>\r\n<DATA_ENTRADA>16/12/2020</DATA_ENTRADA>\r\n<VALOR_PARTICIPACAO></VALOR_PARTICIPACAO>\r\n</EMPRESA_SOCIO></EMPRESAS_SOCIO></RETORNO>"
        }
      }
    ],
    "Dados - ehmconsultas": [
      {
        "json": {
          "Version": "1.0",
          "Status": 200,
          "Data": [
            {
              "NOME": "ANDERSON DOS SANTOS JORGE",
              "NOME_SOCIAL": null,
              "CPF": "32676277880",
              "DATA_NASCIMENTO": "25/06/1983",
              "SEXO": "M",
              "IDENTIDADE_GENERO": null,
              "NOME_MAE": "MARIA JUSILENE DOS SANTOS JORGE",
              "NOME_PAI": null,
              "CNS": "706003838968046",
              "OBITO": "false",
              "DATA_OBITO": null,
              "ESTADO_CIVIL": null,
              "ESCOLARIDADE": null,
              "TELEFONE": "1238420788",
              "MUNICIPIO_NASCIMENTO": "999999",
              "LOGRADOURO": "R GOES",
              "NUMERO": "21",
              "BAIRRO": "PEREQUE MIRIM",
              "COMPLEMENTO": null,
              "MUNICIPIO": "355540",
              "UF": "SP",
              "PAIS": "1",
              "CEP": "11680000",
              "NUMERO_RG": null,
              "ORGAO_EMISSOR_RG": null,
              "UF_RG": null,
              "EMAIL": null,
              "EMAIL2": null
            }
          ]
        }
      }
    ],
    "Dados - ehmconsultas1": [
      {
        "json": {
          "DATA": {
            "Version": "1.0",
            "Status": 200,
            "DADOS_PESSOAIS": [
              {
                "CPF": "32676277880",
                "NOME": "ANDERSON DOS SANTOS JORGE",
                "SEXO": "M",
                "NASCIMENTO": "1983-06-25 00:00:00",
                "NOME_CIVIL": "Sem Informação",
                "NOME_MAE": "MARIA JUSILENE DOS SANTOS JORGE",
                "NOME_PAI": "MANOEL VICENTE JORGE",
                "ESTADO_CIVIL": "Sem Informação",
                "RG": "Sem Informação",
                "ORGAO_EMISSOR": "Sem Informação",
                "UF_EMISSAO": "Sem Informação",
                "NACIONALIDADE": "Sem Informação",
                "CPF_CONJUGE": "Sem Informação",
                "SEXO_RETRATADO": "M",
                "OB_UNB": "Sem Informação",
                "DATA_OBTO": "Sem Informação",
                "CBO": "252105",
                "ID_CBO": "2500",
                "CODIGO_MOSAIC": "E17",
                "RENDA": "3933",
                "TITULO_ELEITOR": "Sem Informação",
                "CODIGO_MOSAIC_NOVO": "Sem Informação",
                "CODIGO_MOSAIC_SECUNDARIO": "314848160191"
              }
            ],
            "PARENTES": [
              {
                "NOME": "REGIANE DOS SANTOS JORGE",
                "CPF": "28430412875",
                "VINCULO": "IRMA(O)"
              },
              {
                "NOME": "ALEX DOS SANTOS JORGE",
                "CPF": "33061066829",
                "VINCULO": "IRMA(O)"
              },
              {
                "NOME": "MARIA JUSILENE DOS SANTOS JORGE",
                "CPF": "13501071825",
                "VINCULO": "MAE"
              },
              {
                "NOME": "CRISTIANE DOS SANTOS COSTA",
                "CPF": "28198843850",
                "VINCULO": "IRMA(O)"
              }
            ],
            "PIS": [
              {
                "PIS": "19028510799",
                "DT_INCLUSAO": "Sem informação"
              },
              {
                "PIS": "19028510799",
                "DT_INCLUSAO": "Sem informação"
              }
            ],
            "NIS": [
              "Sem Informação"
            ],
            "CNS": [
              "Sem Informação"
            ],
            "DADOS_ELEITORAIS": [
              "Sem Informação"
            ],
            "SCORE_BASE": [
              {
                "SCORE_SERASA": "31",
                "SCORE_SERASA_FAIXA": "ALTISSIMO",
                "SCORE_BOA_VISTA": "46",
                "SCORE_BOA_VISTA_FAIXA": "ALTISSIMO"
              }
            ],
            "SCORE_NOVO": [
              {
                "SCORE_SERASA": "46"
              }
            ],
            "SCORE_ANTIGO": [
              {
                "SCORE_SERASA": "31",
                "SCORE_SERASA_FAIXA": "ALTISSIMO",
                "SCORE_BOA_VISTA": "125",
                "SCORE_BOA_VISTA_FAIXA": "ALTISSIMO"
              }
            ],
            "IRPF": [
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2016",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "IMPOSTO A PAGAR"
              },
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2014",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "SUA DECLARACAO NAO CONSTA NA BASE DE DADOS DA RECEITA FEDERAL"
              },
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2018",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "SALDO INEXISTENTE DE IMPOSTO A PAGAR OU A RESTITUIR."
              }
            ],
            "PODER_AQUISITIVO": [
              "Sem Informação"
            ],
            "CLASSE_SOCIAL": [
              {
                "CLASSE_SOCIAL": "B",
                "SUB_CLASSE_SOCIAL": "B2"
              },
              {
                "CLASSE_SOCIAL": "B",
                "SUB_CLASSE_SOCIAL": "B2"
              }
            ],
            "PROFISSAO": [
              "Sem Informação"
            ],
            "PRODUTOR_RURAL": [
              "Sem Informação"
            ],
            "QUADRO_SOCIETARIO": [
              {
                "CNPJ": "14294259000105",
                "RAZAO_SOCIAL": "ANDERSON DOS SANTOS JORGE",
                "NOME_FANTASIA": "AMBIENTES UBATUBA",
                "PARTICIPACAO_SOCIO": "100.00"
              }
            ],
            "BOLSA_FAMILIA": [
              "Sem Informação"
            ],
            "FGTS": [
              "Sem Informação"
            ],
            "ESCOLARIDADE": [
              {
                "ESCOLARIDADE": "SUPERIOR COMPLETO"
              }
            ],
            "UNIVERSIDADE": [
              "Sem Informação"
            ],
            "SERVIDOR_PUBLICO": [
              "Sem Informação"
            ],
            "MINHA_CASA_MINHA_VIDA": [
              "Sem Informação"
            ],
            "ENDERECOS": [
              {
                "TIPO": "R",
                "NOME": "GOMIDE",
                "NUMERO": "47",
                "COMPLEMENTO": "Sem Informação",
                "BAIRRO": "Sem informação",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              },
              {
                "TIPO": "R",
                "NOME": "GOIS",
                "NUMERO": "21",
                "COMPLEMENTO": "C",
                "BAIRRO": "PEREQUE MIRIM",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              },
              {
                "TIPO": "Sem informação",
                "NOME": "VEL TRINTA REIS",
                "NUMERO": "5",
                "COMPLEMENTO": "C 3",
                "BAIRRO": "ENSEADA",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              },
              {
                "TIPO": "Sem informação",
                "NOME": "DOS TRINTA REIS",
                "NUMERO": "5",
                "COMPLEMENTO": "C 3",
                "BAIRRO": "Sem informação",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              },
              {
                "TIPO": "R",
                "NOME": "CONCEICAO",
                "NUMERO": "120",
                "COMPLEMENTO": "LJ 16 AUS PR SHOP",
                "BAIRRO": "Sem informação",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              }
            ],
            "EMAIL_BASE": [
              {
                "EMAIL": "andersonsjorge@bol.com.br",
                "EMAIL_SCORE": "OTIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "ambientesimoveis@gmail.com",
                "EMAIL_SCORE": "BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "at-estevam@bol.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "contato@ambientesimoveis.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "andersondjorge@hotmail.com",
                "EMAIL_SCORE": "PESSIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              }
            ],
            "EMAIL_NEW": [
              {
                "EMAIL": "andersonsjorge@bol.com.br",
                "EMAIL_SCORE": "OTIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "ambientesimoveis@gmail.com",
                "EMAIL_SCORE": "BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "at-estevam@bol.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "contato@ambientesimoveis.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "andersondjorge@hotmail.com",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              }
            ],
            "EMAIL_NOVO": [
              {
                "EMAIL": "andersonsjorge@bol.com.br",
                "EMAIL_SCORE": "OTIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "ambientesimoveis@gmail.com",
                "EMAIL_SCORE": "BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "at-estevam@bol.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "contato@ambientesimoveis.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "andersondjorge@hotmail.com",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              }
            ],
            "TELEFONES": [
              {
                "TELEFONE": "1238420788",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "12997122929",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "1238422303",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "1238422288",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "12997318985",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "1238422303",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "1238420788",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "1238422288",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "12997122929",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "12997318985",
                "CLASSIFICACAO": "D"
              }
            ]
          }
        }
      }
    ],
    "minerdapifoda3": [
      {
        "json": {
          "DADOS": [
            {
              "CPF": "32676277880",
              "NOME": "ANDERSON DOS SANTOS JORGE",
              "SEXO": "M",
              "NASC": "25/06/1983",
              "NOME_MAE": "MARIA JUSILENE DOS SANTOS JORGE",
              "NOME_PAI": "MANOEL VICENTE JORGE",
              "ESTCIV": "",
              "NACIONALID": "",
              "RG": "",
              "ORGAO_EMISSOR": "",
              "UF_EMISSAO": "",
              "DT_OB": "",
              "RENDA": "",
              "DT_INFORMACAO": "14/06/2008",
              "TITULO_ELEITOR": "314848160191"
            }
          ],
          "EMAIL": [
            {
              "EMAIL": "andersonsjorge@bol.com.br"
            },
            {
              "EMAIL": "ambientesimoveis@gmail.com"
            },
            {
              "EMAIL": "at-estevam@bol.com.br"
            },
            {
              "EMAIL": "contato@ambientesimoveis.com.br"
            },
            {
              "EMAIL": "andersondjorge@hotmail.com"
            }
          ],
          "HISTORICO_TELEFONES": [
            {
              "DDD": "12",
              "TELEFONE": "38420788",
              "TIPO_TELEFONE": "1",
              "DT_INCLUSAO": "06/01/2012",
              "DT_INFORMACAO": "24/10/2011",
              "SIGILO": "",
              "NSU": "000000549681564",
              "CLASSIFICACAO": "D"
            },
            {
              "DDD": "12",
              "TELEFONE": "997122929",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "18/07/2013",
              "DT_INFORMACAO": "06/07/2019",
              "SIGILO": "",
              "NSU": "000000829688412",
              "CLASSIFICACAO": "A0"
            },
            {
              "DDD": "12",
              "TELEFONE": "38422303",
              "TIPO_TELEFONE": "1",
              "DT_INCLUSAO": "17/11/2014",
              "DT_INFORMACAO": "10/11/2014",
              "SIGILO": "",
              "NSU": "000000572485181",
              "CLASSIFICACAO": "A0"
            },
            {
              "DDD": "12",
              "TELEFONE": "38422288",
              "TIPO_TELEFONE": "2",
              "DT_INCLUSAO": "28/05/2015",
              "DT_INFORMACAO": "08/08/2015",
              "SIGILO": "",
              "NSU": "000000756253886",
              "CLASSIFICACAO": "D"
            },
            {
              "DDD": "12",
              "TELEFONE": "997318985",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "23/08/2016",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "D"
            }
          ],
          "PARENTES": [
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 28430412875,
              "NOME_VINCULO": "REGIANE DOS SANTOS JORGE"
            },
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 33061066829,
              "NOME_VINCULO": "ALEX DOS SANTOS JORGE"
            },
            {
              "VINCULO": "MAE",
              "CPF_VINCULO": 13501071825,
              "NOME_VINCULO": "MARIA JUSILENE DOS SANTOS JORGE"
            },
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 28198843850,
              "NOME_VINCULO": "CRISTIANE DOS SANTOS COSTA"
            }
          ],
          "PODER_AQUISITIVO": [],
          "ENDERECOS": [
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "CONCEICAO",
              "LOGR_NUMERO": "120",
              "LOGR_COMPLEMENTO": "LJ 16 AUS PR SHOP",
              "BAIRRO": "NULL",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": null
            },
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "GOMIDE",
              "LOGR_NUMERO": "47",
              "LOGR_COMPLEMENTO": null,
              "BAIRRO": "NULL",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": "07/03/2018"
            },
            {
              "LOGR_TIPO": "NULL",
              "LOGR_NOME": "DOS TRINTA REIS",
              "LOGR_NUMERO": "5",
              "LOGR_COMPLEMENTO": "C 3",
              "BAIRRO": "NULL",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": null
            },
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "GOIS",
              "LOGR_NUMERO": "21",
              "LOGR_COMPLEMENTO": "C",
              "BAIRRO": "PEREQUE MIRIM",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": "12/12/2014"
            },
            {
              "LOGR_TIPO": "NULL",
              "LOGR_NOME": "VEL TRINTA REIS",
              "LOGR_NUMERO": "5",
              "LOGR_COMPLEMENTO": "C 3",
              "BAIRRO": "ENSEADA",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": "28/10/2019"
            }
          ],
          "PIS": [
            {
              "PIS": 19028510799
            }
          ],
          "UNIVERSITARIO": [],
          "SCORE": [
            {
              "CSB8": "31",
              "CSB8_FAIXA": "ALTISSIMO",
              "CSBA": 46,
              "CSBA_FAIXA": "ALTISSIMO"
            }
          ],
          "IRPF": [
            {
              "DocNumber": 32676277880,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "",
              "Lote": "",
              "Sit_Receita_Federal": "SUA DECLARACAO NAO CONSTA NA BASE DE DADOS DA RECEITA FEDERAL ",
              "CADASTRO_ID": 3963,
              "CPF": 32676277880,
              "CONTATOS_ID": 20857024
            },
            {
              "DocNumber": 32676277880,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "",
              "Lote": "",
              "Sit_Receita_Federal": "SALDO INEXISTENTE DE IMPOSTO A PAGAR OU A RESTITUIR.",
              "CADASTRO_ID": 4079,
              "CPF": 32676277880,
              "CONTATOS_ID": 20857024
            },
            {
              "DocNumber": 32676277880,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "",
              "Lote": "",
              "Sit_Receita_Federal": "IMPOSTO A PAGAR",
              "CADASTRO_ID": 3963,
              "CPF": 32676277880,
              "CONTATOS_ID": 20857024
            }
          ],
          "TSE": [],
          "INTERESSES": [
            {
              "cpf": 32676277880,
              "creditoPessoalPreAprovado": 1,
              "creditoImobiliarioPreAprovado": 0,
              "financiamentoDeVeiculoPreAprovado": 1,
              "classeMedia": 0,
              "debitoAutmatico": 1,
              "possuiLuxo": 1,
              "possuiInvestimentos": 1,
              "possuiCartaoDeCredito": 1,
              "possuiMultiplosCartoes": 0,
              "possuiContaAltoPadrao": 0,
              "possuiCartaoBlack": 0,
              "possuiCartaoPrime": 0,
              "possuiCelularPrePago": 0,
              "possuiCelularPosPago": 0,
              "possuiMilhasAcumuladas": 1,
              "possuiCasaPropria": 1,
              "possuiDescontos": 1,
              "possuiContasCorrentes": 1,
              "possuiSeguroAutomotivo": 1,
              "possuiPrevidenciaPrivada": 1,
              "possuiInternetBanking": 1,
              "possuiTokenInstalado": 1,
              "realizouViagens": 1,
              "creditoPessoal": 79,
              "financiamentoVeiculo": 88,
              "compraInternet": 51,
              "multiplosCartoes": 42,
              "cartaoPrime": 49,
              "tvCabo": 58,
              "bandaLarga": 70,
              "casaPropria": 49,
              "celularPrePago": 48,
              "celularPosPago": 42,
              "creditoMobiliario": 44,
              "seguroAutomotivo": 73,
              "seguroSaude": 53,
              "seguroVida": 75,
              "seguroResidencial": 56,
              "investimentos": 73,
              "consignado": 53,
              "previdenciaPrivada": 74,
              "resgateMilhas": 66,
              "cacadorDescontos": 55,
              "fitness": 67,
              "turismo": 65,
              "luxo": 5,
              "cinefilo": 72,
              "transportePublico": 31,
              "jogosOnline": 52,
              "videoGame": 60,
              "earlyAdopters": 60
            }
          ]
        }
      }
    ]
  },
  "versionId": "98a472bc-36f6-4f61-8766-8a44c6839ea1",
  "triggerCount": 1,
  "tags": []
}