{
  "createdAt": "2025-07-25T01:12:31.007Z",
  "updatedAt": "2025-07-25T17:20:58.000Z",
  "id": "1nIdlOflhPgZU1PC",
  "name": "Consulta Cheques Bacen 1-1 (iConsultei)",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json['Cheques Sem Fundos'].OCORRENCIAS[0] }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "24325d87-7609-4ffc-a218-50124223a7c0",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1260,
        1140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            },
            {
              "name": "Informações",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}\n\n----------- / / -----------\n\n{{ $('Aggregate6').item.json.Consulta[1].Dados }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Tipo Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Tipo Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ec58231b-f91d-4b21-81ff-9dc849b3f734",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4120,
        880
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "Consulta",
        "options": {}
      },
      "id": "e62f881b-68a4-440b-8208-adfe31628995",
      "name": "Aggregate6",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2260,
        900
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7871e4ab-2a18-4c60-a4b7-074ec47c43a8",
              "name": "Dados",
              "value": "={{ $json.CREDCADASTRAL }}",
              "type": "object"
            },
            {
              "id": "6c7b8c24-5692-4bc2-b32b-0fe9bda5ee1f",
              "name": "Pendencias",
              "value": "={{ $json.CREDCADASTRAL.PEND_FINANCEIRAS.OCORRENCIAS }}",
              "type": "array"
            },
            {
              "id": "7aa45f09-5560-435e-b054-5c39318af86c",
              "name": "Cheques Sem Fundos",
              "value": "={{ $json.CREDCADASTRAL.CH_SEM_FUNDOS_BACEN }}",
              "type": "object"
            },
            {
              "id": "8e925989-b41e-43f6-8c9b-60505ec5fdf8",
              "name": "Score",
              "value": "={{ $json.CREDCADASTRAL.SCORES }}",
              "type": "object"
            },
            {
              "id": "5e5fdf84-a46a-46c1-b2d9-75a86df205cd",
              "name": "CADIN",
              "value": "={{ $json.CREDCADASTRAL.CADIN }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "7491891e-2596-4e4c-b360-035cc4fd1276",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -680,
        1160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.iconsultei.com.br/json/service.aspx",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"CodigoProduto\": \"994\",\n    \"Versao\": \"20180521\",\n    \"ChaveAcesso\": \"l9Emo7ZpGhgw2Fw6CNjemqAtwSqjnb/MTujpNa8gkWf0OtUilAF1XT4ruhKWP3b1\",\n    \"Info\": {\n        \"Solicitante\": \"IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)\"\n    },\n    \"Parametros\": {\n        \"TipoPessoa\": \"{{ $json['Tipo Consulta'] }}\",\n        \"CPFCNPJ\": \"{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}\"\n    },\n    \"WebHook\": {\n        \"UrlCallBack\": \"\"\n    }\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "034e6fbd-5e42-4ef5-bea5-17837e1ca898",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -940,
        1160
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.Dados.CH_SEM_FUNDOS_BACEN.STATUS_RETORNO.DESCRICAO }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "632f1224-95e8-4a9b-abd1-e67b42a3106f",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -460,
        1160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "91b6b0a2-21d8-4d26-a0d2-93ee24def922",
      "name": "Retornar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5040,
        1120
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "21a3b9d0-0f8b-4a97-9559-4d28b1aeffec",
      "name": "Se crédito existe",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5420,
        1120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f9735cc8-6ded-4ae2-825a-1cfa621e87a8",
      "name": "Retirar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5880,
        1080
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "02908f02-ee28-4bd8-a057-a3de17ae3b6a",
      "name": "Retornar Créditos Disponíveis1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5880,
        1280
      ],
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json.creditos }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d0531653-2569-4956-94c7-43206940b840",
      "name": "Retirar Créditos2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6080,
        1280
      ],
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "=+553799781110"
            }
          ]
        },
        "options": {}
      },
      "id": "f4d1bf2f-65ed-48af-b7e4-a27e50875c9c",
      "name": "Verificar Crédito Arthur",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5880,
        1580
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/owwGmbohHVdp/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "=+553799781110"
            },
            {
              "name": "API Crédito",
              "value": "Offline"
            },
            {
              "name": "Telefone Consulta",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Tipo Consulta",
              "value": "Financeiro BuscaSIX"
            }
          ]
        },
        "options": {}
      },
      "id": "8ef1240e-c9cf-4c32-b4a5-8a59feff9c96",
      "name": "API Crédito Offline",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6300,
        1600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Verificar Crédito Arthur').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "30cb08f2-491f-4dca-869f-8142c7be1cd3",
      "name": "Se crédito existe3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6080,
        1580
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4c4b8b4-ac50-4977-b5b7-22b2d88b5eed",
              "name": "Créditos a retirar",
              "value": "={{ $('Dados N8N').item.json['Credito consulta'] }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "53121307-d3ab-4e8c-80e6-ce6ae83440dd",
      "name": "Créditos a retirar1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5240,
        1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6611ca4d-c98b-4930-bf78-78785d12378b",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a86e1d56-ab6e-4ce9-a3a8-e8e732a08860",
      "name": "Maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5640,
        1100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "49319b14-0bf4-4bd3-a244-da5b81f9ecf7",
      "name": "Verificar saldo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6080,
        1080
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Retirar Créditos",
        "height": 832.0660667109632,
        "width": 1533.4713488372086
      },
      "id": "881133ce-e0e4-4662-a978-27a5340becc9",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4960,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad9c09c1-3aaf-4c42-ab43-9f8f30a12e99",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $json.creditos }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a3dacdbe-5d41-4ee7-b344-e3abe61bcca5",
      "name": "If11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6280,
        1080
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Dados",
              "value": "=*Nome:* _{{ $json['Cheques Sem Fundos'].CORRENTISTA }}_\n*CPF/CNPJ:* _{{ $json['Cheques Sem Fundos'].CPFCNPJ }}_\n\n*Bacen*\n*Banco:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].NUM_BANCO }}_\n*Agencia:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].NUM_AGENCIA }}_\n*Motivo:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].MOTIVO_DEVOLUCAO }}_\n*Qnt cheques:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].QTD_CHEQUES }}_\n*Data última ocorrência:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].DT_ULTIMA_OCORRENCIA }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b3c3eb32-17b5-4ea3-a5ac-bc118010f133",
      "name": "Mapa - Informações",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1500,
        1120
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Tipo Consulta",
              "value": "Consulta BACEN Cheques",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": 2,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "19dc6627-17ea-4930-9c13-35ecf718e388",
      "name": "Dados N8N",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3780,
        1160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.validocadastro.com.br/json/service.aspx",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"CodigoProduto\": \"333\",\n    \"Versao\": \"20180521\",\n    \"ChaveAcesso\": \"L1m5egI62W5WEg4WH8ihbwZ8xED1JlJeMXOp8kewYEQG8hA6+S/Ysy/E7Yc9Z1m+\",\n    \"Info\": {\n        \"Solicitante\": \"IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)\"\n    },\n    \"Parametros\": {\n        \"TipoPessoa\": \"{{ $json['Tipo Consulta'] }}\",\n        \"CPFCNPJ\": \"{{ $('Webhook').item.json.body.CPF }}\"\n    },\n    \"WebHook\": {\n        \"UrlCallBack\": \"\"\n    }\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "fd541602-65e2-44d4-bd35-e25c5170c9dd",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -880,
        1360
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Dados",
              "value": "=*Nome:* _{{ $json['Cheques Sem Fundos'].CORRENTISTA }}_\n*CPF/CNPJ:* _{{ $json['Cheques Sem Fundos'].CPFCNPJ }}_\n\n*Bacen*\n_Sem pendências registradas._",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "44b3cd38-48f6-467a-ae53-768920033a12",
      "name": "Mapa - Informações1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1580,
        1340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Informações",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Tipo Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Tipo Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "2a30676d-99f2-47f2-8b0e-add202bdfd9a",
      "name": "HTTP Request4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1460,
        2600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.Dados.CH_SEM_FUNDOS_BACEN.CORRENTISTA }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "5633e474-2dfd-4ee7-bc2d-b6577b87e0d4",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1380,
        1360
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Dados",
              "value": "=*CPF/CNPJ:* _{{ $json['Cheques Sem Fundos'].CPFCNPJ }}_\n\n*Bacen*\n_Sem pendências registradas._",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8f291bdc-fc21-4118-81cf-dac1cfcd8ec2",
      "name": "Mapa - Informações2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1580,
        1560
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false; // Verifica se possui 11 dígitos e não é uma sequência repetida\n\n    let soma = 0, resto;\n\n    // Validação do primeiro dígito verificador\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    // Validação do segundo dígito verificador\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false; // Verifica se possui 14 dígitos e não é uma sequência repetida\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o CPF ou CNPJ diretamente do campo 'body.CPF' ou 'body.CNPJ' dentro do 'Webhook'\nconst numero = ($('Webhook').item.json.body.CPF || $('Webhook').item.json.body.CNPJ).replace(/[^\\d]+/g, '');\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido // Retorna true ou false\n        }\n    }\n];\n"
      },
      "id": "cc487cbb-5a93-4c46-9a60-d151b2e0141d",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3460,
        1160
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bfac3c94-a23c-4008-aa6c-dd5fcb21c8e6",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b5414e9a-050c-4637-98e0-b65adbe96740",
      "name": "If26",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3260,
        1160
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "34dfb1b8-ce61-4243-9808-73c468d504b3",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -3280,
        1700
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=O CPF informado é inválido. Verifique os números digitados e tente novamente.\n\nObs: Digite apenas números, sem pontos, traços ou espaços."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "4c16b465-c7eb-485c-b45e-aba00f451e98",
      "name": "HTTP Request7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3480,
        1700
      ]
    },
    {
      "parameters": {
        "content": "## CPF / CNPJ inválido",
        "height": 817.3436136695202,
        "width": 456.60627452732734,
        "color": 3
      },
      "id": "1b70bf70-f242-4e00-804e-37fcdeecebbd",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3540,
        1060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2e3620cd-b942-4889-b0dc-ea402dc1d05e",
      "name": "If28",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3480,
        1500
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "=Erro"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Tipo Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Tipo Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "0d22713a-9267-434e-bec7-ca92883ae5a5",
      "name": "HTTP Request5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3280,
        1480
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4f5305d3-c468-426d-9f73-613328f1ea70",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1460,
        2760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4c64b065-71ec-406d-9eca-545f457a7f6e",
      "name": "If27",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1280,
        2600
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "666493bb-521d-4a94-b246-d2a3ad95686a",
      "name": "HTTP Request8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        2760
      ]
    },
    {
      "parameters": {
        "content": "## ERRO CONSULTA",
        "height": 617.54211011334,
        "width": 463.0557878889166,
        "color": 3
      },
      "id": "4fd588b1-6353-4dbd-888b-7b0d20bd2b31",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1180,
        2320
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "bd26dd30-d59f-44eb-b665-0a5d4d0a28c0",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        4120,
        1060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d6c73de9-3597-4e46-a2a7-748e0da6d4d7",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3920,
        900
      ]
    },
    {
      "parameters": {
        "content": "## ENVIAR RESULTADO CONSULTA SITE",
        "height": 540.823728738776,
        "width": 462.8961536434481,
        "color": 2
      },
      "id": "31e1da9a-d69d-414d-897b-560d7426db15",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3860,
        780
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\n\n## PDF - 01\n{{ $('Gerar PDF API').item.json.FileUrl }}\n\n\n______________________________________________________________\n\n\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}\n\n--------------------- / / ---------------------\n\n{{ $('Aggregate6').item.json.Consulta[1].Dados.replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "825cba7f-df80-48b8-9209-343ad3592e05",
      "name": "HTTP Request10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3920,
        1060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5c9cc022-da4e-4fd1-8ff5-b02e842b5953",
      "name": "If10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2260,
        1160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/UfO1nbtNGdqa/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "=+553799781110"
            },
            {
              "name": "Consulta",
              "value": "=*Telefone:* _{{ $('Webhook').item.json.body.Telefone }}_\n*CPF / CNPJ:* _{{ $('Webhook').item.json.body.CPF }}_\n\n-----------//-----------\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "5b8e71da-940b-46ea-bb75-494f39225e5a",
      "name": "Acompanhar consulta site (Botconversa)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4460,
        1240
      ],
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8e9bccd9-d360-4220-8a7a-cbf4e2f70e8c",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1260,
        1780
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtém a data e hora do campo\nconst currentDate = new Date($('Date & Time1').item.json.currentDate);\n\n// Converte para o horário de São Paulo (GMT-3)\nconst options = { timeZone: 'America/Sao_Paulo', hour12: false };\nconst brazilianTime = new Date(currentDate.toLocaleString('en-US', options));\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado) e a hora\nconst dayOfWeek = brazilianTime.getDay(); // 0=Domingo, 1=Segunda, ..., 6=Sábado\nconst hour = brazilianTime.getHours();\n\n// Verifica se a hora está entre 08:00 e 18:00 e se o dia é útil (segunda a sexta)\nif (hour >= 9 && hour < 18 && dayOfWeek >= 1 && dayOfWeek <= 5) {\n    return {\n        json: {\n            status: 'Horário funcionamento'\n        }\n    };\n} else {\n    return {\n        json: {\n            status: 'Fora do horário'\n        }\n    };\n}\n"
      },
      "id": "241b6d71-83af-4829-ab2c-39f45e1320e0",
      "name": "Code Horário funcionamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1440,
        1780
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "Tente novamente utilizando outra opção de consulta disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "faacb4e7-132a-4311-ad7f-9ec1dc93b318",
      "name": "Horário funcionamento1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1440,
        1940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8ec90439-29cc-4f7e-9318-906539cd9a2d",
              "leftValue": "={{ $json.status }}",
              "rightValue": "funcionamento",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8eb71c9f-28be-4266-be17-03351d7e5375",
      "name": "Verificar Horário funcionamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1260,
        1940
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "🕗 Alguns birôs restringem as consultas ao horário comercial. Aguarde até o horário de funcionamento para realizar a consulta e melhor experiência ou tente novamente utilizando outra opção disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c03bdaf4-5d12-45f7-9682-a4bdbc57001b",
      "name": "Fora do horário",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1260,
        2080
      ]
    },
    {
      "parameters": {
        "content": "## Horário funcionamento",
        "height": 578.2747827033502,
        "width": 397.97803245596407,
        "color": 3
      },
      "id": "d7052241-0b33-4ab9-95de-b459b968c3bb",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1200,
        1700
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false; // Verifica se possui 11 dígitos e não é uma sequência repetida\n\n    let soma = 0, resto;\n\n    // Validação do primeiro dígito verificador\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    // Validação do segundo dígito verificador\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false; // Verifica se possui 14 dígitos e não é uma sequência repetida\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o CPF ou CNPJ diretamente do campo 'body.CPF' ou 'body.CNPJ' dentro do 'Webhook'\nconst numero = $('Webhook').item.json.body.CPF || $('Webhook').item.json.body.CNPJ;\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido // Retorna true ou false\n        }\n    }\n];\n"
      },
      "id": "72ea1adb-de5f-4f5b-b420-94de7edaeb45",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3420,
        820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8e0363a5-1e0a-42f9-a5aa-1488030ed12a",
              "leftValue": "={{ $json.RETORNO.CADASTRAIS.NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "300cec00-ace8-4040-8fd9-a1bd24e57f00",
      "name": "If35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        600,
        680
      ]
    },
    {
      "parameters": {
        "jsCode": "// Captura o retorno do JSON\nconst retorno = $json.RETORNO || {};\nconst cadastrais = retorno.CADASTRAIS || {};\nconst telefonesFixo = retorno.TELEFONES_FIXO?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_FIXO.TELEFONE) \n        ? retorno.TELEFONES_FIXO.TELEFONE \n        : [retorno.TELEFONES_FIXO.TELEFONE] \n    : [];\nconst telefonesMovel = retorno.TELEFONES_MOVEL?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_MOVEL.TELEFONE) \n        ? retorno.TELEFONES_MOVEL.TELEFONE \n        : [retorno.TELEFONES_MOVEL.TELEFONE] \n    : [];\nconst emails = retorno.EMAILS?.EMAIL \n    ? Array.isArray(retorno.EMAILS.EMAIL) \n        ? retorno.EMAILS.EMAIL \n        : [retorno.EMAILS.EMAIL] \n    : [];\n// const enderecos = retorno.ENDERECOS?.ENDERECO \n//   ? Array.isArray(retorno.ENDERECOS.ENDERECO) \n//       ? retorno.ENDERECOS.ENDERECO \n//       : [retorno.ENDERECOS.ENDERECO] \n//   : [];\nconst parentes = retorno.POSSIVEIS_PARENTES?.CONTATO \n    ? Array.isArray(retorno.POSSIVEIS_PARENTES.CONTATO) \n        ? retorno.POSSIVEIS_PARENTES.CONTATO \n        : [retorno.POSSIVEIS_PARENTES.CONTATO] \n    : [];\nconst empresas = retorno.EMPRESAS_SOCIO?.EMPRESA_SOCIO \n    ? Array.isArray(retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO) \n        ? retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO \n        : [retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO] \n    : [];\n\n// Função para tratar dados\nfunction formatField(value) {\n    return value && value.trim() !== \"\" && value !== \"undefined\" ? value : null;\n}\n\n// Cria uma lista formatada com limite de itens\nfunction formatList(items, limit) {\n    return items.slice(0, limit).map(item => `- ${item}`).join('\\n');\n}\n\n// Monta o texto formatado\nlet formattedText = `*Nome:* _${formatField(cadastrais.NOME) || \"Não informado\"}_\n*CPF:* _${formatField(cadastrais.CPF) || \"Não informado\"}_\n*Data Nascimento:* _${formatField(cadastrais.NASCTO) || \"Não informado\"}_\n*Idade:* _${formatField(cadastrais.IDADE) || \"Não informado\"}_\\n\\n`;\n\n// Telefones\nconst allTelefones = [\n    ...telefonesFixo.map(tel => tel.NUMERO),\n    ...telefonesMovel.map(tel => tel.NUMERO)\n].filter(num => formatField(num)).slice(0, 5);\n\nif (allTelefones.length > 0) {\n    formattedText += `## *Telefone*\\n${formatList(allTelefones, 5)}\\n\\n`;\n}\n\n// Emails\nif (emails.length > 0) {\n    formattedText += `## *Email*\\n${formatList(emails.filter(email => formatField(email)), 5)}\\n\\n`;\n}\n\n// Endereços\n// if (enderecos.length > 0) {\n//     formattedText += `## *Endereços*\\n`;\n//     enderecos.slice(0, 3).forEach((endereco, index) => {\n//         formattedText += `*${index + 1}.*\\n`;\n//         formattedText += `*Logradouro:* _${formatField(endereco.LOGRADOURO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Número:* _${formatField(endereco.NUMERO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Complemento:* _${formatField(endereco.COMPLEMENTO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Bairro:* _${formatField(endereco.BAIRRO) || \"Não informado\"}_\\n`;\n//         formattedText += `*CEP:* _${formatField(endereco.CEP) || \"Não informado\"}_\\n`;\n//         formattedText += `*Cidade:* _${formatField(endereco.CIDADE) || \"Não informado\"}_\\n`;\n//         formattedText += `*Estado:* _${formatField(endereco.ESTADO) || \"Não informado\"}_\\n\\n`;\n//     });\n// }\n\n// Possíveis Parentes\nif (parentes.length > 0) {\n    const formattedParentes = parentes.slice(0, 5).map(parente => {\n        return `- _${formatField(parente.NOME) || \"Desconhecido\"} - ${formatField(parente.PARENTESCO) || \"Não informado\"}_`;\n    });\n    formattedText += `## *Possíveis Parentes*\\n${formattedParentes.join('\\n')}\\n\\n`;\n}\n\n// Empresas\nif (empresas.length > 0) {\n    formattedText += `## *Empresas*\\n`;\n    empresas.slice(0, 5).forEach((empresa, index) => {\n        formattedText += `*${index + 1}.*\\n`;\n        formattedText += `*Razão Social:* _${formatField(empresa.RAZAO_SOCIAL) || \"Não informado\"}_\\n`;\n        formattedText += `*CNPJ:* _${formatField(empresa.CNPJ) || \"Não informado\"}_\\n`;\n        formattedText += `*Cidade:* _${formatField(empresa.CIDADE) || \"Não informado\"}_\\n`;\n        formattedText += `*Qualificação:* _${formatField(empresa.QUALIFICACAO) || \"Não informado\"}_\\n`;\n        formattedText += `*Data Entrada:* _${formatField(empresa.DATA_ENTRADA) || \"Não informado\"}_\\n\\n`;\n    });\n}\n\n// Resultado\nreturn { formattedText };\n"
      },
      "id": "bcc29b5d-d199-4284-9198-2679a886d30a",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        660
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedText }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "794defdc-2924-4651-858b-bc4defca8e4d",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1000,
        660
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=http://confere.link/api/?acao=CONS_CPF&TK=IGGE-FAO-566021-PUN-4WT4&DADO={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 180000
        }
      },
      "id": "20fce01a-a1bb-4524-8f01-bbac7dc622d7",
      "name": "Informações confere.link",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        0,
        680
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "position": [
        200,
        680
      ],
      "typeVersion": 1,
      "id": "b94efbdb-13c5-443f-a21d-3502b756fc68",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "attrkey": "$",
          "explicitRoot": true,
          "mergeAttrs": false
        }
      },
      "name": "XML",
      "type": "n8n-nodes-base.xml",
      "position": [
        380,
        680
      ],
      "typeVersion": 1,
      "id": "dc339602-33e8-4ec6-9ac4-8ba12ecce47a",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9ad2a027-8e2c-459b-9fe1-405fcb017a00",
      "name": "If36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        660
      ]
    },
    {
      "parameters": {},
      "id": "913c3927-418a-4398-9024-aee1e8ddbe47",
      "name": "Merge58",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1860,
        1100
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Informações",
              "value": "=*Nome:* _{{ $('HTTP Request').item.json.CREDCADASTRAL.CH_SEM_FUNDOS_BACEN.CORRENTISTA }}_\n*CNPJ/CNPJ:* _{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "997b27aa-a52e-4cca-b567-d8f9e88e74ae",
      "name": "Mapa - Informações3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1180,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "33d5bb49-6c77-4b25-8edd-c990eb68ac49",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b9a0310b-2425-4e2c-9f8c-532da698e469",
      "name": "se typebot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3600,
        1380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: o CPF informado é inválido. Por favor, digite o CPF corretamente 🚨",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1f948b9b-0790-412f-893b-c7abb8fdc90d",
      "name": "typebot",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3120,
        1320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "50a75c03-4294-4d84-bce5-f1faa90e1730",
      "name": "se typebot1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1280,
        2440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "={{ $json['Consulta erro'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3926da9e-54ef-4610-86a1-8c46039264cb",
      "name": "typebot1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1460,
        2420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3c0642e2-ea16-493f-809a-de4e453494a6",
      "name": "se typebot2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3940,
        620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://v2.api2pdf.com/chrome/pdf/html",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "085551d3-3165-49d6-9fff-22ac23f127b9"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $json.output.replace('URL-LOGO', $('Google Sheets').item.json['URL PDF Imagem'] || 'https://i.imgur.com/g0gImpK.jpeg').replace(\"```html\", \"\").replace(\"```\", \"\") }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "281e5ef6-6dba-4ac6-8881-20400c1a3b67",
      "name": "Gerar PDF API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3380,
        2220
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1KJ6pes3i5NfUaBNLgor2iYMEHuG69uVDHS_X9xBzZu0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 595284221,
          "mode": "list",
          "cachedResultName": "Dados trabalhados",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KJ6pes3i5NfUaBNLgor2iYMEHuG69uVDHS_X9xBzZu0/edit#gid=595284221"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Telefone",
              "lookupValue": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3060c0e9-a496-435c-8650-c65f116f8926",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        2760,
        2220
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleApi": {
          "id": "wp0EdElCZ5oZWPuR",
          "name": "Google Service Account account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_BMk1KISD0CRdTERdFq3scmpA",
          "mode": "list",
          "cachedResultName": "criar tabela consultas 2"
        },
        "prompt": "define",
        "text": "={{ $('If10').item.json.Consulta[0]['Informações'] }}\n\n----------------- / / -----------------\n\n{{ $('If10').item.json.Consulta[1].Dados }}",
        "options": {
          "timeout": 120000
        }
      },
      "id": "6e93512a-3bae-4955-a5b7-961955734393",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [
        3000,
        2220
      ],
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "X02Q9OolJU4sWt8J",
          "name": "OpenAi account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Captura o retorno do JSON\nconst retorno = $json.RETORNO || {};\nconst cadastrais = retorno.CADASTRAIS || {};\nconst telefonesFixo = retorno.TELEFONES_FIXO?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_FIXO.TELEFONE) \n        ? retorno.TELEFONES_FIXO.TELEFONE \n        : [retorno.TELEFONES_FIXO.TELEFONE] \n    : [];\nconst telefonesMovel = retorno.TELEFONES_MOVEL?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_MOVEL.TELEFONE) \n        ? retorno.TELEFONES_MOVEL.TELEFONE \n        : [retorno.TELEFONES_MOVEL.TELEFONE] \n    : [];\nconst emails = retorno.EMAILS?.EMAIL \n    ? Array.isArray(retorno.EMAILS.EMAIL) \n        ? retorno.EMAILS.EMAIL \n        : [retorno.EMAILS.EMAIL] \n    : [];\n// const enderecos = retorno.ENDERECOS?.ENDERECO \n//   ? Array.isArray(retorno.ENDERECOS.ENDERECO) \n//       ? retorno.ENDERECOS.ENDERECO \n//       : [retorno.ENDERECOS.ENDERECO] \n//   : [];\nconst parentes = retorno.POSSIVEIS_PARENTES?.CONTATO \n    ? Array.isArray(retorno.POSSIVEIS_PARENTES.CONTATO) \n        ? retorno.POSSIVEIS_PARENTES.CONTATO \n        : [retorno.POSSIVEIS_PARENTES.CONTATO] \n    : [];\nconst empresas = retorno.EMPRESAS_SOCIO?.EMPRESA_SOCIO \n    ? Array.isArray(retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO) \n        ? retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO \n        : [retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO] \n    : [];\n\n// Função para tratar dados\nfunction formatField(value) {\n    return value && value.trim() !== \"\" && value !== \"undefined\" ? value : null;\n}\n\n// Cria uma lista formatada com limite de itens\nfunction formatList(items, limit) {\n    return items.slice(0, limit).map(item => `- ${item}`).join('\\n');\n}\n\n// Monta o texto formatado\nlet formattedText = `*Nome:* _${formatField(cadastrais.NOME) || \"Não informado\"}_\n*CPF:* _${formatField(cadastrais.CPF) || \"Não informado\"}_\n*Data Nascimento:* _${formatField(cadastrais.NASCTO) || \"Não informado\"}_\n*Idade:* _${formatField(cadastrais.IDADE) || \"Não informado\"}_\\n\\n`;\n\n// Telefones\nconst allTelefones = [\n    ...telefonesFixo.map(tel => tel.NUMERO),\n    ...telefonesMovel.map(tel => tel.NUMERO)\n].filter(num => formatField(num)).slice(0, 5);\n\nif (allTelefones.length > 0) {\n    formattedText += `## *Telefone*\\n${formatList(allTelefones, 5)}\\n\\n`;\n}\n\n// Emails\nif (emails.length > 0) {\n    formattedText += `## *Email*\\n${formatList(emails.filter(email => formatField(email)), 5)}\\n\\n`;\n}\n\n// Endereços\n// if (enderecos.length > 0) {\n//     formattedText += `## *Endereços*\\n`;\n//     enderecos.slice(0, 3).forEach((endereco, index) => {\n//         formattedText += `*${index + 1}.*\\n`;\n//         formattedText += `*Logradouro:* _${formatField(endereco.LOGRADOURO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Número:* _${formatField(endereco.NUMERO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Complemento:* _${formatField(endereco.COMPLEMENTO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Bairro:* _${formatField(endereco.BAIRRO) || \"Não informado\"}_\\n`;\n//         formattedText += `*CEP:* _${formatField(endereco.CEP) || \"Não informado\"}_\\n`;\n//         formattedText += `*Cidade:* _${formatField(endereco.CIDADE) || \"Não informado\"}_\\n`;\n//         formattedText += `*Estado:* _${formatField(endereco.ESTADO) || \"Não informado\"}_\\n\\n`;\n//     });\n// }\n\n// Possíveis Parentes\nif (parentes.length > 0) {\n    const formattedParentes = parentes.slice(0, 5).map(parente => {\n        return `- _${formatField(parente.NOME) || \"Desconhecido\"} - ${formatField(parente.PARENTESCO) || \"Não informado\"}_`;\n    });\n    formattedText += `## *Possíveis Parentes*\\n${formattedParentes.join('\\n')}\\n\\n`;\n}\n\n// Empresas\nif (empresas.length > 0) {\n    formattedText += `## *Empresas*\\n`;\n    empresas.slice(0, 5).forEach((empresa, index) => {\n        formattedText += `*${index + 1}.*\\n`;\n        formattedText += `*Razão Social:* _${formatField(empresa.RAZAO_SOCIAL) || \"Não informado\"}_\\n`;\n        formattedText += `*CNPJ:* _${formatField(empresa.CNPJ) || \"Não informado\"}_\\n`;\n        formattedText += `*Cidade:* _${formatField(empresa.CIDADE) || \"Não informado\"}_\\n`;\n        formattedText += `*Qualificação:* _${formatField(empresa.QUALIFICACAO) || \"Não informado\"}_\\n`;\n        formattedText += `*Data Entrada:* _${formatField(empresa.DATA_ENTRADA) || \"Não informado\"}_\\n\\n`;\n    });\n}\n\n// Resultado\nreturn { formattedText };\n"
      },
      "id": "aa4aece4-a4f4-4b06-ba52-4ae03bdf0b31",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        420
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedText }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "41072e71-4e5b-4f20-9593-c5321e192b1f",
      "name": "Edit Fields13",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1000,
        420
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set4",
      "type": "n8n-nodes-base.set",
      "position": [
        200,
        440
      ],
      "typeVersion": 1,
      "id": "3cd660ec-90db-4608-8449-71f945a5275d",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "attrkey": "$",
          "explicitRoot": true,
          "mergeAttrs": false
        }
      },
      "name": "XML4",
      "type": "n8n-nodes-base.xml",
      "position": [
        380,
        440
      ],
      "typeVersion": 1,
      "id": "6ca86f87-bdc0-4255-9d3d-d489069fac13",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const data = $json;\n\n// Helper function to clean up and limit array data\nfunction formatArray(items, fields, limit = 5) {\n    const uniqueItems = [...new Set(\n        items\n            .filter(item => fields.some(field => item[field]))\n            .map(item => fields.map(field => item[field]).filter(Boolean).join(\" - \"))\n    )];\n    return uniqueItems.slice(0, limit).join(\"\\n- \");\n}\n\n// Extracting and formatting data\nconst personalData = data.msg['Dados Pessoais'] || {};\nconst documents = data.msg['Documentos'] || {};\nconst relatives = data.msg.Parentes || [];\nconst phones = data.msg.Telefones || [];\nconst emails = data.msg.Emails || [];\nconst addresses = data.msg.Enderecos || [];\n\n// Prepare formatted output\nlet formattedData = `### Dados Pessoais\n*Nome:* ${personalData.Nome || ''}\n*CPF:* ${documents.CPF || ''}\n*Nascimento:* ${personalData.Nascimento || ''}\n*Nome da Mãe:* ${personalData['Nome da Mae'] || ''}\n`;\n\nif (phones.length > 0) {\n    const formattedPhones = formatArray(phones, ['Telefone']);\n    if (formattedPhones) {\n        formattedData += `\\n\\n## *Telefones*\\n- ${formattedPhones}`;\n    }\n}\n\nif (emails.length > 0) {\n    const formattedEmails = formatArray(emails, ['E-mail']);\n    if (formattedEmails) {\n        formattedData += `\\n\\n## *E-mails*\\n- ${formattedEmails}`;\n    }\n}\n\nif (relatives.length > 0) {\n    const formattedRelatives = formatArray(relatives, ['Nome Vinculo', 'Vinculo']);\n    if (formattedRelatives) {\n        formattedData += `\\n\\n## *Possíveis Parentes*\\n- ${formattedRelatives}`;\n    }\n}\n\n// if (addresses.length > 0) {\n//     const formattedAddresses = formatArray(addresses, ['Rua', 'Bairro', 'CEP', 'Cidade', 'Estado']);\n//     if (formattedAddresses) {\n//         formattedData += `\\n\\n### Endereços\\n- ${formattedAddresses}`;\n//     }\n// }\n\n// Removing unnecessary lines with undefined values\nformattedData = formattedData\n    .split('\\n')\n    .filter(line => !line.includes('undefined') && line.trim() !== '• **CPF:**' && line.trim() !== '• **RG:**')\n    .join('\\n');\n\n// Output the formatted data\nreturn [{ json: { formattedData: formattedData.trim() } }];\n"
      },
      "id": "1df18b9e-e660-4372-a38e-dd7a72cf97fb",
      "name": "Code14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        0
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedData }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "88916cc5-c69f-4947-b3bc-0148c030d9d0",
      "name": "Edit Fields14",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        380,
        0
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "674487ad-af81-40c4-bf0b-21f5b35eb2a8",
      "name": "If47",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        560,
        0
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8b8095b1-ba11-4306-8602-9e78be3503cd",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "Nome:",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "70a1d65c-49ea-4f58-9289-d7be568a06b9",
      "name": "If13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        560,
        220
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para calcular idade com base na data de nascimento\nfunction calcularIdade(dataNasc) {\n    const hoje = new Date();\n    const [dia, mes, ano] = dataNasc.split('/');\n    const nascimento = new Date(`${ano}-${mes}-${dia}`);\n    let idade = hoje.getFullYear() - nascimento.getFullYear();\n    const mesAtual = hoje.getMonth();\n    const diaAtual = hoje.getDate();\n    if (mesAtual < nascimento.getMonth() || \n       (mesAtual === nascimento.getMonth() && diaAtual < nascimento.getDate())) {\n        idade--;\n    }\n    return idade;\n}\n\n// Função para evitar duplicatas\nfunction removerDuplicatas(array) {\n    return array.filter((item, index, self) =>\n        index === self.findIndex((t) => JSON.stringify(t) === JSON.stringify(item))\n    );\n}\n\n// Capturar o JSON retornado\nconst data = $json.resultado;\nconst dados = data.DADOS?.[0] || {};\nconst emails = removerDuplicatas(data.EMAIL || []).slice(0, 5);\nconst telefones = removerDuplicatas(data.HISTORICO_TELEFONES || [])\n    .filter(tel => tel.TELEFONE && tel.TELEFONE !== \"undefined\")\n    .slice(0, 5)\n    .map(tel => `${tel.DDD}${tel.TELEFONE}`);\nconst parentes = removerDuplicatas(data.PARENTES || []).slice(0, 5);\n\n// Início da formatação\nlet resultadoFormatado = \"\";\n\n// Adicionar dados principais\nif (dados.NOME && dados.CPF && dados.NASC) {\n    const idade = calcularIdade(dados.NASC);\n    resultadoFormatado += `*Nome:* _${dados.NOME}_\\n`;\n    resultadoFormatado += `*CPF:* _${dados.CPF}_\\n`;\n    resultadoFormatado += `*Data Nascimento:* _${dados.NASC}_\\n`;\n    resultadoFormatado += `*Idade:* _${idade} anos_\\n\\n`;\n}\n\n// Adicionar telefones\nif (telefones.length) {\n    resultadoFormatado += `## *Telefone*\\n`;\n    telefones.forEach(tel => {\n        resultadoFormatado += `- ${tel}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar emails\nif (emails.length) {\n    resultadoFormatado += `## *Email*\\n`;\n    emails.forEach(email => {\n        resultadoFormatado += `- ${email.EMAIL}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar parentes\nif (parentes.length) {\n    resultadoFormatado += `## *Possíveis Parentes*\\n`;\n    parentes.forEach(parente => {\n        const nome = parente.NOME_VINCULO || \"Não informado\";\n        const vinculo = parente.VINCULO || \"Não informado\";\n        resultadoFormatado += `- _${nome} - ${vinculo}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Retornar resultado formatado\nreturn {\n    json: {\n        resultadoFormatado: resultadoFormatado.trim()\n    }\n};\n"
      },
      "id": "56f46096-d27f-474b-9090-4ff268fdbc1c",
      "name": "Code15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        200,
        220
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a71f79c-c28b-4ed8-811a-9c130e7df817",
              "name": "Informações",
              "value": "={{ $json.resultadoFormatado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "464c59a6-85b0-4dcd-ae90-c4cf5037dc18",
      "name": "Edit Fields15",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        380,
        220
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8e0363a5-1e0a-42f9-a5aa-1488030ed12a",
              "leftValue": "={{ $json.RETORNO.CADASTRAIS.NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bbccf805-9cf8-420c-ba26-125f9d7aa786",
      "name": "If48",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        600,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5b8dc07b-072a-4ef5-b708-f045d7673f15",
      "name": "If49",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        420
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e1a651b2-64b5-4737-ba91-88daeb34bf55",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1540,
        400
      ]
    },
    {
      "parameters": {
        "url": "=https://api.searchlock.me/evodata?token=eDRFTvybunIMOnibuYVGTCFXcf&tipo=cpf&dados={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "c7643ebd-932f-42ba-aa81-d283dd23ff21",
      "name": "evodata4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        0,
        0
      ],
      "disabled": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "url": "=https://typebots.minerdapifoda.xyz:8080/api/cpffull?cpf={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "b0a63648-95c8-46f2-a3ee-08894a606db0",
      "name": "minerdapifoda4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        0,
        220
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "url": "=http://confere.link/api/?acao=CONS_CPF&TK=IGGE-FAO-566021-PUN-4WT4&DADO={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "0b3f9130-97fa-4d71-8edc-f07424fd0271",
      "name": "confere.link4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        0,
        440
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.redequeroimoveis.com/webhook/valido-cadastro_bacen-1-2",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            },
            {
              "name": "URL_LogoPDF",
              "value": "={{ $('Webhook').item.json.body.URL_LogoPDF }}"
            },
            {
              "name": " Tipo consulta",
              "value": "Completa"
            },
            {
              "name": "RequestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4396352c-687f-4526-abdb-916d36be359c",
      "name": "HTTP Request19",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -60,
        1500
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## CONTINUAÇÃO",
        "height": 251.51571340885795,
        "width": 571.376359106563,
        "color": 6
      },
      "id": "12aa8380-dd16-4a29-b370-aae309fd1afb",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -320,
        1420
      ]
    },
    {
      "parameters": {},
      "id": "b1ae7927-6f17-4d45-b95a-7288b3abcadf",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -240,
        1500
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e297ebd2-9f1f-4a61-a565-bf729f7cfb38",
      "name": "Respond to Webhook4",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        120,
        1500
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "valido-cadastro_bacen",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "ab853ae1-950e-4ea6-ba3e-80c39861ff85",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4000,
        1160
      ],
      "webhookId": "64a3d226-1205-443e-8b46-099e1476fc4e"
    },
    {
      "parameters": {
        "jsCode": "const agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [dataStrRaw, horaStr] = agora.split(' ');\nconst dataStr = dataStrRaw.replace(',', '');\n\n// Extrai dia, mês e ano\nconst [dia, mes, ano] = dataStr.split('/');\nconst dataFormatada = `${dia}/${mes}/${ano}`;\n\n// Novo formato ISO (YYYY-MM-DD)\nconst dataISO = `${ano}-${mes}-${dia}`;\n\n// Monta a URL da execução\nconst executionId = $execution.id;\nconst workflowId = $workflow.id;\nconst baseUrl = \"https://n8n.redequeroimoveis.com\";\nconst executionUrl = `${baseUrl}/workflow/${workflowId}/executions/${executionId}`;\n\n// Retorna tudo em um único objeto\nreturn [{\n  json: {\n    data: dataFormatada,\n    data_iso: dataISO,\n    hora: horaStr,\n    executionUrl: executionUrl\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6640,
        1560
      ],
      "id": "fcfcdfbd-3f4f-400e-b42d-5d4bdfb94316",
      "name": "Code4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0c0c1f37-efa4-4100-846e-3f4a6af49124",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -2300,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $json.creditos }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "121bdbd6-5566-40db-88c8-3242d8e38939",
      "name": "Crédito maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2300,
        1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1248f7c7-12b5-4ab3-add3-b6791f26e8cf",
      "name": "Se site / bc1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2640,
        1160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "a4c77d3d-beb7-4e50-af86-0242bfb2b0b1",
      "name": "Crédito inferior1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2480,
        1460
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a3f8b9ff-a73e-4578-9d6b-f2d1e6432c08",
      "name": "Respond to Webhook6",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -2300,
        1460
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e0d795c9-d40d-4851-825a-d2a54b553afc",
      "name": "Retornar Créditos Site1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2480,
        1260
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "60288151-e6eb-4293-b30b-a838e064013e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "9ac98d04-ec18-49ee-81c4-4933a6cd9e6e",
      "name": "If23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2480,
        1640
      ]
    },
    {
      "parameters": {
        "content": "## SE SITE VERIFICAR CRÉDITO",
        "height": 779,
        "width": 710,
        "color": 4
      },
      "id": "6f1e3617-37c9-467e-88cf-af3b399df765",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2720,
        1100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "81cc2dd8-69e5-49ce-a5ce-e509d0280336",
      "name": "Se base44",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3680,
        400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64530896-b254-4c99-991f-167b429c9304",
              "name": "html",
              "value": "={{ $('OpenAI1').item.json.output.replace('URL-LOGO', $('Google Sheets').item.json['URL PDF Imagem'] || 'https://i.imgur.com/g0gImpK.jpeg').replace(\"```html\", \"\").replace(\"```\", \"\") }}",
              "type": "string"
            },
            {
              "id": "842b2f23-b0c2-4713-a419-890e04377971",
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "774d16d2-47c6-411a-8c78-78812c161e93",
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2325e70d-65ad-4c79-a009-abbe6bd04242",
      "name": "resposta-base44",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4080,
        360
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8e5d1e6-feda-4373-8e50-936f54a48786",
              "name": "Créditos",
              "value": "=2",
              "type": "string"
            },
            {
              "id": "e83c4952-cefe-4e2e-accf-865e014c5c20",
              "name": "Opção Consulta",
              "value": "Bacen",
              "type": "string"
            },
            {
              "id": "b465d432-f3ad-4b56-8e49-81a06ca7db1a",
              "name": "Tipo Consulta",
              "value": "={{ $workflow.name }}",
              "type": "string"
            },
            {
              "id": "ccbdfb0b-45f1-40b2-b095-fcfefa698376",
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}",
              "type": "string"
            },
            {
              "id": "41bac44d-098a-4889-ad47-0138194c7d6b",
              "name": "Dado consultado",
              "value": "={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
              "type": "string"
            },
            {
              "id": "5f0eaada-894e-45cf-8c51-3f1a65fb785e",
              "name": "Data",
              "value": "={{ $json.data }}",
              "type": "string"
            },
            {
              "id": "f34f0ad5-5beb-4941-a1be-d63c2f099f22",
              "name": "Hora",
              "value": "={{ $json.hora }}",
              "type": "string"
            },
            {
              "id": "80f689ee-d4ec-4b52-ad1d-e1e710f72420",
              "name": "=URL PDF",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "7c7fe4c7-5f91-4a5c-af93-3104c80aab4c",
              "name": "Origem Consulta",
              "value": "={{ $('Webhook').item.json.body.Webhook }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6860,
        940
      ],
      "id": "bdc0067d-8caf-4938-bdfb-5820eb488f2e",
      "name": "Dados Histórico"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6819f5703086936c581632c2/entities/Historico",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "tipo_consulta",
              "value": "={{ $json['Tipo Consulta'] }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json['Créditos'] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            },
            {
              "name": "url_pdf",
              "value": "={{ $json['URL PDF'] }}"
            },
            {
              "name": "origem",
              "value": "={{ $json['Origem Consulta'] }}"
            },
            {
              "name": "opcao",
              "value": "={{ $json['Opção Consulta'] }}"
            },
            {
              "name": "exec",
              "value": "={{ $('Code4').item.json.executionUrl }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7080,
        940
      ],
      "id": "eba0f409-da07-496e-a2f0-e3ddaef8c51c",
      "name": "Base44 API - Histórico",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "html",
              "value": "={{ $('OpenAI1').item.json.output.replace('URL-LOGO', $('Google Sheets').item.json['URL PDF Imagem'] || 'https://i.imgur.com/g0gImpK.jpeg').replace(\"```html\", \"\").replace(\"```\", \"\") }}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3900,
        360
      ],
      "id": "0e734281-83d1-4ab7-a1e0-639e32ca11c4",
      "name": "Base44 API - RetornoConsulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/UltimaConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $json.output.replace('URL-LOGO', $('Google Sheets').item.json['URL PDF Imagem'] || 'https://i.imgur.com/g0gImpK.jpeg').replace(\"```html\", \"\").replace(\"```\", \"\") }}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            },
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7080,
        1140
      ],
      "id": "1e81f059-107b-41c4-8afc-4156231be051",
      "name": "Base44 API - Última Consulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3340,
        1340
      ],
      "id": "ab3ddc4b-c89c-48a1-96dc-0750f3c4b5de",
      "name": "EvolutionAPI - CPF Invalido",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37111169-e67b-43ee-856e-7deb5fa193ab",
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}\n\n----------- / / -----------\n\n{{ $('Aggregate6').item.json.Consulta[1].Dados }}",
              "type": "string"
            },
            {
              "id": "e298fd1f-2f1c-4140-bf94-7c782ced4329",
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4380,
        580
      ],
      "id": "d633e641-88e1-497d-a6c9-0c43ffedec21",
      "name": "resposta typebot"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=*UniConsultas*\nTodas as consultas em um só lugar!\n\n------- / / -------\n\n## Consulta Cheques Bacen\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}\n\n----------- / / -----------\n\n{{ $('Aggregate6').item.json.Consulta[1].Dados }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4160,
        600
      ],
      "id": "70702a10-e04a-4336-b88b-2e673885228e",
      "name": "EvolutionAPI - Consulta"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Aguarde, realizando consulta..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3780,
        960
      ],
      "id": "55f3064f-5330-4c73-a8e4-17ffd69c6fa6",
      "name": "EvolutionAPI - Realizando consulta",
      "onError": "continueRegularOutput"
    }
  ],
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Mapa - Informações",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate6": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          },
          {
            "node": "evodata4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos": {
      "main": [
        [
          {
            "node": "Créditos a retirar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe": {
      "main": [
        [
          {
            "node": "Maior ou igual1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Crédito Arthur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos": {
      "main": [
        [
          {
            "node": "Verificar saldo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Disponíveis1": {
      "main": [
        [
          {
            "node": "Retirar Créditos2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Crédito Arthur": {
      "main": [
        [
          {
            "node": "Se crédito existe3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "API Crédito Offline",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Créditos a retirar1": {
      "main": [
        [
          {
            "node": "Se crédito existe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Maior ou igual1": {
      "main": [
        [
          {
            "node": "Retirar Créditos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Disponíveis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar saldo": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Dados N8N": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações1": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Mapa - Informações1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações2": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If26": {
      "main": [
        [
          {
            "node": "Se site / bc1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If28": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If27": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request10",
            "type": "main",
            "index": 0
          },
          {
            "node": "Acompanhar consulta site (Botconversa)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request10": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook3": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Code Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Horário funcionamento": {
      "main": [
        [
          {
            "node": "Verificar Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Horário funcionamento": {
      "main": [
        [
          {
            "node": "Horário funcionamento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fora do horário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Horário funcionamento1": {
      "main": [
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fora do horário": {
      "main": [
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos2": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API Crédito Offline": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If35": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "If36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações confere.link": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "If35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If36": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações3": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge58": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot": {
      "main": [
        [
          {
            "node": "EvolutionAPI - CPF Invalido",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot1": {
      "main": [
        [
          {
            "node": "typebot1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot2": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Consulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar PDF API": {
      "main": [
        [
          {
            "node": "Se base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Gerar PDF API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "Edit Fields13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields13": {
      "main": [
        [
          {
            "node": "If49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set4": {
      "main": [
        [
          {
            "node": "XML4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML4": {
      "main": [
        [
          {
            "node": "If48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "Edit Fields14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields14": {
      "main": [
        [
          {
            "node": "If47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If47": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "minerdapifoda4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "confere.link4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "Edit Fields15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields15": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If48": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If49": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "evodata4": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda4": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "confere.link4": {
      "main": [
        [
          {
            "node": "Set4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request19": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "HTTP Request19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados N8N",
            "type": "main",
            "index": 0
          },
          {
            "node": "EvolutionAPI - Realizando consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Dados Histórico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito maior ou igual1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se site / bc1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Site1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito inferior1": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Site1": {
      "main": [
        [
          {
            "node": "Crédito maior ou igual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If23": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crédito inferior1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se base44": {
      "main": [
        [
          {
            "node": "Base44 API - RetornoConsulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta-base44": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados Histórico": {
      "main": [
        [
          {
            "node": "Base44 API - Histórico",
            "type": "main",
            "index": 0
          },
          {
            "node": "Base44 API - Última Consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - RetornoConsulta": {
      "main": [
        [
          {
            "node": "resposta-base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - CPF Invalido": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Consulta": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "HTTP Request2": [
      {
        "json": {
          "HEADER": {
            "INFORMACOES_RETORNO": {
              "VERSAO": "20180521",
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "CHAVE_CONSULTA": "19351663",
              "PRODUTO": "333-CCF BACEN",
              "CLIENTE": "113.832.236-96-ARTHUR BALDIOTTI MENDONCA ALVARES",
              "DATA_HORA_CONSULTA": "10/10/2024 12:11",
              "TERMINAL": "",
              "SOLICITANTE": "11383223696",
              "PDF": "https://api.validocadastro.com.br/tools/generate-pdf.aspx?file_code=sd8eNAYcCb9S1afPVdlqUgIIXz%2b6IjS1JXMsCUgDPww%3d",
              "ENTIDADE": "13",
              "REQUISICAO": "274b3f18d4ec44f49f46d3e1934f05ca/10102024132016"
            },
            "PARAMETROS": {
              "CPFCNPJ": "11383223696",
              "TIPO_PESSOA": "",
              "CMC7": "",
              "VALOR": "",
              "DT_VENCIMENTO": "",
              "DDD": "",
              "TELEFONE": "",
              "CEP": "",
              "NOME": "",
              "NOME_MAE": "",
              "NOME_PAI": "",
              "ENDERECO": "",
              "ENDERECO_NUM": "",
              "ENDERECO_COMPLEMENTO": "",
              "ENDERECO_BAIRRO": "",
              "CIDADE": "",
              "FOTO_BASE64": "",
              "IDADE": "",
              "NACIONALIDADE": "",
              "NUM_BENEFICIO_INSS": "",
              "EMAIL": "",
              "SEXO": "",
              "OBITO": "",
              "DATA_NASCIMENTO": "",
              "SOM_SEMELHANTE": "",
              "REGISTRO_GERAL": "",
              "RG_ORGAO_EXPEDIDOR": "",
              "RG_UF_EXPEDIDOR": "",
              "CART_NAC_HABILITACAO": "",
              "CNH_CATEGORIA": "",
              "CNH_DATA_PRIMEIRA_HABILITACAO": "",
              "CNH_DATA_ULTIMA_EMISSAO": "",
              "CNH_DATA_VALIDADE": "",
              "CNH_REGISTRO_NACIONAL_ESTRANGEIRO": "",
              "CNH_SITUACAO": "",
              "PLACA": "",
              "CHASSI": "",
              "SITUACAO_CPF_CNPJ": "",
              "NUM_CAMBIO": "",
              "NUM_MOTOR": "",
              "NUM_CARROCERIA": "",
              "NUM_EIXO_TRASEIRO": "",
              "NUM_TERCEIRO_EIXO": "",
              "CRLV": "",
              "RENAVAM": "",
              "UF": "",
              "KILOMETRAGEM": "",
              "TIPO_DOCUMENTO_ENVIADO": "",
              "CARTEIRAPROFISSIONAL": "",
              "CP_ORGAO_EXPEDIDOR": "",
              "CP_UF_EXPEDIDOR": "",
              "PASSAPORTE": "",
              "PASSAPORTE_ORGAO_EXPEDIDOR": "",
              "PASSAPORTE_UF_EXPEDIDOR": "",
              "CERTIFICADORESERVISTA": "",
              "CR_ORGAO_EXPEDIDOR": "",
              "CR_UF_EXPEDIDOR": "",
              "CRV": "",
              "MES_ANO": "",
              "ALCUNHA": "",
              "NUMERO_PROCESSO": ""
            },
            "DADOS_RETORNADOS": {
              "DADOS_RECEITA_FEDERAL": "0",
              "ALERTA_DOCUMENTOS_ROUBADOS": "0",
              "DADOS_AGENCIA_BANCARIA": "0",
              "PROTESTO_SINTETICO": "0",
              "PROTESTO_ANALITICO": "0",
              "ENDERECOS": "0",
              "FALENCIAS_ACOES_RECUPERACOES": "0",
              "INFORMACOES_ELEITORAIS": "0",
              "QUADRO_SOCIETARIO": "0",
              "PARTICIPACAO_EM_EMPRESAS": "0",
              "PENDENCIAS_INTERNAS": "0",
              "PENDENCIAS_FINANCEIRAS": "0",
              "INFORMACOES_DA_EMPRESA": "0",
              "CCF_BACEN": "1",
              "CCF_VAREJO": "0",
              "RECHEQUE_ONLINE": "0",
              "RECHEQUE": "0",
              "CONTUMACIA": "0",
              "ENDERECO_DO_CEP": "0",
              "PASSAGENS_COMERCIAIS": "0",
              "INFORMACOES_ALERTAS_RESTRICOES": "0",
              "SCORE": "0",
              "ADMINISTRADORES_DA_EMPRESA": "0",
              "TITULOS_A_VENCER": "0",
              "HISTORICO_DE_PAGAMENTOS": "0",
              "REFERENCIA_DE_NEGOCIOS": "0",
              "PRINCIPAIS_FORNECEDORES": "0",
              "IDENTIFICACAO_PESSOA_FISICA": "0",
              "OCUPACAO_PESSOA_FISICA": "0",
              "PARTICIPACAO_EM_FALENCIAS": "0",
              "TELEFONE_FIXO": "0",
              "TITULAR_DO_TELEFONE": "0",
              "OUTROS_TELEFONES": "0",
              "TELEFONE_CELULAR": "0",
              "PARENTES": "0",
              "CONTATOS": "0",
              "LOCAIS_TRABALHO": "0",
              "TELEFONE_COMERCIAL": "0",
              "DADOS_GERAIS": "0",
              "VIZINHOS": "0",
              "RESIDENTES": "0",
              "BENEFICIO": "0",
              "EMAILS": "0",
              "INFOBUSCA": "0",
              "VINCULO_MESMO_ENDERECO": "0",
              "SOMENTE_TELEFONE": "0",
              "SOMENTE_ENDERECO": "0",
              "RELATORIO_TEXTO": "0",
              "VEICULOS_POR_DOCUMENTO": "0",
              "CNH": "0",
              "AGREGADOS": "0",
              "BIN_NACIONAL": "0",
              "BIN_ESTADUAL": "0",
              "GRAVAME": "0",
              "LEILAO": "0",
              "CONFERENCIA_MOTOR_E_CHASSI": "0",
              "HISTORICO_PROPRIETARIOS": "0",
              "HISTORICO_ROUBO_FURTO": "0",
              "ROUBO_FURTO": "0",
              "PERDA_TOTAL": "0",
              "ALERTAS": "0",
              "RECALL": "0",
              "DPVAT": "0",
              "DECODIFICADOR_DE_CHASSI": "0",
              "PRECIFICADOR": "0",
              "RENAJUD": "0",
              "RENACH": "0",
              "CRLV": "0",
              "REMARKETING": "0",
              "INDICIO_SINISTRO": "0",
              "PARECER_TECNICO": "0",
              "PENDENCIAS_REFIN": "0",
              "PENDENCIAS_VENCIDAS": "0",
              "LOCALIZADOR_AGREGADOS": "0",
              "CARACTERISTICAS_ADICIONAIS": "0",
              "LAUDO_CAUTELAR": "0",
              "DECISAO": "0",
              "LIMITE_CREDITO": "0",
              "FATURAMENTO_PRESUMIDO": "0",
              "PARTICIPACAO_SOCIO_ADM_OUTRAS_EMPRESAS": "0",
              "PARTICIPACOES_EMPRESAS_CONSULTADAS": "0",
              "HIST_CONSULTAS": "0",
              "ACOES_CIVEIS": "0",
              "FALENCIA_RECUPERACAO_JUDICIAL": "0",
              "ANALISE_KILOMETRAGEM": "0",
              "PONTUALIDADE_PAGTO": "0",
              "PROPRIETARIO_ATUAL_VEICULO": "0",
              "VALIDACAO_PESSOA_FISICA": "0",
              "VALIDACAO_PF_BASICA": "0",
              "VALIDACAO_PF_BIOMETRIA_FACE": "0",
              "VALIDACAO_PF_CNH": "0",
              "VALIDACAO_PF_DOCUMENTO": "0",
              "VALIDACAO_PF_ENDERECO": "0",
              "VALIDACAO_PF_FILIACAO": "0",
              "AUTO_VISTORIA": "0",
              "INDICE_SECURITARIO": "0",
              "CALCULO_VALORIZACAO": "0",
              "ATPVE": "0",
              "CREDITO_CONCEDIDO": "0",
              "RENDA_PRESUMIDA": "0",
              "COMPROMETIMENTO_PAGTO": "0",
              "LEILAO_CONJUGADO": "0",
              "CSV": "0",
              "RENAINF": "0",
              "RELATORIO_ARQUIVO": "0",
              "INDICIO_SINISTRO_CONJUGADO": "0",
              "CONSULTA_GENERICA": "0",
              "BATIDOS": "0",
              "RELATORIO_SCR": "0",
              "CADIN": "0",
              "ACOES_TRABALHISTAS": "0",
              "RELATORIO_SCR_SINTETICO": "0",
              "CPR": "0",
              "FICHA_TECNICA_VEICULAR": "0",
              "CHECK_LIST_VEICULAR": "0",
              "DIVIDA_ATIVA_PESSOA_FISICA": "0",
              "DIVIDA_ATIVA_PESSOA_JURIDICA": "0",
              "PENDENCIAS_ISP": "0",
              "RELATORIO_JURIDICO_EMPRESARIAL": "0",
              "INFORMACOES_CRIMINAIS": "0",
              "PROCURADOS_JUSTICA": "0",
              "RELATORIO_JURIDICO_PESSOA_FISICA": "0",
              "DETALHAMENTO_ACAO_JUDICIAL": "0",
              "RELATORIO_IMOVEIS": "0",
              "DEBITOS_IPVA": "0",
              "DEBITO_DIRETO_AUTORIZADO": "0",
              "CONTROLE_POSITIVO": "0",
              "ALERTA_INDICIO": "0",
              "RELATORIO_CREDITICIO_ARQUIVO": "0",
              "IMAGENS_VEICULO": "0",
              "RELATORIO_SCR_ENCAPSULADO": "0",
              "RESTRICOES_FINANCEIRAS": "0"
            },
            "CONTROLE": {
              "QUANTIDADE_OCORRENCIAS": "1",
              "OCORRENCIAS": [
                {
                  "CONTEUDO": "42",
                  "FONTE": "53",
                  "STATUS": "1"
                }
              ]
            }
          },
          "CREDCADASTRAL": {
            "CH_SEM_FUNDOS_BACEN": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "QUANTIDADE_OCORRENCIA": "21",
              "CORRENTISTA": "ARTHUR BALDIOTTI MENDONCA ALVARES",
              "TIPO_PESSOA": "FISICA",
              "CPFCNPJ": "113.832.236-96",
              "OCORRENCIAS": [
                {
                  "DCR_BANCO": "237 BANCO BRADESCO S A",
                  "NUM_BANCO": "237 BANCO BRADESCO S A",
                  "NUM_AGENCIA": "1954",
                  "MOTIVO_DEVOLUCAO": "12 - MOTIVO 12",
                  "QTD_CHEQUES": "21",
                  "DT_ULTIMA_OCORRENCIA": "10/2024",
                  "DADOS_AGENCIA": "",
                  "DOC_RELACIONADO": "113.832.236-96"
                }
              ]
            }
          },
          "VEICULAR": {}
        }
      }
    ],
    "Informações confere.link": [
      {
        "json": {
          "data": "<?xml version='1.0' encoding='ISO-8859-1'?><RETORNO>\r\n<CADASTRAIS>\r\n<CPF>11383223696</CPF>\r\n<NOME>ARTHUR BALDIOTTI MENDONCA ALVARES</NOME>\r\n<NOME_MAE>MARIA LUIZA BALDIOTTI MENDONCA</NOME_MAE>\r\n<NASCTO>03/04/1993</NASCTO>\r\n<IDADE>31 anos</IDADE>\r\n<SEXO>Masculino</SEXO>\r\n\r\n<RG></RG>\r\n<ORGAO_EMISSOR></ORGAO_EMISSOR>\r\n<UF_EMISSAO></UF_EMISSAO>\r\n<TITULO_ELEITOR></TITULO_ELEITOR>\r\n<NIT></NIT>\r\n<ESCOLARIDADE> </ESCOLARIDADE>\r\n<NACIONALIDADE></NACIONALIDADE>\r\n<PROFISSAO></PROFISSAO>\r\n<SALARIO></SALARIO>\r\n<CLASSE_ECONOMICA></CLASSE_ECONOMICA>\r\n<CONSTA_OBITO></CONSTA_OBITO>\r\n\r\n</CADASTRAIS>\r\n<INSS>\r\n\r\n</INSS><TELEFONES_FIXO><TELEFONE><NUMERO>3133344803</NUMERO><OPERADORA>TELEMAR/MG</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>FIXO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE></TELEFONES_FIXO><TELEFONES_MOVEL><TELEFONE><NUMERO>31997781110</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999493378</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999812824</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA>23/03/2013</DATA_REFERENCIA><TIPO_TEL>MOVEL POS-PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999951110</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>31975122221</NUMERO><OPERADORA>TIM CELULAR S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE></TELEFONES_MOVEL><EMAILS><EMAIL>tiosam_importados@hotmail.com</EMAIL>\r\n<EMAIL>arthurbaldiotti@hotmail.com</EMAIL>\r\n</EMAILS><ENDERECOS><ENDERECO><LOGRADOURO>R FRANCISCO SALES</LOGRADOURO><NUMERO>129</NUMERO><COMPLEMENTO>AP 602</COMPLEMENTO><BAIRRO>CENTRO</BAIRRO><CEP>35660017</CEP><CIDADE>PARA DE MINAS</CIDADE><ESTADO>MG</ESTADO></ENDERECO></ENDERECOS><POSSIVEIS_PARENTES><CONTATO><CPF>43315763615</CPF>\r\n<NOME>MARIA LUIZA BALDIOTTI MENDONCA</NOME>   \r\n<IDADE>63 anos</IDADE>\r\n<LOCAL>PARA DE MINAS/MG</LOCAL>\r\n<PARENTESCO>MAE</PARENTESCO>\r\n</CONTATO>\r\n<CONTATO>\r\n<CPF>11628911654</CPF>\r\n<NOME>AUGUSTO BALDIOTTI MENDONCA ALVARES</NOME>   \r\n<IDADE>24 anos</IDADE>\r\n<LOCAL></LOCAL>\r\n<PARENTESCO>IRMAO(A)</PARENTESCO>\r\n</CONTATO></POSSIVEIS_PARENTES><POSSIVEIS_CONTATOS></POSSIVEIS_CONTATOS><REFERENCIA_PROFISSIONAL></REFERENCIA_PROFISSIONAL><EMPRESAS_SOCIO><EMPRESA_SOCIO>\r\n<RAZAO_SOCIAL>REDE QUERO IMOVEIS LTDA</RAZAO_SOCIAL>\r\n<CNPJ>40126612000140</CNPJ>\r\n<CIDADE>PARA DE MINAS-MG</CIDADE>\r\n<QUALIFICACAO>Socio-Administrador</QUALIFICACAO>\r\n<DATA_ENTRADA>16/12/2020</DATA_ENTRADA>\r\n<VALOR_PARTICIPACAO></VALOR_PARTICIPACAO>\r\n</EMPRESA_SOCIO></EMPRESAS_SOCIO></RETORNO>"
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "n8n.redequeroimoveis.com",
            "content-length": "239",
            "sentry-trace": "ae6def2fd6cf402a9f944420bab435db-99986ff1ae7c368b-0",
            "baggage": "sentry-trace_id=ae6def2fd6cf402a9f944420bab435db,sentry-environment=production_new,sentry-release=5652deab06a886b8cbb2c025bdbfe97234261bd3,sentry-public_key=af3c6636fa6e4f89948eaa4e575b3286,sentry-transaction=/api/v1/blocks_integration/test_request/,sentry-sample_rate=0.01,sentry-sampled=false",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "content-type": "application/json"
          },
          "params": {},
          "query": {},
          "body": {
            "CPF": "00167590600",
            "Webhook": "https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/G0KnTsuHzz25/",
            "Telefone": "553799781110",
            "URL_LogoPDF": "11HQEpkA-HEprYtECt9loSst9Jdm3huIX1KfXnsSX_30",
            "Tipo consulta": "CPF"
          },
          "webhookUrl": "http://localhost:5678/webhook-test/valido-cadastro_bacen",
          "executionMode": "test"
        }
      }
    ],
    "HTTP Request": [
      {
        "json": {
          "HEADER": {
            "INFORMACOES_RETORNO": {
              "VERSAO": "20180521",
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "CHAVE_CONSULTA": "1686673",
              "PRODUTO": "994-CCF + PROTESTO NACIONAL",
              "CLIENTE": "40.126.612/0001-40-Rede Quero Imoveis",
              "DATA_HORA_CONSULTA": "19/02/2025 16:04",
              "TERMINAL": "",
              "SOLICITANTE": "IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)",
              "PDF": "https://api.iconsultei.com.br/tools/generate-pdf.aspx?file_code=KMksdGPpofE6N%2f0X5crXXn0mpoXIfX8bkU3pGzPhkKA%3d",
              "ENTIDADE": "26",
              "REQUISICAO": "cd34ed28d2154539b3d8bbb97ec5402e/19022025160423",
              "TEMPO_RESPOSTA": {
                "INICIO": "1739991863,46412",
                "FINAL": "1739991878,34193",
                "INTERVALO": "14,878"
              },
              "INFORM_EXTERNO": {
                "REQUISICAO_EXTERNA": "bfe1b002f8c44e5399241291dd40f2ce/19022025160423",
                "ENTIDADE_EXTERNA": "19",
                "CHAVE_EXTERNA": "22320466"
              }
            },
            "PARAMETROS": {
              "CPFCNPJ": "00167590600"
            },
            "DADOS_RETORNADOS": {
              "DADOS_RECEITA_FEDERAL": "1",
              "ALERTA_DOCUMENTOS_ROUBADOS": "0",
              "DADOS_AGENCIA_BANCARIA": "0",
              "PROTESTO_SINTETICO": "0",
              "PROTESTO_ANALITICO": "0",
              "ENDERECOS": "0",
              "FALENCIAS_ACOES_RECUPERACOES": "0",
              "INFORMACOES_ELEITORAIS": "0",
              "QUADRO_SOCIETARIO": "0",
              "PARTICIPACAO_EM_EMPRESAS": "1",
              "PENDENCIAS_INTERNAS": "0",
              "PENDENCIAS_FINANCEIRAS": "0",
              "INFORMACOES_DA_EMPRESA": "0",
              "CCF_BACEN": "1",
              "CCF_VAREJO": "0",
              "RECHEQUE_ONLINE": "0",
              "RECHEQUE": "0",
              "CONTUMACIA": "0",
              "ENDERECO_DO_CEP": "0",
              "PASSAGENS_COMERCIAIS": "0",
              "INFORMACOES_ALERTAS_RESTRICOES": "0",
              "SCORE": "0",
              "ADMINISTRADORES_DA_EMPRESA": "0",
              "TITULOS_A_VENCER": "0",
              "HISTORICO_DE_PAGAMENTOS": "0",
              "REFERENCIA_DE_NEGOCIOS": "0",
              "PRINCIPAIS_FORNECEDORES": "0",
              "IDENTIFICACAO_PESSOA_FISICA": "0",
              "OCUPACAO_PESSOA_FISICA": "0",
              "PARTICIPACAO_EM_FALENCIAS": "0",
              "TELEFONE_FIXO": "1",
              "TITULAR_DO_TELEFONE": "0",
              "OUTROS_TELEFONES": "0",
              "TELEFONE_CELULAR": "1",
              "PARENTES": "1",
              "CONTATOS": "0",
              "LOCAIS_TRABALHO": "0",
              "TELEFONE_COMERCIAL": "0",
              "DADOS_GERAIS": "0",
              "VIZINHOS": "0",
              "RESIDENTES": "0",
              "BENEFICIO": "0",
              "EMAILS": "1",
              "INFOBUSCA": "0",
              "VINCULO_MESMO_ENDERECO": "0",
              "SOMENTE_TELEFONE": "0",
              "SOMENTE_ENDERECO": "1",
              "RELATORIO_TEXTO": "0",
              "VEICULOS_POR_DOCUMENTO": "1",
              "CNH": "0",
              "AGREGADOS": "0",
              "BIN_NACIONAL": "0",
              "BIN_ESTADUAL": "0",
              "GRAVAME": "0",
              "LEILAO": "0",
              "CONFERENCIA_MOTOR_E_CHASSI": "0",
              "HISTORICO_PROPRIETARIOS": "0",
              "HISTORICO_ROUBO_FURTO": "0",
              "ROUBO_FURTO": "0",
              "PERDA_TOTAL": "0",
              "ALERTAS": "0",
              "RECALL": "0",
              "DPVAT": "0",
              "DECODIFICADOR_DE_CHASSI": "0",
              "PRECIFICADOR": "0",
              "RENAJUD": "0",
              "RENACH": "0",
              "CRLV": "0",
              "REMARKETING": "0",
              "INDICIO_SINISTRO": "0",
              "PARECER_TECNICO": "0",
              "PENDENCIAS_REFIN": "0",
              "PENDENCIAS_VENCIDAS": "0",
              "LOCALIZADOR_AGREGADOS": "0",
              "CARACTERISTICAS_ADICIONAIS": "0",
              "LAUDO_CAUTELAR": "0",
              "DECISAO": "0",
              "LIMITE_CREDITO": "0",
              "FATURAMENTO_PRESUMIDO": "0",
              "PARTICIPACAO_SOCIO_ADM_OUTRAS_EMPRESAS": "0",
              "PARTICIPACOES_EMPRESAS_CONSULTADAS": "0",
              "HIST_CONSULTAS": "0",
              "ACOES_CIVEIS": "0",
              "FALENCIA_RECUPERACAO_JUDICIAL": "0",
              "ANALISE_KILOMETRAGEM": "0",
              "PONTUALIDADE_PAGTO": "0",
              "PROPRIETARIO_ATUAL_VEICULO": "0",
              "VALIDACAO_PESSOA_FISICA": "0",
              "VALIDACAO_PF_BASICA": "0",
              "VALIDACAO_PF_BIOMETRIA_FACE": "0",
              "VALIDACAO_PF_CNH": "0",
              "VALIDACAO_PF_DOCUMENTO": "0",
              "VALIDACAO_PF_ENDERECO": "0",
              "VALIDACAO_PF_FILIACAO": "0",
              "AUTO_VISTORIA": "0",
              "INDICE_SECURITARIO": "0",
              "CALCULO_VALORIZACAO": "0",
              "ATPVE": "0",
              "CREDITO_CONCEDIDO": "0",
              "RENDA_PRESUMIDA": "1",
              "COMPROMETIMENTO_PAGTO": "0",
              "LEILAO_CONJUGADO": "0",
              "CSV": "0",
              "RENAINF": "0",
              "RELATORIO_ARQUIVO": "0",
              "INDICIO_SINISTRO_CONJUGADO": "0",
              "CONSULTA_GENERICA": "0",
              "BATIDOS": "0",
              "RELATORIO_SCR": "0",
              "CADIN": "0",
              "ACOES_TRABALHISTAS": "0",
              "RELATORIO_SCR_SINTETICO": "0",
              "CPR": "0",
              "FICHA_TECNICA_VEICULAR": "0",
              "CHECK_LIST_VEICULAR": "0",
              "DIVIDA_ATIVA_PESSOA_FISICA": "0",
              "DIVIDA_ATIVA_PESSOA_JURIDICA": "0",
              "PENDENCIAS_ISP": "0",
              "RELATORIO_JURIDICO_EMPRESARIAL": "0",
              "INFORMACOES_CRIMINAIS": "0",
              "PROCURADOS_JUSTICA": "0",
              "RELATORIO_JURIDICO_PESSOA_FISICA": "0",
              "DETALHAMENTO_ACAO_JUDICIAL": "0",
              "RELATORIO_IMOVEIS": "0",
              "DEBITOS_IPVA": "0",
              "DEBITO_DIRETO_AUTORIZADO": "0",
              "CONTROLE_POSITIVO": "0",
              "ALERTA_INDICIO": "0",
              "RELATORIO_CREDITICIO_ARQUIVO": "0",
              "IMAGENS_VEICULO": "0",
              "RELATORIO_SCR_ENCAPSULADO": "0",
              "RESTRICOES_FINANCEIRAS": "0",
              "ALERTA_VEICULAR_PROPRIEDADE": "0",
              "MOTOR_CREDITO": "0"
            },
            "CONTROLE": {
              "QUANTIDADE_OCORRENCIAS": "1",
              "OCORRENCIAS": [
                {
                  "CONTEUDO": "42",
                  "FONTE": "73",
                  "STATUS": "1"
                }
              ]
            }
          },
          "CREDCADASTRAL": {
            "DADOS_RECEITA_FEDERAL": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "TIPO_PESSOA": "FISICA",
              "NOME": "ALESSANDRA TELES MONTEIRO",
              "RAZAO_SOCIAL": "",
              "SITUACAO_RECEITA": "REGULAR",
              "DATA_NASCIMENTO_FUNDACAO": "18/05/1974",
              "NOME_MAE": "NAIR TELES MONTEIRO",
              "DATA_ATUALIZACAO": "27/10/2018",
              "SEXO": "F",
              "EMAIL": "",
              "NATUREZA_JURIDICA": "",
              "ATIVIDADE_ECONOMICA_PRINCIPAL": ""
            },
            "PARTICIPACAO_EM_EMPRESAS": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "QUANTIDADE_OCORRENCIAS": "2",
              "OCORRENCIAS": [
                {
                  "CNPJ": "19405961000104",
                  "RAZAO_SOCIAL": "BUCHAUL E TELES ESTETICA & PILATES LTDA",
                  "PARTICIPANTE_TIPO": "FISICA",
                  "PARTICIPANTE_DOCUMENTO": "00167590600",
                  "PARTICIPANTE_CARGO": "SOCIO-ADMINISTRADOR",
                  "PARTICIPANTE_ENTRADA": "",
                  "PARTICIPACAO": "0",
                  "QTD_OUTROS_SOCIOS": ""
                },
                {
                  "CNPJ": "39576472000122",
                  "RAZAO_SOCIAL": "ALESSANDRA TELES CENTRO DE ESTETICA LTDA",
                  "PARTICIPANTE_TIPO": "FISICA",
                  "PARTICIPANTE_DOCUMENTO": "00167590600",
                  "PARTICIPANTE_CARGO": "SOCIO-ADMINISTRADOR",
                  "PARTICIPANTE_ENTRADA": "",
                  "PARTICIPACAO": "0",
                  "QTD_OUTROS_SOCIOS": ""
                }
              ]
            },
            "CH_SEM_FUNDOS_BACEN": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "QUANTIDADE_OCORRENCIA": "11",
              "CORRENTISTA": "ALESSANDRA TELES MONTEIRO",
              "TIPO_PESSOA": "FISICA",
              "CPFCNPJ": "001.675.906-00",
              "OCORRENCIAS": [
                {
                  "DCR_BANCO": "341 BANCO ITAU S A",
                  "NUM_BANCO": "341 BANCO ITAU S A",
                  "NUM_AGENCIA": "6865",
                  "MOTIVO_DEVOLUCAO": "12 - MOTIVO 12",
                  "QTD_CHEQUES": "11",
                  "DT_ULTIMA_OCORRENCIA": "09/2022",
                  "DADOS_AGENCIA": "",
                  "DOC_RELACIONADO": "001.675.906-00"
                }
              ]
            },
            "TELEFONE_FIXO": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "REGISTRO_LOCALIZADO": "1",
              "TELEFONES": [
                {
                  "NOME": "ALESSANDRA TELES MONTEIRO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "DDD": "22",
                  "NUM_TELEFONE": "30251559",
                  "ENDERECO": "",
                  "NUMERO": "",
                  "COMPLEMENTO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "",
                  "OBITO": "",
                  "SEXO": "",
                  "NOME_MAE": "NAIR TELES MONTEIRO"
                },
                {
                  "NOME": "ALESSANDRA TELES MONTEIRO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "DDD": "22",
                  "NUM_TELEFONE": "30560617",
                  "ENDERECO": "",
                  "NUMERO": "",
                  "COMPLEMENTO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "",
                  "OBITO": "",
                  "SEXO": "",
                  "NOME_MAE": "NAIR TELES MONTEIRO"
                },
                {
                  "NOME": "ALESSANDRA TELES MONTEIRO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "DDD": "22",
                  "NUM_TELEFONE": "27312563",
                  "ENDERECO": "",
                  "NUMERO": "",
                  "COMPLEMENTO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "",
                  "OBITO": "",
                  "SEXO": "",
                  "NOME_MAE": "NAIR TELES MONTEIRO"
                },
                {
                  "NOME": "ALESSANDRA TELES MONTEIRO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "DDD": "22",
                  "NUM_TELEFONE": "30521763",
                  "ENDERECO": "",
                  "NUMERO": "",
                  "COMPLEMENTO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "",
                  "OBITO": "",
                  "SEXO": "",
                  "NOME_MAE": "NAIR TELES MONTEIRO"
                },
                {
                  "NOME": "ALESSANDRA TELES MONTEIRO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "DDD": "22",
                  "NUM_TELEFONE": "30520742",
                  "ENDERECO": "",
                  "NUMERO": "",
                  "COMPLEMENTO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "",
                  "OBITO": "",
                  "SEXO": "",
                  "NOME_MAE": "NAIR TELES MONTEIRO"
                }
              ]
            },
            "TELEFONE_CELULAR": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "REGISTRO_LOCALIZADO": "1",
              "TELEFONES": [
                {
                  "NOME": "ALESSANDRA TELES MONTEIRO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "DDD": "22",
                  "NUM_TELEFONE": "999282329",
                  "ENDERECO": "",
                  "NUMERO": "",
                  "COMPLEMENTO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "",
                  "OBITO": "",
                  "SEXO": "",
                  "NOME_MAE": "NAIR TELES MONTEIRO"
                },
                {
                  "NOME": "ALESSANDRA TELES MONTEIRO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "DDD": "22",
                  "NUM_TELEFONE": "997301805",
                  "ENDERECO": "",
                  "NUMERO": "",
                  "COMPLEMENTO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "",
                  "OBITO": "",
                  "SEXO": "",
                  "NOME_MAE": "NAIR TELES MONTEIRO"
                },
                {
                  "NOME": "ALESSANDRA TELES MONTEIRO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "DDD": "22",
                  "NUM_TELEFONE": "998606881",
                  "ENDERECO": "",
                  "NUMERO": "",
                  "COMPLEMENTO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "",
                  "OBITO": "",
                  "SEXO": "",
                  "NOME_MAE": "NAIR TELES MONTEIRO"
                },
                {
                  "NOME": "ALESSANDRA TELES MONTEIRO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "DDD": "22",
                  "NUM_TELEFONE": "998998933",
                  "ENDERECO": "",
                  "NUMERO": "",
                  "COMPLEMENTO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "",
                  "OBITO": "",
                  "SEXO": "",
                  "NOME_MAE": "NAIR TELES MONTEIRO"
                }
              ]
            },
            "PARENTES": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "REGISTRO_LOCALIZADO": "1",
              "INFOCONTATOS": [
                {
                  "NOME": "PAULO BUCHAUL FILHO",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "75820358791",
                  "RELACAO": "SOCIO (A)",
                  "ENDERECO": "",
                  "BAIRRO": "",
                  "CIDADE": "",
                  "CEP": "",
                  "UF": "",
                  "NASCIMENTO": "29/07/1958",
                  "OBITO": "",
                  "SEXO": "",
                  "TELEFONE": ""
                }
              ]
            },
            "EMAILS": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "REGISTRO_LOCALIZADO": "1",
              "INFOEMAILS": [
                {
                  "ENDERECO": "P.BUCHFIL@GMAIL.COM"
                },
                {
                  "ENDERECO": "LUCAS.LOUSTER@GMAIL.COM"
                },
                {
                  "ENDERECO": "SAMMUSANTOS01@GLOBO.COM"
                },
                {
                  "ENDERECO": "P.BUCHFIL@YAHOO.COM.BR"
                }
              ]
            },
            "SOMENTE_ENDERECO": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "REGISTRO_LOCALIZADO": "1",
              "DADOS": [
                {
                  "COD_IDENTIFICACAO_ENDERECO": "",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "ENDERECO": "AV PELINCA",
                  "NUMERO": "162",
                  "COMPLEMENTO": "ALTO",
                  "BAIRRO": "PARQUE TAMANDARE",
                  "CIDADE": "CPOS DOS GOYTACAZES",
                  "CEP": "28035053",
                  "UF": "RJ",
                  "PONTUACAO": ""
                },
                {
                  "COD_IDENTIFICACAO_ENDERECO": "3301009",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "ENDERECO": "R OLEGARIO MARIANO",
                  "NUMERO": "137",
                  "COMPLEMENTO": "",
                  "BAIRRO": "PARQUE JOQUEI CLUB",
                  "CIDADE": "CAMPOS DOS GOYTACAZES",
                  "CEP": "28020245",
                  "UF": "RJ",
                  "PONTUACAO": ""
                },
                {
                  "COD_IDENTIFICACAO_ENDERECO": "3301009",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "ENDERECO": "AV TREZE DE MAIO",
                  "NUMERO": "286",
                  "COMPLEMENTO": "AP 103",
                  "BAIRRO": "CENTRO",
                  "CIDADE": "CAMPOS DOS GOYTACAZES",
                  "CEP": "28010260",
                  "UF": "RJ",
                  "PONTUACAO": ""
                },
                {
                  "COD_IDENTIFICACAO_ENDERECO": "3301009",
                  "TIPO_PESSOA": "FISICA",
                  "DOCUMENTO": "00167590600",
                  "ENDERECO": "R PEDRO MARINS",
                  "NUMERO": "182",
                  "COMPLEMENTO": "AP 203",
                  "BAIRRO": "PARQUE TURF CLUB",
                  "CIDADE": "CAMPOS DOS GOYTACAZES",
                  "CEP": "28015180",
                  "UF": "RJ",
                  "PONTUACAO": ""
                }
              ]
            },
            "VEICULOS_POR_DOCUMENTO": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "QUANTIDADE_OCORRENCIAS": "0",
              "OBSERVACAO": "",
              "OCORRENCIAS": []
            },
            "RENDA_PRESUMIDA": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO",
              "FAIXA": "5 A 10 SM",
              "RENDA_ANUAL": "",
              "MENSAGEM": "AREA: EMPRESARIO/ EXPERIENCIA: EMPRESARIO",
              "DATA_REFERENCIA": "",
              "VALOR_PRESUMIDO": "",
              "DADOS_CADASTRO_POSITIVO": ""
            }
          },
          "VEICULAR": {
            "VEICULOS_POR_DOCUMENTO": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "QUANTIDADE_OCORRENCIAS": "0",
              "OBSERVACAO": "",
              "OCORRENCIAS": []
            }
          }
        }
      }
    ],
    "evodata4": [
      {
        "json": {
          "retorno": "OK",
          "msg": {
            "Dados Pessoais": {
              "Nome": "ALESSANDRA TELES MONTEIRO",
              "Sexo": "ALESSANDRA TELES MONTEIRO",
              "Nascimento": "18/05/1974",
              "Nome da Mae": "NAIR TELES MONTEIRO",
              "Nome do Pai": "SEM INFORMAÇÃO",
              "Conjuge": null,
              "CPF do Conjuge": null,
              "CD Sit Cad": "2",
              "DT Sit Cad": "2019-10-04 00:00:00",
              "Endereco de Nascimento": "R OLEGARIO MARIANO",
              "Raca/Cor": null,
              "Falecido": null,
              "Data Falecimento": null,
              "Id Portador Deficiencia": null
            },
            "Documentos": {
              "CPF": "00167590600",
              "CBO": "5199",
              "CNS": "705406450889499",
              "NIS": null,
              "PIS": null,
              "RG": {
                "Numero": null,
                "Orgao Emissor": null,
                "UF": null,
                "Data da Emissao": null
              },
              "CTPS": {
                "Numero": null,
                "Serie": null,
                "Data da Emissao": null
              },
              "Titulo de Eleitor": {
                "Numero": null,
                "Zona": null,
                "Secao": null
              },
              "Certidao de Nascimento": null,
              "Certidao de Casamento": null
            },
            "Parentes": [
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "10115484701",
                "Nome Vinculo": "ANDREIA MONTEIRO DE PAULA",
                "Vinculo": "IRMA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "01166124797",
                "Nome Vinculo": "ADRIANA TELES MONTEIRO",
                "Vinculo": "IRMA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "14925039750",
                "Nome Vinculo": "THAYSA TELES LOURENCO",
                "Vinculo": "SOBRINHA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "08021402709",
                "Nome Vinculo": "LEANDRO MONTEIRO",
                "Vinculo": "IRMA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "13589372737",
                "Nome Vinculo": "INGRID TELES MONTEIRO",
                "Vinculo": "IRMA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "01358645779",
                "Nome Vinculo": "NAIR TELES MONTEIRO",
                "Vinculo": "MAE"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "14396762755",
                "Nome Vinculo": "ADRIANE TELES LOURENCO",
                "Vinculo": "SOBRINHA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "11691358703",
                "Nome Vinculo": "LUIZ ANTONIO TELES MONTEIRO",
                "Vinculo": "IRMA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "12525496795",
                "Nome Vinculo": "ARTHUR TELES LOURENCO",
                "Vinculo": "SOBRINHA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "09405858718",
                "Nome Vinculo": "MARCIA MONTEIRO",
                "Vinculo": "IRMA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "12524072703",
                "Nome Vinculo": "LEONARDO TELES MONTEIRO",
                "Vinculo": "IRMA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "07392212729",
                "Nome Vinculo": "ADRIANO TELES MONTEIRO",
                "Vinculo": "IRMA(O)"
              },
              {
                "CPF": "00167590600",
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF Vinculo": "04507056926",
                "Nome Vinculo": "LUZIA GONCALVES CORDEIRO MONTEIRO",
                "Vinculo": "IRMA(O)"
              }
            ],
            "Veiculos": [],
            "Dados Universitarios": [],
            "Dados Trabalhistas": [],
            "Poder Aquisitivo": {
              "ID Contatos": "25962531",
              "Codigo do Poder Aquisitivo": "3",
              "Poder Aquisitivo": "MEDIO BAIXO",
              "Renda Poder Aquisitivo": "1457,3526284834263",
              "Fx Poder Aquisitivo": "De R$ 1018 até R$ 1630",
              "Instituicao Bancaria": null,
              "Codigo da Agencia": null,
              "Ano Referencia": "2016",
              "Data Lote": null,
              "Tarjetas": []
            },
            "Perfil de Consumo": [],
            "Telefones": [
              {
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF": "00167590600",
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": "LETICIA TELES DE BARROS ",
                "CPF": "00167590600",
                "Telefone": "299282329",
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": "299282329",
                "Tipo": null
              },
              {
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF": "00167590600",
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF": "00167590600",
                "Telefone": "2230251559",
                "Tipo": "Residencial"
              }
            ],
            "Emails": [
              {
                "Nome": null,
                "CPF": null,
                "E-mail": "p.buchfil@gmail.com"
              },
              {
                "Nome": null,
                "CPF": null,
                "E-mail": "p.buchfil@yahoo.com.br"
              },
              {
                "Nome": null,
                "CPF": null,
                "E-mail": "sammusantos01@globo.com"
              },
              {
                "Nome": null,
                "CPF": null,
                "E-mail": "lucas.louster@gmail.com"
              },
              {
                "Nome": "LETICIA TELES DE BARROS ",
                "CPF": "00167590600",
                "E-mail": "euteleslele@gmail.com"
              },
              {
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF": "00167590600",
                "E-mail": null
              },
              {
                "Nome": "ALESSANDRA TELES MONTEIRO",
                "CPF": "00167590600",
                "E-mail": "p.buchfil@gmail.com"
              }
            ],
            "Enderecos": [
              {
                "Rua": "R OLEGARIO MARIANO",
                "Bairro": "JOCKEY CLUB",
                "CEP": "28060000",
                "Cidade": "Campos dos Goytacazes",
                "Estado": "Rio de Janeiro"
              },
              {
                "Rua": "R OLEGARIO MARIANO",
                "Bairro": "JOCKEY CLUB",
                "CEP": "28.060-000",
                "Cidade": "CAMPOS DOS GOYTACAZES - RJ",
                "Estado": null
              },
              {
                "Rua": "R OLEGARIO MARIANO",
                "Bairro": "JOCKEY CLUB",
                "CEP": "28.060-000",
                "Cidade": "CAMPOS DOS GOYTACAZES - RJ",
                "Estado": null
              },
              {
                "Rua": "Rua Voluntários da Pátria",
                "Bairro": "Centro",
                "CEP": "28030260",
                "Cidade": "Campos dos Goytacazes",
                "Estado": "RJ"
              },
              {
                "Rua": "OLEGARIO MARIANO",
                "Bairro": "JOCKEY CLUB",
                "CEP": "28060000",
                "Cidade": "CAMPOS DOS GOYTACAZES",
                "Estado": "RJ"
              },
              {
                "Rua": "BR. DE MIRACEMA",
                "Bairro": "CAMPOS DOS GOYTACAZES",
                "CEP": "28035301",
                "Cidade": "CAMPOS DOS GOYTACAZES",
                "Estado": "RJ"
              }
            ],
            "Vizinhos": [
              {
                "Nome": "Amilton Filho",
                "CPF": "NULL",
                "Rua": "Rua Voluntários da pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Vinicius de Mello Rosa",
                "CPF": "NULL",
                "Rua": "Rua Voluntarios da Patria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "RAFAEL MALAFAIA QUINTAN",
                "CPF": "NULL",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "KISSILA ELEONORA MOREIRA DE ASSIS",
                "CPF": "762.853.086-91",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Renata Gonçalves",
                "CPF": "NULL",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Anna Veronica Gonçalves Marcias",
                "CPF": "NULL",
                "Rua": "Voluntarios da Patria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Neivaldo Fraga de Azevedo",
                "CPF": "NULL",
                "Rua": "Rua Voluntarios da Patria - de 415/416 ao fim",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Rodrigo  Madeira",
                "CPF": "NULL",
                "Rua": "Rua VoluntÃ¡rios da PÃ¡tria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Wesley Augusto Moraes Rodrigues da Silva",
                "CPF": "NULL",
                "Rua": "Rua Voluntarios da Patria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "KELI F DO NASCIMENTO",
                "CPF": "07524478747",
                "Rua": "VOLUNTARIOS DA PATRIA",
                "Estado": "RJ"
              },
              {
                "Nome": "Luiza Sardinha",
                "CPF": "NULL",
                "Rua": "Rua Voluntarios da Patria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "LUDMILLA AYRES DE FREITAS BARRETO",
                "CPF": "NULL",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "ANDERSON MEDEIROS GONÇALVES",
                "CPF": "02884706720",
                "Rua": "Rua Voluntários da Pátria, 426 Apt 704",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "bruno de oliveira caetano",
                "CPF": "NULL",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "MARIANA BARRETO",
                "CPF": "141.063.897-97",
                "Rua": "Rua Voluntarios da Patria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "cesar manhaes de lima barreto",
                "CPF": "NULL",
                "Rua": "Rua Voluntarios da Patria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Luiza Borelli",
                "CPF": "13665429757",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Marcos da Silva Filho",
                "CPF": "05504254540",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Thalyta Wangler",
                "CPF": "NULL",
                "Rua": "Rua Volunt?rios da P?tria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Juliana Coelho",
                "CPF": null,
                "Rua": "Rua Voluntários da Pátria, 426 APTO 605",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Vera helena Gicovate paes",
                "CPF": "32031416715",
                "Rua": "Rua Voluntarios da Patria",
                "Estado": "rj"
              },
              {
                "Nome": "Milena Ferreira Hygino Nunes",
                "CPF": "69994501704",
                "Rua": "Rua Voluntários da Pátria, 426 apt.303",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Lucas Silva Nicolau",
                "CPF": "05793764780",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Fernanda  Souza ",
                "CPF": null,
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Anaildes Calheira Rangel",
                "CPF": "00518530515",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Julia Moura Nascimento",
                "CPF": "77972112720",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "jeniffer",
                "CPF": "14298196771",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Alexandre Aguiar ",
                "CPF": "NULL",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Leandro Ribeiro da S Moço",
                "CPF": "05805070766",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Fátima Riter Gomes",
                "CPF": "09179265790",
                "Rua": "RUA VOLUNTÁRIOS DA PÁTRIA",
                "Estado": "RJ"
              },
              {
                "Nome": "Elana",
                "CPF": "14290593704",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "tatiana tavares ribeiro",
                "CPF": "04200030705",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Munike Galdino",
                "CPF": "10645059706",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Luana Campos Coutinho",
                "CPF": "15625374740",
                "Rua": "RUA VOLUNTÁRIOS DA PÁTRIA",
                "Estado": "RJ"
              },
              {
                "Nome": "Natália Moço",
                "CPF": "12354498748",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "anaildes calheira",
                "CPF": "NULL",
                "Rua": "VOLUNTARIOS DA PATRIA",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Jeniffer Constantino",
                "CPF": "NULL",
                "Rua": "VOLUNTARIOS DA PATRIA",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Veronica Vasconcelos",
                "CPF": "15193060757",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Gabriel Amorim",
                "CPF": "12311253735",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "gilson pierre ribeiro",
                "CPF": "92984010787",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "os freitas",
                "CPF": "14217948700",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Leila Pedra",
                "CPF": "08793642709",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Camilo Silva",
                "CPF": "08151904763",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Giselly Fernandes",
                "CPF": "13120226718",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Asafe Ribeiro Cruz",
                "CPF": "09855736788",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "CAROLINA REIS CARVALHO",
                "CPF": "09297222641",
                "Rua": "RUA VOLUNTÁRIOS DA PÁTRIA",
                "Estado": "RJ"
              },
              {
                "Nome": "J?ssica Ferreira",
                "CPF": "NULL",
                "Rua": "Rua Volunt?rios da P?tria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Tatiana  Cruz",
                "CPF": "NULL",
                "Rua": "VOLUNTARIOS DA PATRIA",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Suelen Carvalho",
                "CPF": "87010917787",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Jéssica Mendes S. M. Ferreira",
                "CPF": "09721148741",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Maria Damian",
                "CPF": "12798516781",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "George",
                "CPF": "12450578714",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Leonara Nunes Brum",
                "CPF": "12624718699",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Francy Helen da Silva Barbosa",
                "CPF": "15300703761",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Raphael Arenásio",
                "CPF": "11822248736",
                "Rua": "VOLUNTARIOS DA PATRIA",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Maria Luiza Soares",
                "CPF": "16270119782",
                "Rua": "R Voluntarios da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Sinpospetro Campos dos Goytacazes RJ e R",
                "CPF": "11651432000189",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Osvaldo Ribeiro da Silva Junior",
                "CPF": "09137370707",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Jéssica Trindade",
                "CPF": "13391961740",
                "Rua": "R Voluntarios da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "AVM INCORP. DE EMPREEND. LTDA",
                "CPF": "01489983000134",
                "Rua": "Voluntarios da Patria",
                "Estado": "RJ"
              },
              {
                "Nome": "Letícia Aparecida S G TOLEDO",
                "CPF": "35827070831",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "VALDECI DIAS GUIMARAES",
                "CPF": "00990410811",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Thais Thiago",
                "CPF": "10365188760",
                "Rua": "R Vltos da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "ADIBE FIUZA RANGEL",
                "CPF": "08208307718",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Barbara  Marcias ",
                "CPF": "16731105767",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Henrique Amorim Fernandes",
                "CPF": "59440317787",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Adélia Sepúlveda",
                "CPF": "05500425714",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "ALISSON LUIZ HOTT 09586924750",
                "CPF": "39463036000147",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Ingrid Esteves Pereira",
                "CPF": "11879115778",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Pollyana Botelho Viega",
                "CPF": "14482232700",
                "Rua": "R Vltos da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Ester Paulo Rodrigues ",
                "CPF": "11094534773",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "DENISE TINOCO SEIXAS DE ALMEIDA",
                "CPF": "21624970000138",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Adelia  Sepulveda ",
                "CPF": "05500425714",
                "Rua": "Rua Voluntários da Pátria,488,Centro",
                "Estado": "RJ"
              },
              {
                "Nome": "JULIO S LIMA",
                "CPF": "NULL",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Karla Skau",
                "CPF": "62430548372",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Barbara Marcias de Sousa",
                "CPF": "167.311.057-67",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "gabriela rangel",
                "CPF": "16282534798",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Daniel Miranda Cruz",
                "CPF": "09855736788",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Laura Manhães de Lima Pinto",
                "CPF": "05578326757",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Elisa Campos",
                "CPF": "16814248786",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Cavaleiros Barbearia",
                "CPF": "28901277000104",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Dyego Queiroz",
                "CPF": "NULL",
                "Rua": "Rua voluntarios da patria 500 sala 502 - (edf",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Victória P Souza",
                "CPF": "16497696792",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Renato Corr?a",
                "CPF": "70310181704",
                "Rua": "Rua Volunt?rios da P?tria",
                "Estado": "Rio de Janeiro"
              },
              {
                "Nome": "Isabela Freitas",
                "CPF": "14306587703",
                "Rua": "Rua VoluntÃ¡rios da PÃ¡tria",
                "Estado": "RJ"
              },
              {
                "Nome": "Marcia Rangel",
                "CPF": "05504254540",
                "Rua": "Rua Voluntários da Pátria",
                "Estado": "RJ"
              },
              {
                "Nome": "Gabriela Silva Rangel ",
                "CPF": "16282534798",
                "Rua": "Rua VoluntÃ¡rios da PÃ¡tria",
                "Estado": "RJ"
              }
            ]
          }
        }
      }
    ],
    "OpenAI1": [
      {
        "json": {
          "content": "### Dados Pessoais\n*Nome:* ALESSANDRA TELES MONTEIRO\n*CPF:* 00167590600\n*Nascimento:* 18/05/1974\n*Nome da Mãe:* NAIR TELES MONTEIRO\n\n\n## *Telefones*\n- 299282329\n- 2230251559\n\n## *E-mails*\n- p.buchfil@gmail.com\n- p.buchfil@yahoo.com.br\n- sammusantos01@globo.com\n- lucas.louster@gmail.com\n- euteleslele@gmail.com\n\n## *Possíveis Parentes*\n- ANDREIA MONTEIRO DE PAULA - IRMA(O)\n- ADRIANA TELES MONTEIRO - IRMA(O)\n- THAYSA TELES LOURENCO - SOBRINHA(O)\n- LEANDRO MONTEIRO - IRMA(O)\n- INGRID TELES MONTEIRO - IRMA(O)\n\n----------------- / / -----------------\n\n*Nome:* _ALESSANDRA TELES MONTEIRO_\n*CPF/CNPJ:* _001.675.906-00_\n\n*Bacen*\n*Banco:* _341 BANCO ITAU S A_\n*Agencia:* _6865_\n*Motivo:* _12 - MOTIVO 12_\n*Qnt cheques:* _11_\n*Data última ocorrência:* _09/2022_",
          "signal": {
            "aborted": false,
            "onabort": null
          },
          "timeout": 120000,
          "output": "```html\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 0; }\n        h1, h2, h3 { color: #333; }\n        .section { margin-bottom: 20px; padding: 10px; border: 1px solid #ccc; border-radius: 5px; }\n        .section-header { font-weight: bold; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 11px; }\n        th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n\n        /* Estilo para a imagem do banner */\n        .banner {\n            width: 100%;\n            height: auto;\n            display: block;\n            margin-top: 0;\n        }\n\n        .footer {\n            font-size: 9px;\n            text-align: left;\n            padding: 10px;\n        }\n    </style>\n</head>\n<body>\n\n<!-- Imagem do banner -->\n<img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\">\n\n<br><br>\n\n<div class=\"section\">\n    <p><strong>Nome:</strong> ALESSANDRA TELES MONTEIRO</p>\n    <p><strong>CPF:</strong> 00167590600</p>\n    <p><strong>Data Nascimento:</strong> 18/05/1974</p>\n    <p><strong>Nome da Mãe:</strong> NAIR TELES MONTEIRO</p>\n\n    <h2 class=\"section-header\">Telefones</h2>\n    <ul>\n        <li>299282329</li>\n        <li>2230251559</li>\n    </ul>\n\n    <h2 class=\"section-header\">E-mails</h2>\n    <ul>\n        <li>p.buchfil@gmail.com</li>\n        <li>p.buchfil@yahoo.com.br</li>\n        <li>sammusantos01@globo.com</li>\n        <li>lucas.louster@gmail.com</li>\n        <li>euteleslele@gmail.com</li>\n    </ul>\n\n    <h2 class=\"section-header\">Possíveis Parentes</h2>\n    <ul>\n        <li>ANDREIA MONTEIRO DE PAULA - IRMA(O)</li>\n        <li>ADRIANA TELES MONTEIRO - IRMA(O)</li>\n        <li>THAYSA TELES LOURENCO - SOBRINHA(O)</li>\n        <li>LEANDRO MONTEIRO - IRMA(O)</li>\n        <li>INGRID TELES MONTEIRO - IRMA(O)</li>\n    </ul>\n</div>\n\n<div class=\"section\">\n    <h2 class=\"section-header\">Bacen</h2>\n    <table>\n        <tbody>\n            <tr><td><strong>Banco:</strong> 341 BANCO ITAU S A</td></tr>\n            <tr><td><strong>Agência:</strong> 6865</td></tr>\n            <tr><td><strong>Motivo:</strong> 12 - MOTIVO 12</td></tr>\n            <tr><td><strong>Quantidade de cheques:</strong> 11</td></tr>\n            <tr><td><strong>Data da última ocorrência:</strong> 09/2022</td></tr>\n        </tbody>\n    </table>\n</div>\n\n<div class=\"section\">\n    <h2 class=\"section-header\">Resumo através de IA</h2>\n    <p>Alessandra Teles Monteiro, portadora do CPF 001.675.906-00, possui informações financeiras que incluem um histórico com cheques relacionados ao Banco Itaú. A quantidade de cheques e o motivo apresentado requer atenção e pode indicar potencial risco na concessão de crédito. É recomendável que Alessandra mantenha suas finanças organizadas e regularize quaisquer pendências para fortalecer sua posição financeira.</p>\n</div>\n\n<div class=\"footer\">\n    <p><strong>INFORMAÇÕES IMPORTANTES:</strong><br>\n    ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br>\n\n    <strong>MINUTA DE DECLARAÇÃO LGPD:</strong><br>\n    DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n</div>\n\n</body>\n</html>\n```",
          "runId": "run_xmlytAsxqy4oLdGpECVPiVhz",
          "threadId": "thread_ersxsf2B0EewW0D64PSjeQ68"
        }
      }
    ],
    "Gerar PDF API": [
      {
        "json": {
          "ResponseId": "1a4cdbd0-09d5-4de1-ae39-fcdaf643fb0a",
          "MbOut": 0.09532399999999999,
          "Cost": 0.0003402647862295,
          "Seconds": 1.2098845,
          "Error": null,
          "Success": true,
          "FileUrl": "https://storage.googleapis.com/a2p-v2-storage/1a4cdbd0-09d5-4de1-ae39-fcdaf643fb0a"
        }
      }
    ],
    "Google Sheets": [
      {
        "json": {
          "row_number": 2,
          "Telefone": "+553799781110",
          "Titulo Consultas": "UniConsultas",
          "URL PDF": "11HQEpkA-HEprYtECt9loSst9Jdm3huIX1KfXnsSX_30",
          "URL PDF Imagem": "https://i.imgur.com/g0gImpK.jpeg",
          "Pacote Ativo": "Pacote Teste Consulta",
          "Valor": 0.1
        }
      }
    ],
    "confere.link4": [
      {
        "json": {
          "data": "<?xml version='1.0' encoding='ISO-8859-1'?><RETORNO>\r\n<CADASTRAIS>\r\n<CPF>167590600</CPF>\r\n<NOME>ALESSANDRA TELES MONTEIRO</NOME>\r\n<NOME_MAE>NAIR TELES MONTEIRO</NOME_MAE>\r\n<NASCTO>18/05/1974</NASCTO>\r\n<IDADE>51 anos</IDADE>\r\n<SEXO>Feminino</SEXO>\r\n\r\n<RG></RG>\r\n<ORGAO_EMISSOR></ORGAO_EMISSOR>\r\n<UF_EMISSAO></UF_EMISSAO>\r\n<TITULO_ELEITOR></TITULO_ELEITOR>\r\n<NIT></NIT>\r\n<ESCOLARIDADE> </ESCOLARIDADE>\r\n<NACIONALIDADE></NACIONALIDADE>\r\n<PROFISSAO></PROFISSAO>\r\n<SALARIO></SALARIO>\r\n<CLASSE_ECONOMICA></CLASSE_ECONOMICA>\r\n<CONSTA_OBITO></CONSTA_OBITO>\r\n\r\n</CADASTRAIS>\r\n<INSS>\r\n\r\n</INSS><TELEFONES_FIXO><TELEFONE><NUMERO>2230560617</NUMERO><OPERADORA>CLARO S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>2227312563</NUMERO><OPERADORA>TELEMAR NORTE LESTE S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>FIXO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>2230520742</NUMERO><OPERADORA>CLARO S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>FIXO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>baixa</PRIORIDADE></TELEFONE></TELEFONES_FIXO><TELEFONES_MOVEL><TELEFONE><NUMERO>22999928232</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>22997408624</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>22997301805</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL POS-PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>22999282329</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL POS-PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>22998804150</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>POS</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE></TELEFONES_MOVEL><EMAILS><EMAIL>lucas.louster@gmail.com</EMAIL>\r\n<EMAIL>p.buchfil@yahoo.com.br</EMAIL>\r\n<EMAIL>p.buchfil@gmail.com</EMAIL>\r\n</EMAILS><ENDERECOS><ENDERECO><LOGRADOURO>R SILVA PINTO</LOGRADOURO><NUMERO>227</NUMERO><COMPLEMENTO></COMPLEMENTO><BAIRRO>PRQ TURF CLUB</BAIRRO><CEP>28027270</CEP><CIDADE>CAMPOS DOS GOYTACAZES</CIDADE><ESTADO>RJ</ESTADO></ENDERECO><ENDERECO><LOGRADOURO>R PEDRO MARINS</LOGRADOURO><NUMERO>182</NUMERO><COMPLEMENTO>AP 203</COMPLEMENTO><BAIRRO>PRQ TURF CLUB</BAIRRO><CEP>28015180</CEP><CIDADE>CAMPOS DOS GOYTACAZES</CIDADE><ESTADO>RJ</ESTADO></ENDERECO><ENDERECO><LOGRADOURO>DAS CAMELIAS</LOGRADOURO><NUMERO>96</NUMERO><COMPLEMENTO></COMPLEMENTO><BAIRRO>CENTRO</BAIRRO><CEP>28200000</CEP><CIDADE>SAO JOAO DA BARRA</CIDADE><ESTADO>RJ</ESTADO></ENDERECO><ENDERECO><LOGRADOURO>R BENEDITO QUEIROZ</LOGRADOURO><NUMERO>82</NUMERO><COMPLEMENTO></COMPLEMENTO><BAIRRO>PRQ TURF CLUB</BAIRRO><CEP>28024040</CEP><CIDADE>CAMPOS DOS GOYTACAZES</CIDADE><ESTADO>RJ</ESTADO></ENDERECO><ENDERECO><LOGRADOURO>R OLEGARIO MARIANO</LOGRADOURO><NUMERO>137</NUMERO><COMPLEMENTO> CASA</COMPLEMENTO><BAIRRO>PARQUE JOQUEI CLUB</BAIRRO><CEP>28020245</CEP><CIDADE>CAMPOS DOS GOYTACAZES</CIDADE><ESTADO>RJ</ESTADO></ENDERECO><ENDERECO><LOGRADOURO>AV PELINCA</LOGRADOURO><NUMERO>162</NUMERO><COMPLEMENTO>AND ALTO DA DROGARIA PACHECO</COMPLEMENTO><BAIRRO>PARQUE TAMANDARE</BAIRRO><CEP>28035053</CEP><CIDADE>CAMPOS DOS GOYTACAZES</CIDADE><ESTADO>RJ</ESTADO></ENDERECO><ENDERECO><LOGRADOURO>AV TREZE DE MAIO</LOGRADOURO><NUMERO>286</NUMERO><COMPLEMENTO>SL 106</COMPLEMENTO><BAIRRO>CENTRO</BAIRRO><CEP>28010260</CEP><CIDADE>CAMPOS DOS GOYTACAZES</CIDADE><ESTADO>RJ</ESTADO></ENDERECO><ENDERECO><LOGRADOURO>RUA BARAO DE MIRACEMA</LOGRADOURO><NUMERO>301</NUMERO><COMPLEMENTO>AP   APARTAMENTO</COMPLEMENTO><BAIRRO>CENTRO</BAIRRO><CEP>28035301</CEP><CIDADE>CAMPOS DOS GOYTACAZES</CIDADE><ESTADO>RJ</ESTADO></ENDERECO></ENDERECOS><POSSIVEIS_PARENTES><CONTATO><CPF>1358645779</CPF>\r\n<NOME>NAIR TELES MONTEIRO</NOME>   \r\n<IDADE>76 anos</IDADE>\r\n<LOCAL>RIO DE JANEIRO/RJ</LOCAL>\r\n<PARENTESCO>MAE</PARENTESCO>\r\n</CONTATO>\r\n<CONTATO>\r\n<CPF>20043188729</CPF>\r\n<NOME>MATHEUS TELES BUCHAUL</NOME>   \r\n<IDADE>14 anos</IDADE>\r\n<LOCAL></LOCAL>\r\n<PARENTESCO>FILHO(A)</PARENTESCO>\r\n</CONTATO></POSSIVEIS_PARENTES><POSSIVEIS_CONTATOS><CONTATO>\r\n<NOME>PAULO BUCHAUL FILHO</NOME>\r\n<IDADE>66 anos</IDADE>\r\n<LOCALIDADE>CAMPOS DOS GOYTACAZES-RJ</LOCALIDADE>\r\n<TP_VINCULO>E-MAIL</TP_VINCULO>\r\n<CPF>75820358791</CPF></CONTATO><CONTATO>\r\n<NOME>LUCAS SANTOS SIQUEIRA SANTANA</NOME>\r\n<IDADE>38 anos</IDADE>\r\n<LOCALIDADE>CAMPOS DOS GOYTACAZES-RJ</LOCALIDADE>\r\n<TP_VINCULO>E-MAIL</TP_VINCULO>\r\n<CPF>11454772751</CPF></CONTATO><CONTATO>\r\n<NOME>ELIANA BORGES BUCHAUL</NOME>\r\n<IDADE>61 anos</IDADE>\r\n<LOCALIDADE>RIO DE JANEIRO-RJ</LOCALIDADE>\r\n<TP_VINCULO>E-MAIL</TP_VINCULO>\r\n<CPF>89614046791</CPF></CONTATO></POSSIVEIS_CONTATOS><REFERENCIA_PROFISSIONAL></REFERENCIA_PROFISSIONAL><EMPRESAS_SOCIO><EMPRESA_SOCIO>\r\n<RAZAO_SOCIAL>ALESSANDRA TELES CENTRO DE EST</RAZAO_SOCIAL>\r\n<CNPJ>39576472000122</CNPJ>\r\n<CIDADE>CAMPOS DOS GOYTACAZES-RJ</CIDADE>\r\n<QUALIFICACAO>Socio-Administrador</QUALIFICACAO>\r\n<DATA_ENTRADA>27/10/2020</DATA_ENTRADA>\r\n<VALOR_PARTICIPACAO></VALOR_PARTICIPACAO>\r\n</EMPRESA_SOCIO><EMPRESA_SOCIO>\r\n<RAZAO_SOCIAL>ALESSANDRA TELES CENTRO DE EST</RAZAO_SOCIAL>\r\n<CNPJ>39576472000203</CNPJ>\r\n<CIDADE>CAMPOS DOS GOYTACAZES-RJ</CIDADE>\r\n<QUALIFICACAO>Socio-Administrador</QUALIFICACAO>\r\n<DATA_ENTRADA>27/10/2020</DATA_ENTRADA>\r\n<VALOR_PARTICIPACAO></VALOR_PARTICIPACAO>\r\n</EMPRESA_SOCIO></EMPRESAS_SOCIO></RETORNO>"
        }
      }
    ]
  },
  "versionId": "6e1f87a0-2d22-4d23-92d4-2478190bccb3",
  "triggerCount": 1,
  "tags": []
}