{
  "createdAt": "2025-07-25T00:58:07.569Z",
  "updatedAt": "2025-07-25T16:43:10.000Z",
  "id": "Fv6Dfi1SWRe0VSJS",
  "name": "Dividas CNPJ 2-1 (ConsultasPrime - restricao-pj)",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "87fd3f79-d8c1-43c5-97e7-08ce0b0c42f2",
              "leftValue": "={{ $json.dadosbasicos.nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6e138bef-4228-4bc8-b3de-74189e4b7b40",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1040,
        1940
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Menu'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Menu'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=### PDF\n{{ $('IF PDF').item.json.FileUrl }}"
            },
            {
              "name": "Informações",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}"
            },
            {
              "name": "Pendências REFIN",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Pendencias Refin'] }}"
            },
            {
              "name": "Pendências PEFIN",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Pendencias Pefin'] }}"
            },
            {
              "name": "Protestos",
              "value": "={{ $('Aggregate6').item.json.Consulta[1].Protesto }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c9f6f82a-fae6-464b-86b9-29e6213a2421",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8640,
        2800
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "Consulta",
        "options": {}
      },
      "id": "a9792883-9196-4285-867e-2ff5108a7ad0",
      "name": "Aggregate6",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4940,
        3140
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "721de4cf-acbe-4ad5-b92a-6b9cd1f23da9",
              "name": "Protesto",
              "value": "={{ $json.protestosdetalhe }}",
              "type": "array"
            },
            {
              "id": "dc3c6f9e-e7b5-4f0b-8b55-b78976fe6000",
              "name": "Protestos Detalhe",
              "value": "={{ $json.protestosresumo }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "bfa6abc9-8c92-498a-b63e-5660bd8ec3f3",
      "name": "Mapa - Protesto",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        0,
        2920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[5] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "92809d3a-15b0-4c24-82bc-e5cf67aebc3c",
      "name": "SE Protesto - 5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2400,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "3cda7c14-eb2a-4ea6-810b-1b4dc04d206f",
      "name": "Protesto - 5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        2400,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[4] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "15c6a972-57ad-49e3-8054-59058796378e",
      "name": "SE Protesto - 4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2620,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "3312114a-103d-4115-9bb9-ae470852af94",
      "name": "Protesto - 4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        2620,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[2] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bab61d10-7896-414c-9179-82d6719b1f74",
      "name": "SE Protesto - 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3060,
        2920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[3] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eab975c0-da28-411b-9308-25e4515d52bb",
      "name": "SE Protesto - 3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2840,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "a51ddff7-e40e-42e1-b25c-329c98cb7b8d",
      "name": "Protesto - 3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        2840,
        3160
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "886f1dd7-0b15-4d6f-b8f7-1127fefe1493",
      "name": "Protesto - 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3060,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[1] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7aa3579f-f93c-44d3-8756-2d9d1a0a3c5d",
      "name": "SE Protesto - 1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3280,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "9b38952e-1001-440f-9955-d3f2b8228a9c",
      "name": "Protesto - 1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3280,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[0].valor }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4b5cfb38-957d-462c-b668-d0fdb9b94c0d",
      "name": "SE Protesto - 0",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3500,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "8007483b-106f-4e49-a4f5-a43ca8359f68",
      "name": "Protesto - 0",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3500,
        3160
      ]
    },
    {
      "parameters": {},
      "id": "2ab58cec-d66b-478c-9397-1d26b376e499",
      "name": "Merge77",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4300,
        3140
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Protestos*\n_Sem pendências registradas._"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "b56c4ffd-d5f4-4c6c-86d8-178a0ecab353",
      "name": "Protesto - ",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3700,
        2920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4ed41126-efa5-41d4-b096-ec5461637733",
      "name": "Retornar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9380,
        2820
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a53c81a8-e7cd-4a5e-837e-bb9e2b633704",
      "name": "Se crédito existe",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        9760,
        2820
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "486c202a-7a4b-4058-950d-0571c0f799c8",
      "name": "Retirar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10220,
        2780
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "49bf872e-6eeb-4e49-9ad1-31b9b1df4324",
      "name": "Retornar Créditos Disponíveis1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10220,
        2980
      ],
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json.creditos }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f8d63391-cf1a-41cb-b379-43e7d7bce352",
      "name": "Retirar Créditos2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10420,
        2980
      ],
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "=+553799781110"
            }
          ]
        },
        "options": {}
      },
      "id": "2f1519e7-4b9b-42ba-9c40-dc3efc15cc4d",
      "name": "Verificar Crédito Arthur",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10220,
        3280
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Verificar Crédito Arthur').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b5fb906a-a2a9-4f92-9728-43e6e70f5e67",
      "name": "Se crédito existe3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        10420,
        3280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4c4b8b4-ac50-4977-b5b7-22b2d88b5eed",
              "name": "Créditos a retirar",
              "value": "={{ $('Dados N8N').item.json['Credito consulta'] }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "43f5051c-891e-482f-884b-b20d508f0b17",
      "name": "Créditos a retirar1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        9580,
        2820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6611ca4d-c98b-4930-bf78-78785d12378b",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "16dd221a-e15e-446d-85f8-1e9329df97cb",
      "name": "Maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        9980,
        2800
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b7e85fee-af87-4e4e-9c81-67e0be269637",
      "name": "Verificar saldo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10420,
        2780
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Retirar Créditos",
        "height": 832.0660667109632,
        "width": 1533.4713488372086
      },
      "id": "d56f1f6c-fe6b-4206-a737-66964b2b2981",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9320,
        2660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad9c09c1-3aaf-4c42-ab43-9f8f30a12e99",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $json.creditos }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1cf9fdc3-4fd0-459f-998c-cd87345f0a1f",
      "name": "If11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        10620,
        2780
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Tipo Consulta",
              "value": "=F",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": 4,
              "type": "number"
            },
            {
              "id": "86de2d86-ffc8-413a-a972-8b7b2e48772b",
              "name": "Nome Menu",
              "value": "Consulta SCPC Boa Vista + Pendências Refin / Pefin + Resumo IA (4 créditos)",
              "type": "string"
            },
            {
              "id": "e705ce72-8ac5-4d21-8d42-672b8d5fe07c",
              "name": "Nome Menu Status",
              "value": "Consulta SCPC Boa Vista + Pendências Refin / Pefin (4 créditos)",
              "type": "string"
            },
            {
              "id": "d565060e-6c73-4764-90d1-7086227302a2",
              "name": "Prompt Resumo IA",
              "value": "=Você receberá dados financeiros e de pendências relacionadas a um CPF ou CNPJ, incluindo informações como dívidas, protestos, status de crédito e score. Sua tarefa é organizar essas informações de maneira clara e objetiva, estruturando-as em seções e terminando com um breve resumo da situação financeira da pessoa física ou jurídica.\n\nInstruções para a Estrutura e Redação:\nEstrutura dos Dados:\nInicie apresentando as principais informações do CPF ou CNPJ, como nome, data de nascimento, nome da mãe e situação na Receita Federal, se disponível.\nCrie uma seção que apresente, de forma resumida, todas as pendências financeiras, dívidas e protestos identificados.\nApresente o score de crédito e a probabilidade de inadimplência, se forem disponibilizados.\n\nResumo da Situação Financeira:\nElabore um parágrafo resumindo a situação financeira geral do CPF ou CNPJ.\nUse uma linguagem neutra e clara, apontando os riscos de crédito, quantidade de dívidas ou protestos e qualquer outra informação relevante que possa impactar a análise do perfil financeiro.\n\nObservações Importantes:\nNÃO exiba ou informe nenhum dado de contato, incluindo telefones, endereços ou e-mails.\nNÃO invente dados que não foram explicitamente fornecidos.\nSiga rigorosamente as normas de proteção de dados pessoais (LGPD), respeitando a privacidade do consultado.\n\nSegue abaixo um breve exemplo de resumo\n\"### Resumo da Situação Financeira\nRafael dos Santos Nogueira apresenta um histórico financeiro com múltiplas pendências, incluindo dívidas com instituições educacionais e um protesto registrado. O total das pendências varia, mas a principal dívida se destaca no valor de R$ 1.467,62. Essas ocorrências podem impactar negativamente seu acesso ao crédito. A situação atual sugere um certo risco de inadimplência e é recomendável que Rafael busque regularizar suas pendências para evitar complicações financeiras futuras.\"\n\nFaça um breve resumo com no máximo 700 caracteres de forma simples explicando a situação financeira utilizando todas as informações fornecidas. Não ignore nenhum dado. No resumo você não precisa escrever ou listar todas as pendências. Apenas resumir com um total e quantidade dos titulos abaixo.\nO titulo do resumo precisa ser exatamente \"### RESUMO DA SITUAÇÃO FINANCEIRA\" (EM LETRAS MAIÚSCULAS)\nUma observação. O titulo dos menus estão entre ##\nRetorne apenas os dados a partir de \"## RESUMO DA SITUAÇÃO FINANCEIRA\"\n\nSegue abaixo os dados para formatar:",
              "type": "string"
            },
            {
              "id": "eda52165-db3d-4068-b1e6-e7f10e8692a0",
              "name": "Prompt PDF",
              "value": "=Objetivo: Formatar os dados da consulta de crédito de forma estruturada e organizada, seguindo o modelo de análise de crédito do Serasa, retornando exclusivamente um código HTML.\nInstruções:\n* Retornar apenas o HTML, sem nenhum outro texto no output.\n* Seguir a estrutura de tabelas para organizar os dados.\n* Usar fontes de até 11px para informações dentro das tabelas.\n* Remover o título <h1>, mas adicionar duas quebras de linha (<br><br>) após a logo para espaçamento.\n* Não alterar o campo \"URL-LOGO\", pois ele será substituído dinamicamente.\n* Adicionar \"Resumo através de IA\" no final, com um resumo dos dados recebidos bem básico sem apresentar muitos os valores.\n* Incluir um rodapé com informações de confidencialidade e LGPD, usando fonte de 9px e alinhado à esquerda.\n* Nunca utilizar a expressão \"Dados do Cotista\", apenas \"Dados\".\nFormato esperado:\n* HTML bem estruturado, com seções claras.\n* Uso de <div> para blocos de informações e <table> para dados tabulares.\n* Listas <ul> para e-mails, telefones e parentes.\n* Footer fixo no final do relatório.\n* Caso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\n* É obrigatório que todas as informações fornecidas abaixo conste no HTML.\n* Se tiver \"_Sem pendências registradas._\", \"_Sem pendências._\" ou algo que comece e termine com \"_\", remova o \"_\".\n* Se o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\n* Se não existir nenhum email, não adicione no html Email\n* Se não existir nenhum telefone, não adicione no html Telefone\n* Se não existir nenhum Possíveis Parentes, não adicione no html Possíveis Parentes\n* Se email estiver vazio ou não existir, não crie no html <strong>Email:</strong>\n* Se telefone estiver vazio ou não existir, não crie no html <strong>Telefone:</strong>\n\nAdicione um texto no final com os dados recebidos de \"RESUMO ATRAVÉS DE IA\"\"\n\nAdicione também um rodapé na página com fonte tamanho 9 alinhado a esquerda da página com os seguintes dados:\n\"INFORMAÇÕES IMPORTANTES\nESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO , RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.\n\nMINUTA DE DECLARAÇÃO LGPD\nDECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.\"\n\nHTML DE EXEMPLO 1:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\"><br><br>\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Razão Social:</span> ARTHUR BALDIOTTI MENDONCA ALVARES 11383223696</p>\n            <p><span class=\"info\">Nome Fantasia:</span> TIO SAM MULTIMARCAS</p>\n            <p><span class=\"info\">CNPJ:</span> 22742922000107</p>\n            <p><span class=\"info\">Situação Cadastral:</span> Baixada</p>\n            <p><span class=\"info\">Porte:</span> Micro Empresa</p>\n            <p><span class=\"info\">Natureza Jurídica:</span> Empresário (Individual)</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Telefone</h2>\n            <p><span class=\"info\">Telefone:</span> (37)99781110</p><br>\n            <h2 class=\"section-header\">Email</h2>\n            <p><span class=\"info\">Email:</span> contato@tiosammultimarcas.com</p><br>\n            <h2 class=\"section-header\">Endereço</h2>\n            <p><span class=\"info\">Endereço:</span> RUA FRANCISCO SALES, Número 119, LOJA 1 e 4 - CENTRO</p>\n            <p><span class=\"info\">Cidade:</span> Pará de Minas</p>\n            <p><span class=\"info\">Estado:</span> MG</p>\n            <p><span class=\"info\">CEP:</span> 35660017</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Atividade Principal</h2>\n            <p><span class=\"info\">Atividade Principal:</span> Comércio varejista de artigos do vestuário e acessórios</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Atividade Secundária</h2>\n            <p><span class=\"info\">Atividade Secundária:</span> Comércio varejista especializado de equipamentos de telefonia e comunicação</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências Refin</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Contrato</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>01/09/2020</td>\n                    <td>022742922000107FI</td>\n                    <td>BANCO BRADESCO S/A</td>\n                    <td>R$408,82</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências Pefin</h2>\n            <table>\n                <tr>\n                    <th>Total Ocorrências</th>\n                    <th>Ocorrência Antiga</th>\n                    <th>Ocorrência Recente</th>\n                    <th>Valor Total</th>\n                </tr>\n                <tr>\n                    <td>1</td>\n                    <td>01/09/2020</td>\n                    <td>01/09/2020</td>\n                    <td>R$408,82</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>TIO SAM MULTIMARCAS apresenta um histórico financeiro com pendências registradas, com um total de R$408,82. Embora não existam protestos, a presença de dívidas pode impactar negativamente seu acesso ao crédito. Além disso, é importante lembrar que a situação financeira da empresa pode ser afetada por fatores como a natureza jurídica e o porte da empresa.</p>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nImportante, escreva \"Inicio HTML\" e \"Fim HTML\" no inicio e no final. Somente isso. Não escreva mais nenhum dados fora do código.\nQuando for exatamente começar o código HTML, escreva da seguinte maneira: Inicio HTML\\n<!DOCTYPE html>\\n\nEscreva no código html todas as informações fornecidas. Não ignore nenhum dado.\nUma observação. O titulo dos menus entrão entre <>\nCaso a frase comece e termine com \"_\", pode remover o \"_\"\nSempre formate no html utilizando TODOS os dados fornecidos abaixo como informações, valores, dados, tudo sem exceção.\nVocê vai adicionar na formatação somente os dados existentes e informados abaixo.\nImportante. Se o dados como telefone, email ou parentes não estiver disponível e não for fornecido, você não precisa adicionar a \"div class\" no html.\nAdicione \"Sugestões para Regularização em caso de Débitos\"\nSempre adicione <br> entre uma \"div class\" e outra.\nÉ obrigatório que pendências, scpc, débitos, refin e pefin e protestos sejam sempre em tabela.\nSiga fielmente o layout do exemplo de html acima.\nCaso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\nSe o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\nÉ importante que você adicione no HTML somente os dados fornecidos abaixo que são para formatar. Os dados dos HTML de exemplo servem somente para seguir o layout do HTML (Nunca utilize as informações de exemplo ou invente dados para adicionar no html formatado).\nÉ obrigatório que todas as informações fornecidas abaixo conste no HTML.\nRemova todos os _ do html exceto de email.\n\nAtenção, faça \"Resumo através de IA\" levando em consideração todos os dados informados abaixo.\n\nAtenção, todos os dados e informações acima server exclusivamente como exemplo para você estruturar o HTML.\nAs informações na formatação do HTML precisam estar na mesma ordem dos dados para formatar.\nUtilize somente os dados abaixo para formatar o HTML:",
              "type": "string"
            },
            {
              "id": "a6be7243-ae46-4033-a994-ca3a7b5e3899",
              "name": "URL-LOGO",
              "value": "=https://i.imgur.com/g0gImpK.jpeg",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ae26ea64-45bd-4a5d-991f-4e05cb72aba7",
      "name": "Dados N8N",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3660,
        1940
      ]
    },
    {
      "parameters": {
        "url": "=https://integracao.consultasprime.com/3-restricao-pj?cnpjempresa=40126612000140&usuario=474936&senha=Arthurb931&documento={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}&uf=MG",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 120000
        }
      },
      "id": "5fa5dafb-8e8b-47ce-8d31-2dbf99dc3376",
      "name": "Consulta",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1360,
        1940
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Pefin'][5] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a6f09acb-ff8b-45ca-a71d-c24873982cc6",
      "name": "SE Pendencias - 11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        2160
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Pefin",
              "stringValue": "=*Detalhe Pefin*\n*Total ocorrências:* _{{ $json['Pefin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Pefin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Pefin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Pefin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][1].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][2].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][2].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][2].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][2].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][3].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][3].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][3].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][3].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][4].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][4].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][4].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][4].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][5].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][5].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][5].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][5].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "cbfa5601-c04b-4696-b433-322e382f1758",
      "name": "Pendencias - 11",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        320,
        2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Pefin'][4] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f1e43b21-bf92-40b1-a00c-cac37f8c7393",
      "name": "SE Pendencias - 10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        540,
        2160
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Pefin",
              "stringValue": "=*Detalhe Pefin*\n*Total ocorrências:* _{{ $json['Pefin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Pefin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Pefin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Pefin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][1].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][2].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][2].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][2].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][2].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][3].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][3].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][3].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][3].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][4].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][4].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][4].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][4].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "5fb396a6-2193-4d74-b918-13716e0992b0",
      "name": "Pendencias - 10",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        540,
        2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Pefin'][3] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "cbfd603d-14d1-4627-819f-255c664b5887",
      "name": "SE Pendencias - 9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        760,
        2160
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Pefin",
              "stringValue": "=*Detalhe Pefin*\n*Total ocorrências:* _{{ $json['Pefin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Pefin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Pefin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Pefin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][1].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][2].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][2].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][2].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][2].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][3].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][3].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][3].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][3].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "cf370d2d-c4cc-4f34-8ab0-3e2d8040ece3",
      "name": "Pendencias - 9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        760,
        2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Pefin'][2] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "830d1ec4-2f98-4ed7-87a9-1fd6f44e498c",
      "name": "SE Pendencias - 8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        980,
        2160
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Pefin",
              "stringValue": "=*Detalhe Pefin*\n*Total ocorrências:* _{{ $json['Pefin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Pefin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Pefin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Pefin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][1].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][2].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][2].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][2].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][2].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "8afca53c-d1b4-4e62-8cfd-32e2fdb28e31",
      "name": "Pendencias - 8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        980,
        2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Pefin'][1] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5a1f0d88-8084-4b62-8417-65b61b0f27d9",
      "name": "SE Pendencias - 7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1200,
        2160
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Pefin",
              "stringValue": "=*Detalhe Pefin*\n*Total ocorrências:* _{{ $json['Pefin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Pefin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Pefin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Pefin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][1].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "8e024d08-fe38-4d43-93bf-610ccf317c1d",
      "name": "Pendencias - 7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1200,
        2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Pefin'][0].valor }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6e619d3a-4e20-4fb3-8022-8fb76602c712",
      "name": "SE Pendencias - 6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1420,
        2160
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Pefin",
              "stringValue": "=*Detalhe Pefin*\n*Total ocorrências:* _{{ $json['Pefin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Pefin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Pefin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Pefin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Pefin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Pefin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Pefin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Pefin'][0].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "15f98d1c-6bc0-4b23-9d2d-c1b436ae05b9",
      "name": "Pendencias - 6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1420,
        2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Refin'][5] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7f05e09a-389a-4396-8196-f66f16b69ffe",
      "name": "SE Pendencias - 5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        1440
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Refin",
              "stringValue": "=*Detalhe Refin*\n*Total ocorrências:* _{{ $json['Refin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Refin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Refin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Refin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Refin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][1].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][2].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][2].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][2].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][2].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][3].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][3].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][3].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][3].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][4].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][4].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][4].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][4].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][5].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][5].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][5].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][5].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "23cb3ca7-8850-42b4-9c95-f9b3c7c90ff9",
      "name": "Pendencias - 5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        320,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Refin'][4] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3eba6a70-2100-45d9-96fd-87aace4f19d6",
      "name": "SE Pendencias - 4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        540,
        1440
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Refin",
              "stringValue": "=*Detalhe Refin*\n*Total ocorrências:* _{{ $json['Refin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Refin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Refin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Refin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Refin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][1].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][2].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][2].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][2].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][2].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][3].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][3].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][3].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][3].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][4].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][4].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][4].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][4].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "e2bd87fe-666b-45ba-895a-3aa904a0e0c7",
      "name": "Pendencias - 4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        540,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Refin'][3] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "958a9cdc-e7d5-401f-84f9-34b5a2280d5d",
      "name": "SE Pendencias - 3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        760,
        1440
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Refin",
              "stringValue": "=*Detalhe Refin*\n*Total ocorrências:* _{{ $json['Refin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Refin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Refin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Refin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Refin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][1].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][2].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][2].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][2].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][2].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][3].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][3].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][3].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][3].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "93014519-08d5-41e0-a484-a26eba51919e",
      "name": "Pendencias - 3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        760,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Refin'][2] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "56fee0fe-2d7d-424f-8ad1-6193a43324c7",
      "name": "SE Pendencias - 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        980,
        1440
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Refin",
              "stringValue": "=*Detalhe Refin*\n*Total ocorrências:* _{{ $json['Refin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Refin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Refin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Refin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Refin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][1].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][2].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][2].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][2].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][2].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "946926b6-8589-45ed-bf90-c66fd77060d4",
      "name": "Pendencias - 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        980,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Refin'][1] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9e320822-4d0d-4961-8335-67437215df57",
      "name": "SE Pendencias - 1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1200,
        1440
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Refin",
              "stringValue": "=*Detalhe Refin*\n*Total ocorrências:* _{{ $json['Refin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Refin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Refin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Refin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Refin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][0].valor }}_\n\n*Data:* _{{ $json['Pendencias Refin'][1].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][1].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][1].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][1].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "0112f27d-a3f2-40a6-b947-3be9b7ce4c8c",
      "name": "Pendencias - 1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1200,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json['Pendencias Refin'][0].valor }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6116e7e9-d612-4673-9a8d-c50d74bcfc57",
      "name": "SE Pendencias - 0",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1420,
        1440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "decf3147-09bc-44e3-ba63-bfe5d04d657b",
              "name": "Pendencias Refin",
              "value": "={{ $json.pendenciasfinanceirasrefindetalhe }}",
              "type": "array"
            },
            {
              "id": "c13cb3a4-3cf2-418e-aa23-eb0e0a7dbc9c",
              "name": "Refin Detalhe",
              "value": "={{ $json.pendenciasfinanceirasrefinresumo }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "0c33ba9f-76ff-4278-8127-9170e9b04ac9",
      "name": "Pendencias Refin",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        0,
        1440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Pendencias Pefin",
              "value": "={{ $json.pendenciasfinanceiraspefindetalhe }}",
              "type": "array"
            },
            {
              "id": "cb2ad19b-539c-4740-9485-268a06118645",
              "name": "Pefin Detalhe",
              "value": "={{ $json.pendenciasfinanceiraspefinresumo }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "04828aab-f33e-49ae-b404-a6cbf3b1e440",
      "name": "Pendencias Pefin",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        0,
        2160
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Refin",
              "stringValue": "=*Detalhe Refin*\n*Total ocorrências:* _{{ $json['Refin Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Refin Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Refin Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Refin Detalhe'].valortotal }}_\n\n*Data:* _{{ $json['Pendencias Refin'][0].dataocorrencia }}_\n*Contrato:* _{{ $json['Pendencias Refin'][0].contrato }}_\n*Origem:* _{{ $json['Pendencias Refin'][0].origem }}_\n*Valor:* _R${{ $json['Pendencias Refin'][0].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "5fe787f6-9516-4e7f-8523-2052d9b10414",
      "name": "Pendencias - 0",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1420,
        1680
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Refin",
              "stringValue": "=*Refin*\n_Sem pendências registradas._"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "7e524e94-d7fa-43ae-99cf-c283e48048c5",
      "name": "Pendencias Refin1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1640,
        1440
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias Pefin",
              "stringValue": "=*Pefin*\n_Sem pendências registradas._"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "535004eb-8737-4a1b-a8b2-d0bcacf9c210",
      "name": "Pendencias Pefin1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1640,
        2160
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "bc1488a9-b568-40e1-93aa-2170599de369",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4300,
        2380
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "7f570186-05e1-4534-958d-74189749b652",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4300,
        1660
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2015b0a2-f62e-4e47-9c41-94fd001e2c94",
              "name": "Dados Basicos",
              "value": "={{ $json.dadosbasicos }}",
              "type": "object"
            },
            {
              "id": "57624512-c1a7-4497-b18d-2e602f3439db",
              "name": "featuresociosacionistas",
              "value": "={{ $json.featuresociosacionistas }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f7493c22-1d06-4530-8488-e27312018cba",
      "name": "Dados Básicos",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        0,
        1140
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2015b0a2-f62e-4e47-9c41-94fd001e2c94",
              "name": "Informações",
              "value": "=*Razão Social:* _{{ $json['Dados Basicos'].nome }}_\n*Data abertura:* _{{ $json['Dados Basicos'].data }}_\n*Situação:* _{{ $json['Dados Basicos'].descricaosituacao }}_\n\n*Valor Total Ocorrências:* _R${{ $json['Dados Basicos'].valortotalocorrencias }}_\n*Data Última Ocorrência:* _{{ $json['Dados Basicos'].dataultimaocorrencia }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c4bcfe70-47ec-4da0-be70-2051838b6685",
      "name": "Dados Básicos1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3620,
        1120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Menu'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Menu'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            },
            {
              "name": "Informações",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Pendências REFIN",
              "value": "=Erro"
            },
            {
              "name": "Pendências PEFIN",
              "value": "=Erro"
            },
            {
              "name": "Protestos",
              "value": "=Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "5bd9debc-2560-45a9-aff3-ea5ef9245813",
      "name": "Erro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -960,
        3260
      ]
    },
    {
      "parameters": {
        "url": "=https://integracao.consultasprime.com/5-pendenciafinanceira-pf?cnpjempresa=40126612000140&usuario=474936&senha=Arthurb93&documento=32676277880&features=RXLF%3BREFS",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 120000
        }
      },
      "id": "a528fd85-14b7-44d8-8dcd-3618d899bf12",
      "name": "Consulta1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1360,
        2100
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[11] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "22a51e18-f8f8-4e7f-921b-14a3c96c3b4b",
      "name": "SE Protesto - ",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1080,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_\n\n*Cidade:* _{{ $json.Protesto[6].cidade }} - {{ $json.Protesto[6].uf }}_\n*Cartório:* _{{ $json.Protesto[6].cartorio }}_\n*Data:* _{{ $json.Protesto[6].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[6].valor }}_\n\n*Cidade:* _{{ $json.Protesto[7].cidade }} - {{ $json.Protesto[7].uf }}_\n*Cartório:* _{{ $json.Protesto[7].cartorio }}_\n*Data:* _{{ $json.Protesto[7].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[7].valor }}_\n\n*Cidade:* _{{ $json.Protesto[8].cidade }} - {{ $json.Protesto[8].uf }}_\n*Cartório:* _{{ $json.Protesto[8].cartorio }}_\n*Data:* _{{ $json.Protesto[8].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[8].valor }}_\n\n*Cidade:* _{{ $json.Protesto[9].cidade }} - {{ $json.Protesto[9].uf }}_\n*Cartório:* _{{ $json.Protesto[9].cartorio }}_\n*Data:* _{{ $json.Protesto[9].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[9].valor }}_\n\n*Cidade:* _{{ $json.Protesto[10].cidade }} - {{ $json.Protesto[10].uf }}_\n*Cartório:* _{{ $json.Protesto[10].cartorio }}_\n*Data:* _{{ $json.Protesto[10].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[10].valor }}_\n\n*Cidade:* _{{ $json.Protesto[11].cidade }} - {{ $json.Protesto[11].uf }}_\n*Cartório:* _{{ $json.Protesto[11].cartorio }}_\n*Data:* _{{ $json.Protesto[11].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[11].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "3097cb91-0042-490e-a8f1-071201523e99",
      "name": "Protesto - 6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1080,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[10] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4206b0e5-9151-4f12-b33f-5363859c99e4",
      "name": "SE Protesto - 6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1300,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_\n\n*Cidade:* _{{ $json.Protesto[6].cidade }} - {{ $json.Protesto[6].uf }}_\n*Cartório:* _{{ $json.Protesto[6].cartorio }}_\n*Data:* _{{ $json.Protesto[6].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[6].valor }}_\n\n*Cidade:* _{{ $json.Protesto[7].cidade }} - {{ $json.Protesto[7].uf }}_\n*Cartório:* _{{ $json.Protesto[7].cartorio }}_\n*Data:* _{{ $json.Protesto[7].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[7].valor }}_\n\n*Cidade:* _{{ $json.Protesto[8].cidade }} - {{ $json.Protesto[8].uf }}_\n*Cartório:* _{{ $json.Protesto[8].cartorio }}_\n*Data:* _{{ $json.Protesto[8].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[8].valor }}_\n\n*Cidade:* _{{ $json.Protesto[9].cidade }} - {{ $json.Protesto[9].uf }}_\n*Cartório:* _{{ $json.Protesto[9].cartorio }}_\n*Data:* _{{ $json.Protesto[9].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[9].valor }}_\n\n*Cidade:* _{{ $json.Protesto[10].cidade }} - {{ $json.Protesto[10].uf }}_\n*Cartório:* _{{ $json.Protesto[10].cartorio }}_\n*Data:* _{{ $json.Protesto[10].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[10].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "5068db79-a30e-457f-8c63-a8e52158707c",
      "name": "Protesto - 7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1300,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[8] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2822db34-92a0-45d8-a5ba-1be35a92ff68",
      "name": "SE Protesto - 7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1740,
        2920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[9] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "45eb9c44-d57a-4b8e-afc1-91349d5d3b49",
      "name": "SE Protesto - 8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1520,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_\n\n*Cidade:* _{{ $json.Protesto[6].cidade }} - {{ $json.Protesto[6].uf }}_\n*Cartório:* _{{ $json.Protesto[6].cartorio }}_\n*Data:* _{{ $json.Protesto[6].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[6].valor }}_\n\n*Cidade:* _{{ $json.Protesto[7].cidade }} - {{ $json.Protesto[7].uf }}_\n*Cartório:* _{{ $json.Protesto[7].cartorio }}_\n*Data:* _{{ $json.Protesto[7].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[7].valor }}_\n\n*Cidade:* _{{ $json.Protesto[8].cidade }} - {{ $json.Protesto[8].uf }}_\n*Cartório:* _{{ $json.Protesto[8].cartorio }}_\n*Data:* _{{ $json.Protesto[8].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[8].valor }}_\n\n*Cidade:* _{{ $json.Protesto[9].cidade }} - {{ $json.Protesto[9].uf }}_\n*Cartório:* _{{ $json.Protesto[9].cartorio }}_\n*Data:* _{{ $json.Protesto[9].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[9].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "8acc89f2-8b89-432d-9508-9c1ab00e5620",
      "name": "Protesto - 8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1520,
        3160
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_\n\n*Cidade:* _{{ $json.Protesto[6].cidade }} - {{ $json.Protesto[6].uf }}_\n*Cartório:* _{{ $json.Protesto[6].cartorio }}_\n*Data:* _{{ $json.Protesto[6].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[6].valor }}_\n\n*Cidade:* _{{ $json.Protesto[7].cidade }} - {{ $json.Protesto[7].uf }}_\n*Cartório:* _{{ $json.Protesto[7].cartorio }}_\n*Data:* _{{ $json.Protesto[7].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[7].valor }}_\n\n*Cidade:* _{{ $json.Protesto[8].cidade }} - {{ $json.Protesto[8].uf }}_\n*Cartório:* _{{ $json.Protesto[8].cartorio }}_\n*Data:* _{{ $json.Protesto[8].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[8].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "5e51df58-5ffe-46df-8684-9e94079e9489",
      "name": "Protesto - 9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1740,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[7] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "67cf38e0-0c3d-42f3-98fa-27f0ccbdea0d",
      "name": "SE Protesto - 9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1960,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_\n\n*Cidade:* _{{ $json.Protesto[6].cidade }} - {{ $json.Protesto[6].uf }}_\n*Cartório:* _{{ $json.Protesto[6].cartorio }}_\n*Data:* _{{ $json.Protesto[6].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[6].valor }}_\n\n*Cidade:* _{{ $json.Protesto[7].cidade }} - {{ $json.Protesto[7].uf }}_\n*Cartório:* _{{ $json.Protesto[7].cartorio }}_\n*Data:* _{{ $json.Protesto[7].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[7].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "0fc14fc8-25f4-4462-a3af-d2fd2058d079",
      "name": "Protesto - 10",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1960,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[6] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "08f5d631-bbbd-45f1-9aef-431793582445",
      "name": "SE Protesto - 10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2180,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_\n\n*Cidade:* _{{ $json.Protesto[6].cidade }} - {{ $json.Protesto[6].uf }}_\n*Cartório:* _{{ $json.Protesto[6].cartorio }}_\n*Data:* _{{ $json.Protesto[6].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[6].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "c3cf8214-e29e-4446-ab05-09d47e538383",
      "name": "Protesto - 11",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        2180,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[14] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "25136dc5-83c0-466a-ac2e-504f9fd1475f",
      "name": "SE Protesto - 11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        420,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_\n\n*Cidade:* _{{ $json.Protesto[6].cidade }} - {{ $json.Protesto[6].uf }}_\n*Cartório:* _{{ $json.Protesto[6].cartorio }}_\n*Data:* _{{ $json.Protesto[6].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[6].valor }}_\n\n*Cidade:* _{{ $json.Protesto[7].cidade }} - {{ $json.Protesto[7].uf }}_\n*Cartório:* _{{ $json.Protesto[7].cartorio }}_\n*Data:* _{{ $json.Protesto[7].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[7].valor }}_\n\n*Cidade:* _{{ $json.Protesto[8].cidade }} - {{ $json.Protesto[8].uf }}_\n*Cartório:* _{{ $json.Protesto[8].cartorio }}_\n*Data:* _{{ $json.Protesto[8].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[8].valor }}_\n\n*Cidade:* _{{ $json.Protesto[9].cidade }} - {{ $json.Protesto[9].uf }}_\n*Cartório:* _{{ $json.Protesto[9].cartorio }}_\n*Data:* _{{ $json.Protesto[9].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[9].valor }}_\n\n*Cidade:* _{{ $json.Protesto[10].cidade }} - {{ $json.Protesto[10].uf }}_\n*Cartório:* _{{ $json.Protesto[10].cartorio }}_\n*Data:* _{{ $json.Protesto[10].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[10].valor }}_\n\n*Cidade:* _{{ $json.Protesto[11].cidade }} - {{ $json.Protesto[11].uf }}_\n*Cartório:* _{{ $json.Protesto[11].cartorio }}_\n*Data:* _{{ $json.Protesto[11].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[11].valor }}_\n\n*Cidade:* _{{ $json.Protesto[12].cidade }} - {{ $json.Protesto[12].uf }}_\n*Cartório:* _{{ $json.Protesto[12].cartorio }}_\n*Data:* _{{ $json.Protesto[12].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[12].valor }}_\n\n*Cidade:* _{{ $json.Protesto[13].cidade }} - {{ $json.Protesto[13].uf }}_\n*Cartório:* _{{ $json.Protesto[13].cartorio }}_\n*Data:* _{{ $json.Protesto[13].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[13].valor }}_\n\n*Cidade:* _{{ $json.Protesto[14].cidade }} - {{ $json.Protesto[14].uf }}_\n*Cartório:* _{{ $json.Protesto[14].cartorio }}_\n*Data:* _{{ $json.Protesto[14].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[14].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "68a3b479-d0ad-4d6c-8cdc-5db5e884179e",
      "name": "Protesto - 12",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        420,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[13] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1b89f273-8c33-4ff1-8933-f909c32f2c8d",
      "name": "SE Protesto - 12",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        640,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_\n\n*Cidade:* _{{ $json.Protesto[6].cidade }} - {{ $json.Protesto[6].uf }}_\n*Cartório:* _{{ $json.Protesto[6].cartorio }}_\n*Data:* _{{ $json.Protesto[6].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[6].valor }}_\n\n*Cidade:* _{{ $json.Protesto[7].cidade }} - {{ $json.Protesto[7].uf }}_\n*Cartório:* _{{ $json.Protesto[7].cartorio }}_\n*Data:* _{{ $json.Protesto[7].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[7].valor }}_\n\n*Cidade:* _{{ $json.Protesto[8].cidade }} - {{ $json.Protesto[8].uf }}_\n*Cartório:* _{{ $json.Protesto[8].cartorio }}_\n*Data:* _{{ $json.Protesto[8].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[8].valor }}_\n\n*Cidade:* _{{ $json.Protesto[9].cidade }} - {{ $json.Protesto[9].uf }}_\n*Cartório:* _{{ $json.Protesto[9].cartorio }}_\n*Data:* _{{ $json.Protesto[9].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[9].valor }}_\n\n*Cidade:* _{{ $json.Protesto[10].cidade }} - {{ $json.Protesto[10].uf }}_\n*Cartório:* _{{ $json.Protesto[10].cartorio }}_\n*Data:* _{{ $json.Protesto[10].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[10].valor }}_\n\n*Cidade:* _{{ $json.Protesto[11].cidade }} - {{ $json.Protesto[11].uf }}_\n*Cartório:* _{{ $json.Protesto[11].cartorio }}_\n*Data:* _{{ $json.Protesto[11].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[11].valor }}_\n\n*Cidade:* _{{ $json.Protesto[12].cidade }} - {{ $json.Protesto[12].uf }}_\n*Cartório:* _{{ $json.Protesto[12].cartorio }}_\n*Data:* _{{ $json.Protesto[12].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[12].valor }}_\n\n*Cidade:* _{{ $json.Protesto[13].cidade }} - {{ $json.Protesto[13].uf }}_\n*Cartório:* _{{ $json.Protesto[13].cartorio }}_\n*Data:* _{{ $json.Protesto[13].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[13].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "db1a994a-cdf9-4f72-a873-77cafc1919b1",
      "name": "Protesto - 13",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        640,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto[12] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8d6f1309-705d-4421-890a-37380b5d8ddc",
      "name": "SE Protesto - 13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        860,
        2920
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=*Detalhe Protestos*\n*Total ocorrências:* _{{ $json['Protestos Detalhe'].totalocorrencias }}_\n*Ocorrência antiga:* _{{ $json['Protestos Detalhe'].dataocorrenciaantiga }}_\n*Ocorrência recente:* _{{ $json['Protestos Detalhe'].dataocorrenciarecente }}_\n*Valor Total:* _R${{ $json['Protestos Detalhe'].valortotal }}_\n\n*Cidade:* _{{ $json.Protesto[0].cidade }} - {{ $json.Protesto[0].uf }}_\n*Cartório:* _{{ $json.Protesto[0].cartorio }}_\n*Data:* _{{ $json.Protesto[0].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[0].valor }}_\n\n*Cidade:* _{{ $json.Protesto[1].cidade }} - {{ $json.Protesto[1].uf }}_\n*Cartório:* _{{ $json.Protesto[1].cartorio }}_\n*Data:* _{{ $json.Protesto[1].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[1].valor }}_\n\n*Cidade:* _{{ $json.Protesto[2].cidade }} - {{ $json.Protesto[2].uf }}_\n*Cartório:* _{{ $json.Protesto[2].cartorio }}_\n*Data:* _{{ $json.Protesto[2].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[2].valor }}_\n\n*Cidade:* _{{ $json.Protesto[3].cidade }} - {{ $json.Protesto[3].uf }}_\n*Cartório:* _{{ $json.Protesto[3].cartorio }}_\n*Data:* _{{ $json.Protesto[3].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[3].valor }}_\n\n*Cidade:* _{{ $json.Protesto[4].cidade }} - {{ $json.Protesto[4].uf }}_\n*Cartório:* _{{ $json.Protesto[4].cartorio }}_\n*Data:* _{{ $json.Protesto[4].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[4].valor }}_\n\n*Cidade:* _{{ $json.Protesto[5].cidade }} - {{ $json.Protesto[5].uf }}_\n*Cartório:* _{{ $json.Protesto[5].cartorio }}_\n*Data:* _{{ $json.Protesto[5].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[5].valor }}_\n\n*Cidade:* _{{ $json.Protesto[6].cidade }} - {{ $json.Protesto[6].uf }}_\n*Cartório:* _{{ $json.Protesto[6].cartorio }}_\n*Data:* _{{ $json.Protesto[6].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[6].valor }}_\n\n*Cidade:* _{{ $json.Protesto[7].cidade }} - {{ $json.Protesto[7].uf }}_\n*Cartório:* _{{ $json.Protesto[7].cartorio }}_\n*Data:* _{{ $json.Protesto[7].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[7].valor }}_\n\n*Cidade:* _{{ $json.Protesto[8].cidade }} - {{ $json.Protesto[8].uf }}_\n*Cartório:* _{{ $json.Protesto[8].cartorio }}_\n*Data:* _{{ $json.Protesto[8].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[8].valor }}_\n\n*Cidade:* _{{ $json.Protesto[9].cidade }} - {{ $json.Protesto[9].uf }}_\n*Cartório:* _{{ $json.Protesto[9].cartorio }}_\n*Data:* _{{ $json.Protesto[9].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[9].valor }}_\n\n*Cidade:* _{{ $json.Protesto[10].cidade }} - {{ $json.Protesto[10].uf }}_\n*Cartório:* _{{ $json.Protesto[10].cartorio }}_\n*Data:* _{{ $json.Protesto[10].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[10].valor }}_\n\n*Cidade:* _{{ $json.Protesto[11].cidade }} - {{ $json.Protesto[11].uf }}_\n*Cartório:* _{{ $json.Protesto[11].cartorio }}_\n*Data:* _{{ $json.Protesto[11].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[11].valor }}_\n\n*Cidade:* _{{ $json.Protesto[12].cidade }} - {{ $json.Protesto[12].uf }}_\n*Cartório:* _{{ $json.Protesto[12].cartorio }}_\n*Data:* _{{ $json.Protesto[12].dataocorrencia }}_\n*Valor:* _R${{ $json.Protesto[12].valor }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "7c468318-f006-458d-98c6-aff84ad6f923",
      "name": "Protesto - 14",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        860,
        3160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bfac3c94-a23c-4008-aa6c-dd5fcb21c8e6",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "942940e0-7d75-4eeb-bffc-db4aedeb64b9",
              "leftValue": "={{ $json.tipo }}",
              "rightValue": "CNPJ",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a345f059-2541-4877-99c6-4574897b47d0",
      "name": "If15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3020,
        1940
      ]
    },
    {
      "parameters": {
        "content": "## CPF / CNPJ inválido",
        "height": 889.3074447589772,
        "width": 478.3305520743763,
        "color": 3
      },
      "id": "d7b6f1f9-e29f-413b-87b3-24220a403edf",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3300,
        1860
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false; // Verifica se possui 11 dígitos e não é uma sequência repetida\n\n    let soma = 0, resto;\n\n    // Validação do primeiro dígito verificador\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    // Validação do segundo dígito verificador\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false; // Verifica se possui 14 dígitos e não é uma sequência repetida\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o CPF ou CNPJ diretamente do campo 'body.CPF' ou 'body.CNPJ' dentro do 'Webhook'\nconst numero = ($('Webhook').item.json.body.CPF || $('Webhook').item.json.body.CNPJ).replace(/[^\\d]+/g, '');\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido // Retorna true ou false\n        }\n    }\n];\n"
      },
      "id": "6b8f2e9f-fdd0-48ef-a754-ce8e32b4ba1c",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3220,
        1920
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3ed7560d-6db5-479d-8c02-6c370ab11b0f",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1140,
        3260
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d8d1ebf9-58b5-4599-b3b9-6e98350b27fa",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -960,
        3420
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "7ac1bafa-1fe1-441a-8416-66c06dd6c7d6",
      "name": "HTTP Request6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1140,
        3420
      ]
    },
    {
      "parameters": {
        "content": "## ERRO CONSULTA",
        "height": 623.1963315097256,
        "width": 463.0557878889166,
        "color": 3
      },
      "id": "8f7d0da3-6975-4d6b-a945-c4b852b3bfb1",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1220,
        2960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a6b783dc-c8a2-4347-95f5-0c848e8cb63d",
      "name": "If8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3200,
        2340
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a516c923-0956-4fdf-b4a9-61bc663d074b",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -3000,
        2560
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\nAtenção: O CNPJ informado é inválido. 🚨\nVerifique os números e digite corretamente.\n\nObs: Digite apenas números, sem pontos, traços ou espaços."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "28d9e558-d88b-45fd-ab3e-a55098b8bfef",
      "name": "HTTP Request7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3200,
        2560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d0e37195-87b0-4c83-bb7a-0f3365c35285",
      "name": "If6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        8420,
        2820
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\n\n## PDF\n{{ $('IF PDF').item.json.FileUrl }}\n\n\n______________________________________________________________\n\n\n\n{{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "acbfb438-ce6f-47a0-b854-6a2ff05c7651",
      "name": "HTTP Request5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8420,
        3000
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b69fc750-a53a-4cf0-bf48-27a0ca022d84",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        8640,
        3000
      ]
    },
    {
      "parameters": {
        "content": "## ENVIAR RESULTADO CONSULTA SITE",
        "height": 528.5932323948787,
        "width": 456.38573431005676,
        "color": 2
      },
      "id": "e194a2ed-9073-43da-9882-23861417c03e",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8360,
        2700
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/UfO1nbtNGdqa/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "=+553799781110"
            },
            {
              "name": "Consulta",
              "value": "=*Telefone:* _{{ $('Webhook').item.json.body.Telefone }}_\n*CPF / CNPJ:* _{{ $('Webhook').item.json.body.CPF }}_\n\n-----------//-----------\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}\n\n--------------------------------------------------------------\n\nPENDÊNCIAS REFIN\n{{ $('Aggregate6').item.json.Consulta[0]['Pendencias Refin'].replace(/[*_]/g, '') }}\n\nPENDÊNCIAS PEFIN\n{{ $('Aggregate6').item.json.Consulta[0]['Pendencias Pefin'].replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "5550bb89-8734-4732-ac85-baadda214ec4",
      "name": "Acompanhar consulta site (Botconversa)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8880,
        3180
      ],
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "975cc8ae-5a9c-45cb-82c4-4014a9b31601",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -1140,
        2400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtém a data e hora do campo\nconst currentDate = new Date($('Date & Time1').item.json.currentDate);\n\n// Converte para o horário de São Paulo (GMT-3)\nconst options = { timeZone: 'America/Sao_Paulo', hour12: false };\nconst brazilianTime = new Date(currentDate.toLocaleString('en-US', options));\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado) e a hora\nconst dayOfWeek = brazilianTime.getDay(); // 0=Domingo, 1=Segunda, ..., 6=Sábado\nconst hour = brazilianTime.getHours();\n\n// Verifica se a hora está entre 08:00 e 18:00 e se o dia é útil (segunda a sexta)\nif (hour >= 9 && hour < 18 && dayOfWeek >= 1 && dayOfWeek <= 5) {\n    return {\n        json: {\n            status: 'Horário funcionamento'\n        }\n    };\n} else {\n    return {\n        json: {\n            status: 'Fora do horário'\n        }\n    };\n}\n"
      },
      "id": "6258aa93-d2c8-4f25-b920-4425db01a02c",
      "name": "Code Horário funcionamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -960,
        2400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "Tente novamente utilizando outra opção de consulta disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "498f6e29-d9de-44ce-8d2b-0accfee92a2d",
      "name": "Horário funcionamento1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -960,
        2560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8ec90439-29cc-4f7e-9318-906539cd9a2d",
              "leftValue": "={{ $json.status }}",
              "rightValue": "funcionamento",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bf795a04-8b59-472a-a849-cbb0c7d15da0",
      "name": "Verificar Horário funcionamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1140,
        2560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "🕗 Alguns birôs restringem as consultas ao horário comercial. Aguarde até o horário de funcionamento para realizar a consulta e melhor experiência ou tente novamente utilizando outra opção disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fc73de0c-9e3f-4f33-b861-f1483fd7c4e4",
      "name": "Fora do horário",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -1140,
        2700
      ]
    },
    {
      "parameters": {
        "content": "## Horário funcionamento",
        "height": 578.2747827033502,
        "width": 397.97803245596407,
        "color": 3
      },
      "id": "e258d1d8-ad14-474f-8646-1331cf7575e9",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1200,
        2320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Menu'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Menu'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            },
            {
              "name": "Informações",
              "value": "=Atenção: O CNPJ informado é inválido. 🚨\nVerifique os números e digite corretamente."
            },
            {
              "name": "Pendências REFIN",
              "value": "=Erro"
            },
            {
              "name": "Pendências PEFIN",
              "value": "=Erro"
            },
            {
              "name": "Protestos",
              "value": "=Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "14825cdd-81e1-424d-ab0f-5fb633aeb83e",
      "name": "Erro1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3000,
        2340
      ]
    },
    {
      "parameters": {
        "url": "=https://comercial.cnpj.ws/cnpj/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}?token=Fzuivi52ORPdOUUOOnkq17SVWaKq3Gnmab6JjJYJM4cR",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "99ed0ddc-b079-4d9c-aad1-4763317d7ab5",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -380,
        520
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "9cb94037-f769-42b3-9255-c44ea3453468",
              "leftValue": "={{ $json.razao_social }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "df431316-8a32-4a6c-9e3d-249ee478a3e0",
      "name": "If19",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -160,
        520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "=*Razão Social:* _{{ $('HTTP Request2').item.json.razao_social }}_\n*Nome Fantasia:* _{{ $('HTTP Request2').item.json.estabelecimento.nome_fantasia }}_\n*CNPJ:* _{{ $('Webhook').item.json.body.CPF.padStart(14, '0') }}_\n*Situação Cadastral:* _{{ $('HTTP Request2').item.json.estabelecimento.situacao_cadastral }}_\n\n*Porte:* _{{ $('HTTP Request2').item.json.porte.descricao }}_\n*Natureza Juridica:* _{{ $('HTTP Request2').item.json.natureza_juridica.descricao }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cdb26257-f878-4a9a-84bc-4e2aacb72a9c",
      "name": "Informações16",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        160,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.socios[4].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3b9967be-63af-4c80-89bb-50ba008d2526",
      "name": "If21",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1620,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request2').item.json.socios[0].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[1].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[2].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[3].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[4].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "44072e9c-9371-40e8-8f57-15bc80709bfe",
      "name": "Informações17",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1620,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.socios[3].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4e421dad-903a-465d-a8c1-647ae75a1bb9",
      "name": "If22",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1820,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request2').item.json.socios[0].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[1].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[2].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[3].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "45db9c2b-8505-45d6-afd0-9df0058f73d2",
      "name": "Informações18",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1820,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.socios[2].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1e57cc14-4737-4c33-8546-2c068ec07751",
      "name": "If23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2000,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request2').item.json.socios[0].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[1].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[2].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a37160b1-9703-40e2-b665-06a8d90addf0",
      "name": "Informações19",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2000,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.socios[1].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9ddd77aa-ddc7-452e-a77a-61b6b6ab46a2",
      "name": "If24",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2180,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request2').item.json.socios[0].nome }}_\n- _{{ $('HTTP Request2').item.json.socios[1].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8291205f-ede0-43ba-92dc-77cc3d24bb38",
      "name": "Informações20",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2180,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.socios[0].nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "833ba6cf-f193-45b5-b3da-c612a2bf4b7d",
      "name": "If25",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2360,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Sócios*\n- _{{ $('HTTP Request2').item.json.socios[0].nome }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f41b1468-021a-4f8f-9084-956aec690513",
      "name": "Informações21",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2360,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.estabelecimento.atividade_principal.descricao }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5822ed0d-6dbc-4a86-ba99-9f84d54850f5",
      "name": "If26",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1100,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Atividade Principal*\n{{ $('HTTP Request2').item.json.estabelecimento.atividade_principal.descricao }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "edf05af8-85e9-4846-838d-9db646e80c8c",
      "name": "Informações22",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1100,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.estabelecimento.logradouro }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0a705634-d54f-4e60-b1c5-5926ce5fcf45",
      "name": "If27",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        860,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Endereço*\n{{ $('HTTP Request2').item.json.estabelecimento.tipo_logradouro }} {{ $('HTTP Request2').item.json.estabelecimento.logradouro }}, Número {{ $('HTTP Request2').item.json.estabelecimento.numero }}, {{ $('HTTP Request2').item.json.estabelecimento.complemento }} - {{ $('HTTP Request2').item.json.estabelecimento.bairro }}\n{{ $('HTTP Request2').item.json.estabelecimento.cidade.nome }} - {{ $('HTTP Request2').item.json.estabelecimento.estado.sigla }}\nCEP - {{ $('HTTP Request2').item.json.estabelecimento.cep }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3145fae6-ce4a-4e77-89c8-5e27be64564c",
      "name": "Informações23",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        860,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.estabelecimento.atividades_secundarias[0].descricao }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e4d734f0-9f5b-4ab5-aab6-1a64b4738f25",
      "name": "If28",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1280,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Atividade secundária*\n{{ $('HTTP Request2').item.json.estabelecimento.atividades_secundarias[0].descricao }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "80c64c1c-58a3-4e0a-b2ef-8d6e7eba78d9",
      "name": "Informações24",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1280,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.estabelecimento.telefone1 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c4b18108-69bf-4bfa-8c41-cc4c2505bd06",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        420,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Telefone*\n({{ $('HTTP Request2').item.json.estabelecimento.ddd1 }}){{ $('HTTP Request2').item.json.estabelecimento.telefone1 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3644376e-98e2-4706-8b25-675c787ddafa",
      "name": "Informações25",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        420,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "71920d81-6204-4db3-af81-ee1116dd205d",
              "leftValue": "={{ $('HTTP Request2').item.json.estabelecimento.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0d4e55d1-00af-4861-b537-32f6c30a0fcc",
      "name": "If30",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        600,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}\n\n## *Email*\n{{ $('HTTP Request2').item.json.estabelecimento.email }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b3498d9e-1e35-4829-bee5-2317d19321ca",
      "name": "Informações26",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        600,
        680
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dividas-cnpj_2-1-1",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "2867f138-c8fe-4370-9561-8945496e4943",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3980,
        1940
      ],
      "webhookId": "b3fb3d95-fab1-4705-b42d-04cbf6a47335"
    },
    {
      "parameters": {
        "amount": 60
      },
      "id": "0a476b83-f10e-451b-9f5d-cec23536d86d",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        10620,
        3300
      ],
      "webhookId": "57ecec8f-38ce-4703-8c4a-b56893de217b"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "ce26ffa4-1297-4851-a3e8-2ebddf8eca5e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c9f7bfb4-d198-45bd-9657-f45385e8d61e",
      "name": "se typebot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3200,
        2160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: O CNPJ informado é inválido. 🚨\nVerifique os números e digite corretamente.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b3a5e70b-f053-4db2-937b-81a24ce56806",
      "name": "typebot",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -2840,
        2140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "1e5704b4-6ca1-4441-a1e0-dcc161d10c14",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c66820b4-73f0-4386-b78f-2e526f4e6a17",
      "name": "se typebot1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1140,
        3080
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "={{ $('se typebot1').item.json['Consulta erro'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fd3c4529-93cc-4d90-bb4c-a665e4bb8e5d",
      "name": "typebot1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -760,
        3060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6f462be7-205f-44ba-a718-abc8ae7d053e",
      "name": "se typebot2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        8440,
        2540
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "49e85b80-0532-46a3-8a58-2528501bf09e",
              "name": "CONSULTA _ TEXTO",
              "value": "=## INFORMAÇÕES\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}\n\n--------------------------------------------------------------\n\n## PENDÊNCIAS REFIN\n{{ $('Aggregate6').item.json.Consulta[0]['Pendencias Refin'] }}\n\n## PENDÊNCIAS PEFIN\n{{ $('Aggregate6').item.json.Consulta[0]['Pendencias Pefin'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "75ae6910-2a5c-4c75-a9fb-1ca3dee2360f",
      "name": "CONSULTA _ TEXTO",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5280,
        3140
      ]
    },
    {
      "parameters": {
        "model": "llama-3.3-70b-versatile",
        "options": {
          "temperature": 0
        }
      },
      "id": "d57d9782-eb74-4265-97a3-6f6377d5c527",
      "name": "Groq Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        5300,
        3560
      ],
      "credentials": {
        "groqApi": {
          "id": "0U8f3VFF5G2KERm1",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = [];\nfor (let i = 0; i < 10; i++) {\n  items.push({ json: { iteration: i + 1 } });\n}\nreturn items;"
      },
      "id": "f16fef90-fc80-449c-aba6-b3d2a7641798",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5800,
        3560
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "5c060d3d-a664-4d12-8a00-331d6e33101a",
      "name": "Wait4",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6220,
        3580
      ],
      "webhookId": "9260285e-cd1b-4d39-8e0a-fc8bc2902650"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://v2.api2pdf.com/chrome/pdf/html",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "085551d3-3165-49d6-9fff-22ac23f127b9"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If32').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "1da7e602-bd34-413d-a8ed-4cd970e6bea5",
      "name": "Gerar PDF API1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6000,
        3380
      ],
      "alwaysOutputData": true,
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "try {\n    // Obter a string de HTML do campo {{ $json.output }}\n    const htmlString = $json.output;\n\n    // Verificar se htmlString está definido e é uma string\n    if (!htmlString || typeof htmlString !== 'string') {\n        throw new Error(\"O campo 'output' está vazio ou não é uma string.\");\n    }\n\n    // Encontrar o índice da primeira ocorrência de 'Inicio HTML'\n    const doctypeIndex = htmlString.indexOf('Inicio HTML\\n<!DOCTYPE html>\\n');\n\n    // Se a string for encontrada, cortar tudo antes dela\n    let htmlContent = doctypeIndex !== -1 ? htmlString.slice(doctypeIndex) : htmlString;\n\n    // Substituir \"URL-LOGO\" por \"LOGOARTHUR\"\n    htmlContent = htmlContent.replace('URL-LOGO', 'LOGOARTHUR');\n\n    // Substituir tabelas específicas por parágrafos informativos\n    htmlContent = htmlContent.replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem informações registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem informações registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem informações registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n);\n\n\n    // Retornar o conteúdo modificado\n    return { htmlContent };\n} catch (error) {\n    // Em caso de erro, retornar a string {{ $json.message.content }}\n    return { htmlContent: $json.message?.content || \"Erro desconhecido\" };\n}"
      },
      "id": "e945d984-bbdc-467d-959a-f557d67bd093",
      "name": "Code Formatar HTML",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5780,
        3380
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "390da415-ec09-4062-b40e-e28d047a0a97",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        6020,
        3560
      ]
    },
    {
      "parameters": {},
      "id": "3c946d5b-a0ef-45e8-94a3-b2750da2f0b8",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        5620,
        3560
      ]
    },
    {
      "parameters": {},
      "id": "75f6cc97-87ba-452d-a064-6256d46f3cb0",
      "name": "Limit3",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        6460,
        3380
      ]
    },
    {
      "parameters": {
        "content": "## GROQ",
        "height": 810.5701325137197,
        "width": 1470.1173247966844,
        "color": 6
      },
      "id": "5b852065-db84-4b4c-a6bf-10fb3141dd67",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5180,
        3000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f72aecac-f8f3-445b-b743-03e61e2bf49b",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "15c4a52a-5f35-440b-b4f7-b1b042f414e8",
      "name": "IF PDF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6240,
        3380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "195af974-c126-484e-b5a5-acc1383966d5",
              "leftValue": "={{ $json.output }}",
              "rightValue": "Fim HTML",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "88d65093-2062-4bb2-8c09-b886be978aa4",
              "leftValue": "={{ $json.output }}",
              "rightValue": "Inicio HTML",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "4e53ceab-27cb-4326-9ceb-1f0a84a3ceed",
              "leftValue": "={{ $json.output }}",
              "rightValue": "<!DOCTYPE html>",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "f88b7248-45d8-4337-b2c6-4fff7bd07732",
              "leftValue": "={{ $json.output }}",
              "rightValue": "URL-LOGO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "7acfcb7a-fc95-466b-8aad-52f4c4ecc9e4",
              "leftValue": "={{ $json.output }}",
              "rightValue": ">Pendências Refin<",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "57e413ae-f423-47f1-beb2-5c367aa14560",
              "leftValue": "={{ $json.output }}",
              "rightValue": ">Pendências Refin<",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "861e51ce-8821-48f1-a1c5-404b73050b4c",
      "name": "If31",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5620,
        3380
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: O CNPJ informado é inválido. 🚨\nVerifique os números e digite corretamente."
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "08685f1c-6186-45a7-a3fe-45071235e762",
      "name": "Resposta Typebot CNPJ Errado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3000,
        2140
      ],
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7396d8de-b71e-49fa-8ebc-627791d6a01f",
      "name": "Resposta Typebot Erro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -960,
        3060
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'] }}"
            },
            {
              "name": "PDF",
              "value": "=### PDF\n{{ $('IF PDF').item.json.FileUrl }}"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "af268ad9-d9dd-468b-99d0-9b9f22801fdd",
      "name": "Resposta Typebot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8620,
        2520
      ],
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=*UniConsultas*\nTodas as consultas em um só lugar!\n\n------- / / -------\n\n## Consulta Financeira CNPJ\n\n{{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO']}}",
              "type": "string"
            },
            {
              "id": "35ce6c2f-5b10-417c-a2c6-84a7ab68429b",
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bb5292cf-1a06-44d3-801f-9ceeb5ff7ce2",
      "name": "typebot2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        8840,
        2500
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Dados N8N').item.json['Prompt PDF'] }}\n\n{{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/ - (?![A-Z]{2})/g, '').replace(/_(?![\\w.-]+@[\\w.-]+)/g, '').replace(/_(?![\\w.-]+@[\\w.-]+)/g, '').replace(/\\*/g, '') }}",
        "options": {}
      },
      "id": "95dbf4ae-6ae9-46dd-8d9a-3723814139ff",
      "name": "AI Agent2",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        5260,
        3380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8e5d1e6-feda-4373-8e50-936f54a48786",
              "name": "Créditos",
              "value": "=4",
              "type": "string"
            },
            {
              "id": "e83c4952-cefe-4e2e-accf-865e014c5c20",
              "name": "Opção Consulta",
              "value": "CNPJ 2",
              "type": "string"
            },
            {
              "id": "b465d432-f3ad-4b56-8e49-81a06ca7db1a",
              "name": "Tipo Consulta",
              "value": "={{ $workflow.name }}",
              "type": "string"
            },
            {
              "id": "ccbdfb0b-45f1-40b2-b095-fcfefa698376",
              "name": "Telefone",
              "value": "={{ $('Aggregate').item.json.Consulta[0].Telefone }}",
              "type": "string"
            },
            {
              "id": "41bac44d-098a-4889-ad47-0138194c7d6b",
              "name": "Dado consultado",
              "value": "={{ $('Aggregate').item.json.Consulta[0]['Dado Consultado'] }}",
              "type": "string"
            },
            {
              "id": "5f0eaada-894e-45cf-8c51-3f1a65fb785e",
              "name": "Data",
              "value": "={{ $json.data }}",
              "type": "string"
            },
            {
              "id": "f34f0ad5-5beb-4941-a1be-d63c2f099f22",
              "name": "Hora",
              "value": "={{ $json.hora }}",
              "type": "string"
            },
            {
              "id": "80f689ee-d4ec-4b52-ad1d-e1e710f72420",
              "name": "=URL PDF",
              "value": "={{ $('IF PDF').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "7c7fe4c7-5f91-4a5c-af93-3104c80aab4c",
              "name": "Origem Consulta",
              "value": "={{ $('Aggregate').item.json.Consulta[0].Webhook }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        8240,
        3920
      ],
      "id": "9eeb827c-b634-4f12-bb90-f94e0ce6c65c",
      "name": "Dados Histórico"
    },
    {
      "parameters": {
        "jsCode": "const agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [dataStrRaw, horaStr] = agora.split(' ');\nconst dataStr = dataStrRaw.replace(',', '');\n\n// Extrai dia, mês e ano\nconst [dia, mes, ano] = dataStr.split('/');\nconst dataFormatada = `${dia}/${mes}/${ano}`;\n\n// Novo formato ISO (YYYY-MM-DD)\nconst dataISO = `${ano}-${mes}-${dia}`;\n\n// Monta a URL da execução\nconst executionId = $execution.id;\nconst workflowId = $workflow.id;\nconst baseUrl = \"https://n8n.redequeroimoveis.com\";\nconst executionUrl = `${baseUrl}/workflow/${workflowId}/executions/${executionId}`;\n\n// Retorna tudo em um único objeto\nreturn [{\n  json: {\n    data: dataFormatada,\n    data_iso: dataISO,\n    hora: horaStr,\n    executionUrl: executionUrl\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8080,
        3920
      ],
      "id": "b1212c1f-9b7b-46ba-8413-7aa7b0e3d95c",
      "name": "Code4"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "Consulta",
        "options": {}
      },
      "id": "356ff885-017a-475a-9814-604d24198688",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        7920,
        3920
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "447651f0-0764-4813-9e1c-889968d17a2a",
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}",
              "type": "string"
            },
            {
              "id": "1dd15b0f-5fc8-4008-bbfa-3c8510d2badc",
              "name": "Dado Consultado",
              "value": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
              "type": "string"
            },
            {
              "id": "d5477e90-c640-4c0d-b426-26f79d344af8",
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2560,
        1800
      ],
      "id": "2e57af88-3636-400b-a799-605af9112ec6",
      "name": "Mepear Histórico"
    },
    {
      "parameters": {},
      "id": "b6f7b149-1086-4f48-b8b3-80b6133cb382",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        7760,
        3920
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obter a string de HTML do campo {{ $json.output }}\nconst htmlString = $json.output;\n\n// Encontrar o índice da primeira ocorrência de 'Inicio HTML'\nconst doctypeIndex = htmlString.indexOf('Inicio HTML\\n<!DOCTYPE html>\\n');\n\n// Se a string for encontrada, cortar tudo antes dela\nlet htmlContent = doctypeIndex !== -1 ? htmlString.slice(doctypeIndex) : htmlString;\n\n// Substituir \"URL-LOGO\" por \"LOGOARTHUR\"\nhtmlContent = htmlContent.replace('URL-LOGO', 'LOGOARTHUR');\n\n// Retornar o conteúdo modificado\nreturn { htmlContent };\n"
      },
      "id": "43705989-6833-41d8-8ce6-7e9720e083f0",
      "name": "Code Formatar HTML1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5800,
        3900
      ]
    },
    {
      "parameters": {
        "jsCode": "try {\n    // Obter a string de HTML do campo {{ $json.output }}\n    const htmlString = $json.output;\n\n    // Verificar se htmlString está definido e é uma string\n    if (!htmlString || typeof htmlString !== 'string') {\n        throw new Error(\"O campo 'output' está vazio ou não é uma string.\");\n    }\n\n    // Encontrar o índice da primeira ocorrência de 'Inicio HTML'\n    const doctypeIndex = htmlString.indexOf('Inicio HTML\\n<!DOCTYPE html>\\n');\n\n    // Se a string for encontrada, cortar tudo antes dela\n    let htmlContent = doctypeIndex !== -1 ? htmlString.slice(doctypeIndex) : htmlString;\n\n    // Substituir \"URL-LOGO\" por \"LOGOARTHUR\"\n    htmlContent = htmlContent.replace('URL-LOGO', 'LOGOARTHUR');\n\n    // Substituir tabelas específicas por parágrafos informativos\n    htmlContent = htmlContent.replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n);\n\n    // Retornar o conteúdo modificado\n    return { htmlContent };\n} catch (error) {\n    // Em caso de erro, retornar a string {{ $json.message.content }}\n    return { htmlContent: $json.message?.content || \"Erro desconhecido\" };\n}"
      },
      "id": "90c38861-8b5e-4d0c-b9bd-d8ad9d15967f",
      "name": "Code Formatar HTML2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5800,
        4060
      ]
    },
    {
      "parameters": {
        "url": "=https://baserow.unisistemas.tech/api/database/rows/table/643/?user_field_names=true&filter__field_6200__contains={{ $('Webhook').item.json.body.Telefone }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_field_names",
              "value": "true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token UU2yIjUeFuKaWhvMc734TVS2oEOKWjp9"
            }
          ]
        },
        "options": {}
      },
      "id": "83aa56ed-e694-4c32-a3b5-62e72842fa58",
      "name": "HTTP Request10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5480,
        3120
      ],
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "87ac1dec-3f72-4857-8884-a3cfde60d311",
              "leftValue": "={{ $json.results[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "60387208-f99b-49b3-a177-eedb897a94a5",
              "leftValue": "={{ $json.results[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5640,
        3120
      ],
      "id": "ca242fab-ffd3-4a42-a834-298309c110c5",
      "name": "If32"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8e5d1e6-feda-4373-8e50-936f54a48786",
              "name": "Créditos",
              "value": "=4",
              "type": "string"
            },
            {
              "id": "e83c4952-cefe-4e2e-accf-865e014c5c20",
              "name": "Opção Consulta",
              "value": "CNPJ 2",
              "type": "string"
            },
            {
              "id": "b465d432-f3ad-4b56-8e49-81a06ca7db1a",
              "name": "Tipo Consulta",
              "value": "Dividas CNPJ 2-1 (ConsultasPrime - restricao-pj)",
              "type": "string"
            },
            {
              "id": "ccbdfb0b-45f1-40b2-b095-fcfefa698376",
              "name": "Telefone",
              "value": "={{ $('Aggregate').item.json.Consulta[0].Telefone }}",
              "type": "string"
            },
            {
              "id": "41bac44d-098a-4889-ad47-0138194c7d6b",
              "name": "Dado consultado",
              "value": "={{ $('Aggregate').item.json.Consulta[0]['Dado Consultado'] }}",
              "type": "string"
            },
            {
              "id": "5f0eaada-894e-45cf-8c51-3f1a65fb785e",
              "name": "Data",
              "value": "={{ $json.data }}",
              "type": "string"
            },
            {
              "id": "f34f0ad5-5beb-4941-a1be-d63c2f099f22",
              "name": "Hora",
              "value": "={{ $json.hora }}",
              "type": "string"
            },
            {
              "id": "80f689ee-d4ec-4b52-ad1d-e1e710f72420",
              "name": "=URL PDF",
              "value": "={{ $('IF PDF').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "7c7fe4c7-5f91-4a5c-af93-3104c80aab4c",
              "name": "Origem Consulta",
              "value": "={{ $('Aggregate').item.json.Consulta[0].Webhook }}",
              "type": "string"
            },
            {
              "id": "80846b1d-e1ac-478f-9371-1c29e5235b5a",
              "name": "Pacote Ativo",
              "value": "={{ $('Google Sheets').item.json['Pacote Ativo'] }}",
              "type": "string"
            },
            {
              "id": "ea812bc4-fa0c-4ae0-880c-e414faba5023",
              "name": " Valor ",
              "value": "={{ $('Google Sheets').item.json.Valor }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        8040,
        4240
      ],
      "id": "94780ac5-37e9-48fb-a93d-18cce95de902",
      "name": "Dados Histórico1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://v2.api2pdf.com/chrome/pdf/html",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "085551d3-3165-49d6-9fff-22ac23f127b9"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $('Code Formatar HTML').item.json.htmlContent\n    .replace('LOGOARTHUR', $('Google Sheets').item.json['URL PDF Imagem'] || $('Dados N8N').item.json['URL-LOGO'] || 'https://i.imgur.com/vK314BL.jpeg')\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim()\n    .replace('URL-LOGO', $('Google Sheets').item.json['URL PDF Imagem'] || $('Dados N8N').item.json['URL-LOGO'] || 'https://i.imgur.com/vK314BL.jpeg')\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim() \n}}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "1fbf2dec-f547-47aa-a8c6-230f08f0fb6f",
      "name": "Gerar PDF API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6140,
        3860
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0014a9f5-3531-4463-8e28-9e34a81817fc",
      "name": "Se base44",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7860,
        2360
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64530896-b254-4c99-991f-167b429c9304",
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If32').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}",
              "type": "string"
            },
            {
              "id": "842b2f23-b0c2-4713-a419-890e04377971",
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "774d16d2-47c6-411a-8c78-78812c161e93",
              "name": "resposta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "034ce018-39d8-4aed-be9b-d6545eb70737",
      "name": "resposta-base44",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        8360,
        2340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4f07d5ba-ba89-4ba0-a6de-fb7cb767047e",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -2080,
        1500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $json.creditos }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "afc9433e-5939-48bf-b95f-b4c4e9e2a92e",
      "name": "Crédito maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2080,
        1140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "54fe3751-238c-4e81-806f-dba07812a41d",
      "name": "Se site / bc1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2420,
        1040
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "9d3e6461-a841-4801-8c18-7afa3ec329f2",
      "name": "Crédito inferior1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2260,
        1340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5440959e-daa9-433b-bda4-122dc25a889a",
      "name": "Retornar Créditos Site1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2260,
        1140
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## SE SITE VERIFICAR CRÉDITO",
        "height": 779,
        "width": 710,
        "color": 4
      },
      "id": "13f62aa2-4d16-4ae3-ad81-d56b493e97b6",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2500,
        980
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "84ea7e0b-2b26-4045-9eaf-7b3e773bbf0b",
      "name": "Respond to Webhook7",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -2080,
        1340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "60288151-e6eb-4293-b30b-a838e064013e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e743abf9-f56d-4af4-9293-dd680c08ed18",
      "name": "If33",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2260,
        1520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6819f5703086936c581632c2/entities/Historico",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "tipo_consulta",
              "value": "={{ $json['Tipo Consulta'] }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json['Créditos'] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            },
            {
              "name": "url_pdf",
              "value": "={{ $json['URL PDF'] }}"
            },
            {
              "name": "origem",
              "value": "={{ $json['Origem Consulta'] }}"
            },
            {
              "name": "opcao",
              "value": "={{ $json['Opção Consulta'] }}"
            },
            {
              "name": "exec",
              "value": "={{ $('Code4').item.json.executionUrl }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8400,
        3540
      ],
      "id": "9403727c-b2a0-42f0-95c5-c65fe52e82b7",
      "name": "Base44 API - Histórico",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If32').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8120,
        2340
      ],
      "id": "01d65200-64b6-4715-a651-8103cf96283a",
      "name": "Base44 API - RetornoConsulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/UltimaConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If32').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            },
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8400,
        3720
      ],
      "id": "e0b2b1e0-aec7-4060-938e-65512f511174",
      "name": "Base44 API - Última Consulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Tipo Consulta",
              "value": "=F",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": 4,
              "type": "number"
            },
            {
              "id": "86de2d86-ffc8-413a-a972-8b7b2e48772b",
              "name": "Nome Menu",
              "value": "Consulta SCPC Boa Vista + Pendências Refin / Pefin + Resumo IA (4 créditos)",
              "type": "string"
            },
            {
              "id": "e705ce72-8ac5-4d21-8d42-672b8d5fe07c",
              "name": "Nome Menu Status",
              "value": "Consulta SCPC Boa Vista + Pendências Refin / Pefin (4 créditos)",
              "type": "string"
            },
            {
              "id": "d565060e-6c73-4764-90d1-7086227302a2",
              "name": "Prompt Resumo IA",
              "value": "=Você receberá dados financeiros e de pendências relacionadas a um CPF ou CNPJ, incluindo informações como dívidas, protestos, status de crédito e score. Sua tarefa é organizar essas informações de maneira clara e objetiva, estruturando-as em seções e terminando com um breve resumo da situação financeira da pessoa física ou jurídica.\n\nInstruções para a Estrutura e Redação:\nEstrutura dos Dados:\nInicie apresentando as principais informações do CPF ou CNPJ, como nome, data de nascimento, nome da mãe e situação na Receita Federal, se disponível.\nCrie uma seção que apresente, de forma resumida, todas as pendências financeiras, dívidas e protestos identificados.\nApresente o score de crédito e a probabilidade de inadimplência, se forem disponibilizados.\n\nResumo da Situação Financeira:\nElabore um parágrafo resumindo a situação financeira geral do CPF ou CNPJ.\nUse uma linguagem neutra e clara, apontando os riscos de crédito, quantidade de dívidas ou protestos e qualquer outra informação relevante que possa impactar a análise do perfil financeiro.\n\nObservações Importantes:\nNÃO exiba ou informe nenhum dado de contato, incluindo telefones, endereços ou e-mails.\nNÃO invente dados que não foram explicitamente fornecidos.\nSiga rigorosamente as normas de proteção de dados pessoais (LGPD), respeitando a privacidade do consultado.\n\nSegue abaixo um breve exemplo de resumo\n\"### Resumo da Situação Financeira\nRafael dos Santos Nogueira apresenta um histórico financeiro com múltiplas pendências, incluindo dívidas com instituições educacionais e um protesto registrado. O total das pendências varia, mas a principal dívida se destaca no valor de R$ 1.467,62. Essas ocorrências podem impactar negativamente seu acesso ao crédito. A situação atual sugere um certo risco de inadimplência e é recomendável que Rafael busque regularizar suas pendências para evitar complicações financeiras futuras.\"\n\nFaça um breve resumo com no máximo 700 caracteres de forma simples explicando a situação financeira utilizando todas as informações fornecidas. Não ignore nenhum dado. No resumo você não precisa escrever ou listar todas as pendências. Apenas resumir com um total e quantidade dos titulos abaixo.\nO titulo do resumo precisa ser exatamente \"### RESUMO DA SITUAÇÃO FINANCEIRA\" (EM LETRAS MAIÚSCULAS)\nUma observação. O titulo dos menus estão entre ##\nRetorne apenas os dados a partir de \"## RESUMO DA SITUAÇÃO FINANCEIRA\"\n\nSegue abaixo os dados para formatar:",
              "type": "string"
            },
            {
              "id": "eda52165-db3d-4068-b1e6-e7f10e8692a0",
              "name": "Prompt PDF",
              "value": "=Objetivo: Formatar os dados da consulta de crédito de forma estruturada e organizada, seguindo o modelo de análise de crédito do Serasa, retornando exclusivamente um código HTML.\nInstruções:\n* Retornar apenas o HTML, sem nenhum outro texto no output.\n* Seguir a estrutura de tabelas para organizar os dados.\n* Usar fontes de até 11px para informações dentro das tabelas.\n* Remover o título <h1>, mas adicionar duas quebras de linha (<br><br>) após a logo para espaçamento.\n* Não alterar o campo \"URL-LOGO\", pois ele será substituído dinamicamente.\n* Adicionar \"Resumo através de IA\" no final, com um resumo dos dados recebidos.\n* Incluir um rodapé com informações de confidencialidade e LGPD, usando fonte de 9px e alinhado à esquerda.\n* Nunca utilizar a expressão \"Dados do Cotista\", apenas \"Dados\".\nFormato esperado:\n* HTML bem estruturado, com seções claras.\n* Uso de <div> para blocos de informações e <table> para dados tabulares.\n* Listas <ul> para e-mails, telefones e parentes.\n* Footer fixo no final do relatório.\n* Caso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\n* É obrigatório que todas as informações fornecidas abaixo conste no HTML.\n* Se tiver \"_Sem pendências registradas._\", \"_Sem pendências._\" ou algo que comece e termine com \"_\", remova o \"_\".\n* Se o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\n* Se não existir nenhum email, não adicione no html Email\n* Se não existir nenhum telefone, não adicione no html Telefone\n* Se não existir nenhum Possíveis Parentes, não adicione no html Possíveis Parentes\n* Se email estiver vazio ou não existir, não crie no html <strong>Email:</strong>\n* Se telefone estiver vazio ou não existir, não crie no html <strong>Telefone:</strong>\n\nAdicione um texto no final com os dados recebidos de \"RESUMO ATRAVÉS DE IA\"\"\n\nAdicione também um rodapé na página com fonte tamanho 9 alinhado a esquerda da página com os seguintes dados:\n\"INFORMAÇÕES IMPORTANTES\nESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO , RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.\n\nMINUTA DE DECLARAÇÃO LGPD\nDECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.\"\n\nHTML DE EXEMPLO 1:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\"><br><br>\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Razão Social:</span> ARTHUR BALDIOTTI MENDONCA ALVARES 11383223696</p>\n            <p><span class=\"info\">Nome Fantasia:</span> TIO SAM MULTIMARCAS</p>\n            <p><span class=\"info\">CNPJ:</span> 22742922000107</p>\n            <p><span class=\"info\">Situação Cadastral:</span> Baixada</p>\n            <p><span class=\"info\">Porte:</span> Micro Empresa</p>\n            <p><span class=\"info\">Natureza Jurídica:</span> Empresário (Individual)</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Telefone</h2>\n            <p><span class=\"info\">Telefone:</span> (37)99781110</p><br>\n            <h2 class=\"section-header\">Email</h2>\n            <p><span class=\"info\">Email:</span> contato@tiosammultimarcas.com</p><br>\n            <h2 class=\"section-header\">Endereço</h2>\n            <p><span class=\"info\">Endereço:</span> RUA FRANCISCO SALES, Número 119, LOJA 1 e 4 - CENTRO</p>\n            <p><span class=\"info\">Cidade:</span> Pará de Minas</p>\n            <p><span class=\"info\">Estado:</span> MG</p>\n            <p><span class=\"info\">CEP:</span> 35660017</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Atividade Principal</h2>\n            <p><span class=\"info\">Atividade Principal:</span> Comércio varejista de artigos do vestuário e acessórios</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Atividade Secundária</h2>\n            <p><span class=\"info\">Atividade Secundária:</span> Comércio varejista especializado de equipamentos de telefonia e comunicação</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências Refin</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Contrato</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>01/09/2020</td>\n                    <td>022742922000107FI</td>\n                    <td>BANCO BRADESCO S/A</td>\n                    <td>R$408,82</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências Pefin</h2>\n            <table>\n                <tr>\n                    <th>Total Ocorrências</th>\n                    <th>Ocorrência Antiga</th>\n                    <th>Ocorrência Recente</th>\n                    <th>Valor Total</th>\n                </tr>\n                <tr>\n                    <td>1</td>\n                    <td>01/09/2020</td>\n                    <td>01/09/2020</td>\n                    <td>R$408,82</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>TIO SAM MULTIMARCAS apresenta um histórico financeiro com pendências registradas, com um total de R$408,82. Embora não existam protestos, a presença de dívidas pode impactar negativamente seu acesso ao crédito. Além disso, é importante lembrar que a situação financeira da empresa pode ser afetada por fatores como a natureza jurídica e o porte da empresa.</p>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n    </div>\n</body>\n</html>\n\nImportante, escreva \"Inicio HTML\" e \"Fim HTML\" no inicio e no final. Somente isso. Não escreva mais nenhum dados fora do código.\nQuando for exatamente começar o código HTML, escreva da seguinte maneira: Inicio HTML\\n<!DOCTYPE html>\\n\nEscreva no código html todas as informações fornecidas. Não ignore nenhum dado.\nUma observação. O titulo dos menus entrão entre <>\nCaso a frase comece e termine com \"_\", pode remover o \"_\"\nSempre formate no html utilizando TODOS os dados fornecidos abaixo como informações, valores, dados, tudo sem exceção.\nVocê vai adicionar na formatação somente os dados existentes e informados abaixo.\nImportante. Se o dados como telefone, email ou parentes não estiver disponível e não for fornecido, você não precisa adicionar a \"div class\" no html.\nAdicione \"Sugestões para Regularização em caso de Débitos\"\nSempre adicione <br> entre uma \"div class\" e outra.\nÉ obrigatório que pendências, scpc, débitos, refin e pefin e protestos sejam sempre em tabela.\nSiga fielmente o layout do exemplo de html acima.\nCaso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\nSe o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\nÉ importante que você adicione no HTML somente os dados fornecidos abaixo que são para formatar. Os dados dos HTML de exemplo servem somente para seguir o layout do HTML (Nunca utilize as informações de exemplo ou invente dados para adicionar no html formatado).\nÉ obrigatório que todas as informações fornecidas abaixo conste no HTML.\nRemova todos os _ do html exceto de email.\n\nAtenção, todos os dados e informações acima server exclusivamente como exemplo para você estruturar o HTML.\nAs informações na formatação do HTML precisam estar na mesma ordem dos dados para formatar.\nUtilize somente os dados abaixo para formatar o HTML:",
              "type": "string"
            },
            {
              "id": "a6be7243-ae46-4033-a994-ca3a7b5e3899",
              "name": "URL-LOGO",
              "value": "=https://i.imgur.com/g0gImpK.jpeg",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5093e46d-9aa4-4310-9675-67ff081153da",
      "name": "Dados N8N1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3660,
        1760
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "url-pdf",
        "filters": {
          "conditions": [
            {
              "keyName": "Telefone",
              "keyValue": "={{ $('Webhook').item.json.body.Telefone.startsWith('+') ? $('Webhook').item.json.body.Telefone : '+' + $('Webhook').item.json.body.Telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5480,
        2920
      ],
      "id": "26befa9c-9754-469d-8d03-0b752eac99a4",
      "name": "Obter Logo Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b1316b88-fc68-42c5-9eb1-7c4422132997",
      "name": "Respond to Webhook2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -2120,
        2340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: estamos realizando algumas atualizações no sistema.\nTente novamente mais tarde."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "f1228dfc-ed51-4b8a-ab6f-bdccaaa78ef4",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2320,
        2340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "Atenção: estamos realizando algumas atualizações no sistema. Tente novamente mais tarde."
            },
            {
              "name": "Nome Menu",
              "value": "={{ $('Dados N8N').item.json['Nome Menu'] }}"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Menu'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "a4b6be1b-b98a-4648-802a-6e8e6ef7d44d",
      "name": "Consulta ERRO2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2120,
        2120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "1ff6c905-3e5b-40db-b0e6-e9819b8478a3",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "b25a9f16-4fef-415f-828c-c90d64c8c4e0",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "16180a4b-9a8c-44c5-ad7c-3829b6385836",
      "name": "If13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2300,
        1960
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: estamos realizando algumas atualizações no sistema.\nTente novamente mais tarde.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0bf398f2-3ffc-49e4-b614-b96b2b52db69",
      "name": "Edit Fields10",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -2120,
        1940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3ed7ed83-f01f-470a-9549-b1c0be155982",
      "name": "If10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2300,
        2140
      ]
    },
    {
      "parameters": {},
      "id": "f6588f95-c182-4a4b-b144-be91e3435347",
      "name": "Limit4",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        5860,
        3120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "9cb94037-f769-42b3-9255-c44ea3453468",
              "leftValue": "={{ $('Webhook').item.json.body[\"Informações\"] }}",
              "rightValue": "erro",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7d6ef09b-5d2d-425b-a92f-7076872ba6a5",
      "name": "If42",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -260,
        20
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "=*CNPJ:* _{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f4ae2d8d-d349-4e47-a301-d297dd41625e",
      "name": "Informações",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -260,
        160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5c78911-1718-4e18-9728-fe15eaa93c45",
              "name": "Informações",
              "value": "={{ $('Webhook').item.json.body[\"Informações\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "23138041-b4e6-43c2-90fc-4cea27bb2468",
      "name": "Informações3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8cc86a13-85cf-4301-a6ce-34881ad480c6",
              "leftValue": "={{ $('If4').item.json.urlpdf }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        9920,
        3720
      ],
      "id": "3ec61679-a516-47bc-8434-3d4e128c291d",
      "name": "Se URLPDF"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a4ea19e9-6167-473d-ad80-c739ad364aa5",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        9400,
        3740
      ],
      "id": "5e51806a-bc3a-4d62-a5bd-c8755fb737e4",
      "name": "If4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: O link para download do PDF estará disponível por apenas 1 minuto. Após esse período, ele será deletado automaticamente.\n\n### PDF\n{{ $('If4').item.json.urlpdf }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10100,
        3700
      ],
      "id": "d5bca4f4-a31f-41e4-b926-2e68a6c6606e",
      "name": "EvolutionAPI - Resposta2",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "={{ $json.resposta\n  .replace(/_ /g, '_')\n  .replace(/---------+/g, '------- / / -------') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9740,
        3720
      ],
      "id": "5897e9aa-95e8-4fe9-90de-5116cd7d2dcf",
      "name": "EvolutionAPI - Resposta3",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Resposta Typebot",
        "height": 260,
        "width": 940,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        9340,
        3640
      ],
      "typeVersion": 1,
      "id": "21dd83da-7199-4ae2-b70f-90bc494fb802",
      "name": "Sticky Note3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        9580,
        3720
      ],
      "id": "36403695-2630-46c6-8714-57620969fc34",
      "name": "Limit5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2080,
        1660
      ],
      "id": "e3aa0bd9-396a-424e-b63d-85ac09380b95",
      "name": "EvolutionAPI - Sem credito",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "013e4e4a-dcc0-474a-b1da-f7a59753b9fd",
      "name": "If34",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2260,
        1680
      ]
    }
  ],
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Pendencias Refin",
            "type": "main",
            "index": 0
          },
          {
            "node": "Pendencias Pefin",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mapa - Protesto",
            "type": "main",
            "index": 0
          },
          {
            "node": "If42",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate6": {
      "main": [
        [
          {
            "node": "CONSULTA _ TEXTO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Protesto": {
      "main": [
        [
          {
            "node": "SE Protesto - 11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 5": {
      "main": [
        [
          {
            "node": "Protesto - 5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 5": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE Protesto - 4": {
      "main": [
        [
          {
            "node": "Protesto - 4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 4": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE Protesto - 2": {
      "main": [
        [
          {
            "node": "Protesto - 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 3": {
      "main": [
        [
          {
            "node": "Protesto - 3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 3": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - 2": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE Protesto - 1": {
      "main": [
        [
          {
            "node": "Protesto - 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 0",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 1": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE Protesto - 0": {
      "main": [
        [
          {
            "node": "Protesto - 0",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Protesto - ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 0": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - ": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Retornar Créditos": {
      "main": [
        [
          {
            "node": "Créditos a retirar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe": {
      "main": [
        [
          {
            "node": "Maior ou igual1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Crédito Arthur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos": {
      "main": [
        [
          {
            "node": "Verificar saldo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Disponíveis1": {
      "main": [
        [
          {
            "node": "Retirar Créditos2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Crédito Arthur": {
      "main": [
        [
          {
            "node": "Se crédito existe3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe3": {
      "main": [
        [],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Créditos a retirar1": {
      "main": [
        [
          {
            "node": "Se crédito existe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Maior ou igual1": {
      "main": [
        [
          {
            "node": "Retirar Créditos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Disponíveis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar saldo": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados N8N": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 11": {
      "main": [
        [
          {
            "node": "Pendencias - 11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 10": {
      "main": [
        [
          {
            "node": "Pendencias - 10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 9": {
      "main": [
        [
          {
            "node": "Pendencias - 9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 8": {
      "main": [
        [
          {
            "node": "Pendencias - 8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 7": {
      "main": [
        [
          {
            "node": "Pendencias - 7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 6": {
      "main": [
        [
          {
            "node": "Pendencias - 6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pendencias Pefin1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 5": {
      "main": [
        [
          {
            "node": "Pendencias - 5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 4": {
      "main": [
        [
          {
            "node": "Pendencias - 4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 3": {
      "main": [
        [
          {
            "node": "Pendencias - 3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 2": {
      "main": [
        [
          {
            "node": "Pendencias - 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 1": {
      "main": [
        [
          {
            "node": "Pendencias - 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Pendencias - 0",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Pendencias - 0": {
      "main": [
        [
          {
            "node": "Pendencias - 0",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pendencias Refin1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pendencias Refin": {
      "main": [
        [
          {
            "node": "SE Pendencias - 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pendencias Pefin": {
      "main": [
        [
          {
            "node": "SE Pendencias - 11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pendencias - 11": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 10": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 9": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 8": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 7": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 6": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias Pefin1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 5": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 4": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 3": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 2": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias - 0": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Pendencias Refin1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Dados Básicos": {
      "main": [
        [
          {
            "node": "Dados Básicos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados Básicos1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - ": {
      "main": [
        [
          {
            "node": "Protesto - 6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 6": {
      "main": [
        [
          {
            "node": "Protesto - 7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 7": {
      "main": [
        [
          {
            "node": "Protesto - 9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 8": {
      "main": [
        [
          {
            "node": "Protesto - 8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 9": {
      "main": [
        [
          {
            "node": "Protesto - 10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 10": {
      "main": [
        [
          {
            "node": "Protesto - 11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 11": {
      "main": [
        [
          {
            "node": "Protesto - 12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 12": {
      "main": [
        [
          {
            "node": "Protesto - 13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - 13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SE Protesto - 13": {
      "main": [
        [
          {
            "node": "Protesto - 14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SE Protesto - ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 11": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - 10": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - 9": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - 8": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - 7": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - 6": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - 14": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - 13": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Protesto - 12": {
      "main": [
        [
          {
            "node": "Merge77",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Se site / bc1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mepear Histórico",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Erro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request6": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Erro1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          },
          {
            "node": "Acompanhar consulta site (Botconversa)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook3": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          },
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Code Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Horário funcionamento": {
      "main": [
        [
          {
            "node": "Verificar Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Horário funcionamento": {
      "main": [
        [
          {
            "node": "Horário funcionamento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fora do horário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Horário funcionamento1": {
      "main": [
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fora do horário": {
      "main": [
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "Informações16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados Básicos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações16": {
      "main": [
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If21": {
      "main": [
        [
          {
            "node": "Informações17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações17": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If22": {
      "main": [
        [
          {
            "node": "Informações18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações18": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If23": {
      "main": [
        [
          {
            "node": "Informações19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações19": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If24": {
      "main": [
        [
          {
            "node": "Informações20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações20": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If25": {
      "main": [
        [
          {
            "node": "Informações21",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações21": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If26": {
      "main": [
        [
          {
            "node": "Informações22",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações22": {
      "main": [
        [
          {
            "node": "If28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If27": {
      "main": [
        [
          {
            "node": "Informações23",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações23": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If28": {
      "main": [
        [
          {
            "node": "Informações24",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações24": {
      "main": [
        [
          {
            "node": "If21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "Informações25",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações25": {
      "main": [
        [
          {
            "node": "If30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If30": {
      "main": [
        [
          {
            "node": "Informações26",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações26": {
      "main": [
        [
          {
            "node": "If27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados N8N",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge77": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot": {
      "main": [
        [
          {
            "node": "Resposta Typebot CNPJ Errado",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot1": {
      "main": [
        [
          {
            "node": "Resposta Typebot Erro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot2": {
      "main": [
        [
          {
            "node": "Resposta Typebot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CONSULTA _ TEXTO": {
      "main": [
        [
          {
            "node": "Obter Logo Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar PDF API1": {
      "main": [
        [
          {
            "node": "IF PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Formatar HTML": {
      "main": [
        [
          {
            "node": "Gerar PDF API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Limit3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PDF": {
      "main": [
        [
          {
            "node": "Limit3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If31": {
      "main": [
        [
          {
            "node": "Code Formatar HTML",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Se base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Erro1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot CNPJ Errado": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot Erro": {
      "main": [
        [
          {
            "node": "typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot": {
      "main": [
        [
          {
            "node": "typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot2": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "If31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados Histórico": {
      "main": [
        [
          {
            "node": "Base44 API - Histórico",
            "type": "main",
            "index": 0
          },
          {
            "node": "Base44 API - Última Consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Dados Histórico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mepear Histórico": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request10": {
      "main": [
        [
          {
            "node": "If32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If32": {
      "main": [
        [
          {
            "node": "Limit4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se base44": {
      "main": [
        [
          {
            "node": "Base44 API - RetornoConsulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta-base44": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito maior ou igual1": {
      "main": [
        [
          {
            "node": "Consulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se site / bc1": {
      "main": [
        [
          {
            "node": "Consulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Site1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito inferior1": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Site1": {
      "main": [
        [
          {
            "node": "Crédito maior ou igual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If33": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - RetornoConsulta": {
      "main": [
        [
          {
            "node": "resposta-base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obter Logo Supabase": {
      "main": [
        [
          {
            "node": "HTTP Request10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta ERRO2": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields10": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Consulta ERRO2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit4": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If42": {
      "main": [
        [
          {
            "node": "Informações3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Informações",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações3": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se URLPDF": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Resposta2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Limit5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Resposta3": {
      "main": [
        [
          {
            "node": "Se URLPDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit5": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Resposta3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook7": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook1": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If34": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Sem credito",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crédito inferior1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Sem credito": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Consulta1": [
      {
        "json": {
          "featurerendapresumida": {
            "renda": "",
            "datareferencia": "",
            "faixa": "",
            "dadospositivos": "",
            "texto": "",
            "tipo": "",
            "codigomensagem": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurealertaobito": {
            "tipo": "",
            "codigomensagem": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurerendamensalestimada": {
            "renda": "",
            "datareferencia": "",
            "faixa": "",
            "dadospositivos": "",
            "texto": "",
            "tipo": "",
            "codigomensagem": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featuresegmentacaomosaic": {
            "atributo": "",
            "segmento": null,
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featureparticipacaosocietaria": [
            {
              "empresa": "ANDERSON DOS SANTOS JORGE ME",
              "cnpj": "14294259000105",
              "participacao": "100,00",
              "uf": "SP",
              "desde": "15/08/2011",
              "dataatual": "28/11/2023",
              "restricao": "S",
              "situacao": "",
              "mensagem": "",
              "CODIGO_FEATURE": ""
            }
          ],
          "featurerecomendacredito": {
            "grauaprovacao": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurerecomendacreditodetalhe": [],
          "featurereindicadorrecuperacaocredito": {
            "feature": "",
            "pontuacao": "",
            "classe": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurereindicerelacionamentomercadosetor": {
            "faixa": "",
            "calculado": "",
            "setor": null,
            "descricaosetor": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurereindicadorpontualidadepagamentos": {
            "feature": "",
            "valor": 0,
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "scorepf": {
            "codigo": "REHM",
            "calculado": "",
            "percentual": "43,70",
            "descricao": "A chance de um consumidor, com score entre 201 e 300, pagar seus compromissos financeiros nos próximos 6 meses é de 56,30%.",
            "pontuacao": "000277",
            "risco": "43,70",
            "restricao": "",
            "mensagem": "A chance de um consumidor, com score entre 201 e 300, pagar seus compromissos financeiros nos próximos 6 meses é de 56,30%.",
            "CODIGO_FEATURE": "REFS"
          },
          "informacoescadastrais": {
            "Cargo": null,
            "Cpf": null,
            "CpfMae": null,
            "DataNascimento": null,
            "DataObito": null,
            "Escolaridade": null,
            "EstadoCivil": null,
            "FaixaRendaPresumida": null,
            "Idade": null,
            "ListaEmails": null,
            "ListaParentes": null,
            "ListaSociedades": null,
            "ListaSociosEmpresas": null,
            "ListaVeiculos": null,
            "ListaVizinhos": null,
            "Mae": null,
            "Nacionalidade": null,
            "Nome": null,
            "Profissao": null,
            "RendaPresumida": null,
            "Rg": null,
            "Sexo": null,
            "Signo": null,
            "UfRg": null,
            "Titulo": null,
            "SituacaoTitulo": null,
            "Enderecos": null,
            "SituacaoCadastral": null,
            "Telefones": null,
            "prime": null,
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "scorebancos": {
            "codigo": "",
            "calculado": "",
            "percentual": "",
            "descricao": "",
            "pontuacao": "",
            "risco": null,
            "restricao": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "detalhenegativo": {
            "detalhe": {
              "dividasresumo": {
                "totalocorrencias": "0",
                "dataocorrenciaantiga": "",
                "dataocorrenciarecente": "",
                "valortotal": ""
              },
              "acoesjudiciaisresumo": {
                "totalocorrencias": "0",
                "dataocorrenciaantiga": "",
                "dataocorrenciarecente": "",
                "valortotal": ""
              },
              "ccfresumo": {
                "totalocorrencias": "0",
                "dataocorrenciaantiga": "",
                "dataocorrenciarecente": "",
                "valortotal": ""
              },
              "protestosresumo": {
                "totalocorrencias": "0",
                "dataocorrenciaantiga": "",
                "dataocorrenciarecente": "",
                "valortotal": ""
              },
              "dividas": [],
              "acoesjudiciais": [],
              "ccf": [],
              "protestos": []
            },
            "prime": {
              "produto": "",
              "codigo": "",
              "mensagem": "",
              "erro": "false",
              "saldo": "0.00",
              "protocolo": "",
              "versao": "1.12.2409.60",
              "datahora": "09/09/2024 10:35:32",
              "documentoconsulta": "",
              "tempoconsulta": 0,
              "tempo": 0,
              "tipo": 0,
              "cliente": "",
              "errotipo": 0,
              "registrobase": {
                "codigo": null,
                "features": null,
                "composto": null,
                "erro": null
              }
            }
          },
          "pendenciasfinanceirasrefindetalhe": [
            {
              "dataocorrencia": "10/04/2023",
              "modalidade": "CRED CARTAO",
              "avalista": "N",
              "tipomoeda": "R$",
              "valor": "990,76",
              "contrato": "MANCC3267627788",
              "origem": "C6 BANK",
              "siglaembratel": "",
              "mensagem": "",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "I",
              "informante": ""
            },
            {
              "dataocorrencia": "09/01/2022",
              "modalidade": "CRED CARTAO",
              "avalista": "N",
              "tipomoeda": "R$",
              "valor": "939,86",
              "contrato": "002781068160000",
              "origem": "ITAU HOLDING",
              "siglaembratel": "",
              "mensagem": "",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "I",
              "informante": ""
            },
            {
              "dataocorrencia": "13/12/2021",
              "modalidade": "FINANCIAMENT",
              "avalista": "N",
              "tipomoeda": "R$",
              "valor": "3077,24",
              "contrato": "000001872649932",
              "origem": "BANCO ITAU UNIBANCO",
              "siglaembratel": "",
              "mensagem": "",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "I",
              "informante": ""
            },
            {
              "dataocorrencia": "12/09/2021",
              "modalidade": "FINANCIAMENT",
              "avalista": "N",
              "tipomoeda": "R$",
              "valor": "19504,00",
              "contrato": "12015000229668",
              "origem": "BANCO VOTORANTIM",
              "siglaembratel": "",
              "mensagem": "",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "I",
              "informante": ""
            }
          ],
          "pendenciasfinanceiraspefindetalhe": [
            {
              "dataocorrencia": "10/12/2023",
              "modalidade": "EMPRES CONTA",
              "avalista": "N",
              "tipomoeda": "R$",
              "valor": "156,06",
              "contrato": "20237106",
              "origem": "PAGSEGURO INTERNET S",
              "siglaembratel": "",
              "mensagem": "",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "V",
              "informante": ""
            },
            {
              "dataocorrencia": "27/12/2022",
              "modalidade": "DUPLICATA",
              "avalista": "N",
              "tipomoeda": "R$",
              "valor": "2109,59",
              "contrato": "ACUBT 48721",
              "origem": "LOCALIZA",
              "siglaembratel": "",
              "mensagem": "",
              "subjudice": "",
              "mensagemsubjudice": "",
              "tipoanotacao": "V",
              "informante": ""
            },
            {
              "dataocorrencia": "14/12/2022",
              "modalidade": "OUTRAS OPER",
              "avalista": "N",
              "tipomoeda": "R$",
              "valor": "124,94",
              "contrato": "AD441388001",
              "origem": "COMPANHIA DE LOCACAO",
              "siglaembratel": "BHE",
              "mensagem": "",
              "subjudice": "",
              "mensagemsubjudice": "",
              "tipoanotacao": "V",
              "informante": ""
            },
            {
              "dataocorrencia": "05/03/2022",
              "modalidade": "OUTRAS OPER",
              "avalista": "N",
              "tipomoeda": "R$",
              "valor": "124,94",
              "contrato": "4610327001",
              "origem": "COMPANHIA DE LOCACAO",
              "siglaembratel": "BHE",
              "mensagem": "",
              "subjudice": "",
              "mensagemsubjudice": "",
              "tipoanotacao": "V",
              "informante": ""
            },
            {
              "dataocorrencia": "10/02/2022",
              "modalidade": "OUTRAS OPER",
              "avalista": "N",
              "tipomoeda": "R$",
              "valor": "124,94",
              "contrato": "4453829001",
              "origem": "COMPANHIA DE LOCACAO",
              "siglaembratel": "BHE",
              "mensagem": "",
              "subjudice": "",
              "mensagemsubjudice": "",
              "tipoanotacao": "V",
              "informante": ""
            }
          ],
          "pendenciasfinanceirasdividavencidadetalhe": [
            {
              "dataocorrencia": "",
              "modalidade": "",
              "avalista": "",
              "tipomoeda": "",
              "valor": "",
              "contrato": "",
              "origem": "",
              "siglaembratel": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS",
              "subjudice": "",
              "mensagemsubjudice": "",
              "tipoanotacao": "",
              "informante": ""
            }
          ],
          "pendenciasfinanceirasrefinresumo": {
            "totalocorrencias": "4",
            "dataocorrenciaantiga": "09/2021",
            "dataocorrenciarecente": "04/2023",
            "valortotal": "24511,86",
            "tipoanotacao": "I",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "pendenciasfinanceiraspefinresumo": {
            "totalocorrencias": "59",
            "dataocorrenciaantiga": "04/2020",
            "dataocorrenciarecente": "12/2023",
            "valortotal": "56381,63",
            "tipoanotacao": "V",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "pendenciasfinanceirasdividavencidaresumo": {
            "totalocorrencias": "nada consta",
            "dataocorrenciaantiga": "-",
            "dataocorrenciarecente": "-",
            "valortotal": "-",
            "tipoanotacao": "5",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "pendenciasresumo": {
            "totalocorrencias": "0",
            "dataocorrenciaantiga": "",
            "dataocorrenciarecente": "",
            "valortotal": "",
            "tipoanotacao": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "pendencias": [],
          "restricoesresumo": {
            "totalocorrencias": "0",
            "dataocorrenciaantiga": "",
            "dataocorrenciarecente": "",
            "valortotal": "",
            "tipoanotacao": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "restricoes": [],
          "pendenciascomerciais": {
            "spc_quantidade": null,
            "spc_data_ultima_ocorrencia": null,
            "spc_valor_total": null,
            "spc_detalhe": [],
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "protestoboavista": {
            "protestosboavistaresumo": {
              "totalocorrencias": "0",
              "dataocorrenciaantiga": "",
              "dataocorrenciarecente": "",
              "valortotal": ""
            },
            "protestosboavista": []
          },
          "protestosdetalhe": [
            {
              "dataocorrencia": "21/03/2024",
              "tipomoeda": "R$",
              "valor": "1346,65",
              "cartorio": "01",
              "descricao": "",
              "endereco": "",
              "telefone": "",
              "cidade": "UBATUBA",
              "uf": "SP",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "A",
              "contrato": "0390176864",
              "quantidade": "0",
              "mensagem": "",
              "CODIGO_FEATURE": ""
            },
            {
              "dataocorrencia": "21/03/2024",
              "tipomoeda": "R$",
              "valor": "846,81",
              "cartorio": "01",
              "descricao": "",
              "endereco": "",
              "telefone": "",
              "cidade": "UBATUBA",
              "uf": "SP",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "A",
              "contrato": "0390176865",
              "quantidade": "0",
              "mensagem": "",
              "CODIGO_FEATURE": ""
            },
            {
              "dataocorrencia": "06/12/2023",
              "tipomoeda": "R$",
              "valor": "1889,38",
              "cartorio": "01",
              "descricao": "",
              "endereco": "",
              "telefone": "",
              "cidade": "UBATUBA",
              "uf": "SP",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "A",
              "contrato": "0382365264",
              "quantidade": "0",
              "mensagem": "",
              "CODIGO_FEATURE": ""
            },
            {
              "dataocorrencia": "18/05/2023",
              "tipomoeda": "R$",
              "valor": "390,19",
              "cartorio": "01",
              "descricao": "",
              "endereco": "",
              "telefone": "",
              "cidade": "UBATUBA",
              "uf": "SP",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "A",
              "contrato": "0370680940",
              "quantidade": "0",
              "mensagem": "",
              "CODIGO_FEATURE": ""
            },
            {
              "dataocorrencia": "08/05/2023",
              "tipomoeda": "R$",
              "valor": "351,41",
              "cartorio": "01",
              "descricao": "",
              "endereco": "",
              "telefone": "",
              "cidade": "UBATUBA",
              "uf": "SP",
              "subjudice": "N",
              "mensagemsubjudice": "",
              "tipoanotacao": "A",
              "contrato": "0370680865",
              "quantidade": "0",
              "mensagem": "",
              "CODIGO_FEATURE": ""
            }
          ],
          "protestosresumo": {
            "totalocorrencias": "13",
            "dataocorrenciaantiga": "01/2021",
            "dataocorrenciarecente": "03/2024",
            "valortotal": "21017,33",
            "moeda": "R$",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "protestosdetalheuf": {
            "documento": "",
            "num_protestos": 0,
            "registro_maisantigo": "",
            "ultimo_registro": "",
            "valor_total": "0,00",
            "data_consulta": "",
            "nome": null,
            "data": null,
            "data_situacao": null,
            "descricao_situacao": null,
            "dados": [],
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "acoesjudiciaisdetalhe": [],
          "acoesjudiciaisresumo": {
            "datainicial": "-",
            "datafinal": "-",
            "quantidade": "nada consta",
            "valor": "-",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "falenciasconcordatasdetalhe": [],
          "falenciasconcordatasresumo": {
            "datainicial": "",
            "datafinal": "",
            "quantidade": "",
            "valor": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "insucessoempresarialdetalhe": [],
          "insucessoempresarialresumo": {
            "datainicial": "",
            "datafinal": "",
            "quantidade": "",
            "valor": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurescorealertaidentidade": {
            "codigo": "",
            "mensagem1": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featureindicerelacionamentomercado": {
            "faixa": "",
            "descricaofaixa": "",
            "periodo": "",
            "calculado": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurelimitecredito": {
            "valorlimite": "",
            "observacao": "",
            "texto": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurelimitecreditodetalhe": [],
          "featurelocalizador": [],
          "featuregastoestimado": {
            "gasto": "",
            "tipo": "",
            "codigomensagem": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featureaprovareprova": {
            "pessoa": "",
            "documento": "",
            "score": "",
            "aprova": "",
            "texto": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "endividamentobancario": [],
          "dadosbasicos": {
            "nome": "ANDERSON DOS SANTOS JORGE",
            "data": "25/06/1983",
            "codigosituacao": "2",
            "datasituacao": "04/05/2024",
            "descricaosituacao": "regular",
            "nomemae_fantasia": "MARIA JUSILENE DOS SANTOS JORGE",
            "status": "76",
            "valortotalocorrencias": "101910,82",
            "dataultimaocorrencia": "03/2024"
          },
          "documentosroubados": [
            {
              "numeromensagem": "",
              "totalmensagem": "",
              "tipodocumento": "",
              "numerodocumento": "",
              "motivoocorrencia": "",
              "dataocorrencia": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS"
            }
          ],
          "documentosroubadoscontato": {
            "ddd1": "",
            "numero1": "",
            "ddd2": "",
            "numero2": "",
            "ddd3": "",
            "numero3": ""
          },
          "pendenciasinternasdetalhe": [
            {
              "dataocorrencia": "",
              "modalidade": "",
              "avalista": "",
              "tipomoeda": "",
              "valor": "",
              "contrato": "",
              "origem": "",
              "siglaembratel": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS"
            }
          ],
          "pendenciasinternasresumo": {
            "totalocorrencias": "nada consta",
            "dataocorrenciaantiga": "-",
            "dataocorrenciarecente": "-",
            "valortotal": "-",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "chequessemfundodetalhe": [
            {
              "dataocorrencia": "",
              "numerocheque": "",
              "alinea": "",
              "quantidade": "",
              "valor": "",
              "numerobanco": "",
              "nomebanco": "",
              "numeroagencia": "",
              "cidadeagencia": "",
              "ufagencia": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS"
            }
          ],
          "chequessemfundoresumo": {
            "totalocorrencias": "nada consta",
            "dataocorrenciaantiga": "-",
            "dataocorrenciarecente": "-",
            "numerobanco": "-",
            "agencia": "-",
            "nomefantasiabanco": "-",
            "valortotal": "-"
          },
          "outrasocorrenciasdetalhe": [],
          "outrasocorrenciasresumo": {
            "totalocorrencias": "0",
            "dataocorrenciaantiga": "",
            "dataocorrenciarecente": "",
            "valortotal": ""
          },
          "featurealertacheques": [],
          "featurealertachequesdetalhe": [],
          "agenciabancaria": {
            "nome": "",
            "dataultimaatualizacao": "",
            "ddd": "",
            "numerotelefone": "",
            "dddfax": "",
            "numerofax": "",
            "endereco": "",
            "cidade": "",
            "uf": "",
            "mensagem": ""
          },
          "enderecocep": {
            "endereco": "",
            "bairro": "",
            "cidade": "",
            "uf": "",
            "cepgenerico": "",
            "mensagem": ""
          },
          "enderecotelefone": {
            "documentoconfere": "",
            "nomeassinante": "",
            "tipodocumentoassinante": "",
            "classeassinante": "",
            "datainstalacao": "",
            "logradouro": "",
            "bairro": "",
            "cidade": "",
            "cep": "",
            "indicadorpesquisa": "",
            "mensagem": ""
          },
          "ultimostelefonesconsultados": {
            "ddd1": "",
            "telefone1": "",
            "ddd2": "",
            "telefone2": "",
            "ddd3": "",
            "telefone3": "",
            "ddd4": "",
            "telefone4": "",
            "ddd5": "",
            "telefone5": "",
            "mensagem": ""
          },
          "registroconsultasinterno": {
            "emissaoprimeirocheque": "",
            "emissaoultimocheque": "",
            "totalchequesavista15dias": "",
            "totalchequesprazo30dias": "",
            "totalchequesprazo31a60dias": "",
            "totalchequesprazo61a90dias": "",
            "totalchequesprazo": "",
            "mensagem": ""
          },
          "registroconsultasmercado": {
            "dataemissaoprimeiro": "",
            "dataemissaoultimo": "",
            "totalchequesavista15dias": "",
            "totalchequesprazo30dias": "",
            "totalchequesprazo31a60dias": "",
            "totalchequesprazo61a90dias": "",
            "totalchequesprazo": ""
          },
          "registroconsultascomercial": {
            "nomeempresa1": "",
            "dataconsulta1": "",
            "nomeempresa2": "",
            "dataconsulta2": "",
            "nomeempresa3": "",
            "dataconsulta3": ""
          },
          "registroconsultassemcheque": {
            "totalchequesavista15dias": "003",
            "totalchequesprazo16a30dias": "000",
            "totalchequesprazo31a60dias": "028",
            "totalchequesprazo61a90dias": "000",
            "mensagem": ""
          },
          "featureccf": {
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "consultasresumomes": [],
          "consultasresumo": {
            "consultacreditototal": 0,
            "dataatual": "",
            "consultacreditoatual": 0,
            "consultacreditomes1": 0,
            "consultacreditomes2": 0,
            "consultacreditomes3": 0,
            "consultachequetotal": 0,
            "consultachequeatual": 0,
            "consultachequemes1": 0,
            "consultachequemes2": 0,
            "consultachequemes3": 0,
            "dataultimaconsulta": "",
            "dataprimeiraconsulta": null,
            "dataficad": ""
          },
          "consultasdetalhe": [],
          "alertas": {
            "quantidade": "0",
            "ocorrencias": []
          },
          "prime": {
            "produto": "Pendência Financeira (PF)",
            "codigo": "967",
            "mensagem": "",
            "erro": "false",
            "saldo": "999.99",
            "protocolo": "v6-20240909-MJ1-32524.61",
            "versao": "1.12.2409.60",
            "datahora": "09/09/2024 10:35:32",
            "documentoconsulta": "32676277880",
            "tempoconsulta": 0,
            "tempo": 0,
            "tipo": 1,
            "cliente": "40126612000140",
            "errotipo": 0,
            "registrobase": {
              "codigo": null,
              "features": null,
              "composto": null,
              "erro": null
            }
          }
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "n8n.redequeroimoveis.com",
            "content-length": "252",
            "sentry-trace": "ad871827088047b4a92e3cd8f4ff8f90-82c7c0de1d08ac24-0",
            "baggage": "sentry-trace_id=ad871827088047b4a92e3cd8f4ff8f90,sentry-environment=production_new,sentry-release=05db53e5ef28d80a44c0d17b3d9a7efe15fd78c8,sentry-public_key=af3c6636fa6e4f89948eaa4e575b3286,sentry-transaction=/api/v1/blocks_integration/test_request/,sentry-sample_rate=0.000625,sentry-sampled=false",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "content-type": "application/json"
          },
          "params": {},
          "query": {},
          "body": {
            "CPF": "22742922000107",
            "Webhook": "https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/NBbPVNepDSWM/",
            "Telefone": "553799781110",
            "URL_LogoPDF": "11HQEpkA-HEprYtECt9loSst9Jdm3huIX1KfXnsSX_30",
            "Tipo consulta": "CNPJ Completa"
          },
          "webhookUrl": "http://localhost:5678/webhook-test/dividas-cnpj_2-1",
          "executionMode": "test"
        }
      }
    ],
    "Consulta": [
      {
        "json": {
          "painelcontrolepositivo": {},
          "porte": "",
          "atividadeprincipal": "",
          "capitalsocial": "",
          "featurefaturamentopresumido": {
            "valor": "",
            "datareferencia": null,
            "faixa": null,
            "porte": null,
            "dadospositivos": null,
            "faturamentomensalpresumido": null,
            "faturamentoanualpresumido": null,
            "faturamentoanualpresumidodescricao": null,
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featuresociosacionistas": [],
          "featureadministradores": [],
          "featureparticipacoessociosempresas": [],
          "featureparticipacaoempresas": [],
          "scoreempresa60": {
            "dataconsulta": null,
            "prinad": "",
            "fator": "",
            "classe": "",
            "descricao": "",
            "risco": "",
            "recomendacao": "",
            "mensagemscore": "",
            "probabilidade": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "comportamentopagamentos": {
            "pagamentosematraso": {
              "percentualavista": "",
              "valoravista": "",
              "percentual815": "",
              "valor815": "",
              "percentual1630": "",
              "valor1630": "",
              "percentual3160": "",
              "valor3160": "",
              "percentualacima60": "",
              "valoracima60": "",
              "percentualtotal": "",
              "valortotal": "",
              "prazomedioatraso": ""
            },
            "vencimentosfuturo": {
              "percentual10": "",
              "valor10": "",
              "percentual1130": "",
              "valor1130": "",
              "percentual3145": "",
              "valor3145": "",
              "percentual4660": "",
              "valor4660": "",
              "percentualacima60": "",
              "valoracima60": "",
              "percentualtotal": "",
              "valortotal": ""
            },
            "datareferencia": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "informacoescadastrais": {
            "CnaePrincipal": null,
            "CnaeSecundario": null,
            "Cnpj": null,
            "DataFundacao": null,
            "FaixaDeQuantidadeDeFuncionarios": null,
            "FaturamentoPresumido": null,
            "ListaEmails": null,
            "ListaQuadroSocial": null,
            "NaturezaJuridica": null,
            "NomeFantasia": null,
            "PorteEmpresa": null,
            "RazaoSocial": null,
            "Segmento": null,
            "SetorEconomico": null,
            "Enderecos": null,
            "SituacaoCadastral": null,
            "Telefones": null,
            "prime": null,
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "scorebancos": {
            "cpf": "",
            "motivo1": "",
            "motivo2": "",
            "motivo3": "",
            "motivo4": "",
            "dataconsulta": null,
            "prinad": "",
            "fator": "",
            "classe": "",
            "descricao": "",
            "risco": "",
            "recomendacao": "",
            "mensagemscore": "",
            "probabilidade": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "detalhenegativo": {
            "detalhe": {
              "dividasresumo": {
                "totalocorrencias": "0",
                "dataocorrenciaantiga": "",
                "dataocorrenciarecente": "",
                "valortotal": ""
              },
              "acoesjudiciaisresumo": {
                "totalocorrencias": "0",
                "dataocorrenciaantiga": "",
                "dataocorrenciarecente": "",
                "valortotal": ""
              },
              "ccfresumo": {
                "totalocorrencias": "0",
                "dataocorrenciaantiga": "",
                "dataocorrenciarecente": "",
                "valortotal": ""
              },
              "protestosresumo": {
                "totalocorrencias": "0",
                "dataocorrenciaantiga": "",
                "dataocorrenciarecente": "",
                "valortotal": ""
              },
              "dividas": [],
              "acoesjudiciais": [],
              "ccf": [],
              "protestos": []
            },
            "prime": {
              "produto": "",
              "codigo": "",
              "mensagem": "",
              "pep": "false",
              "erro": "false",
              "saldo": "0.00",
              "protocolo": "",
              "versao": "1.13.2506.111",
              "datahora": "12/06/2025 14:13:24",
              "documentoconsulta": "",
              "tempoconsulta": 0,
              "tempo": 0,
              "tipo": 0,
              "cliente": "",
              "errotipo": 0,
              "registrobase": {
                "codigo": null,
                "features": null,
                "composto": null,
                "erro": null
              },
              "referencia": ""
            }
          },
          "pendenciasfinanceirasrefindetalhe": [
            {
              "dataocorrencia": "",
              "modalidade": "",
              "avalista": "",
              "tipomoeda": "",
              "valor": "",
              "contrato": "",
              "origem": "",
              "siglaembratel": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS",
              "subjudice": "",
              "mensagemsubjudice": "",
              "tipoanotacao": "",
              "informante": "",
              "uf": "",
              "cidade": ""
            }
          ],
          "pendenciasfinanceiraspefindetalhe": [
            {
              "dataocorrencia": "01/10/2020",
              "modalidade": "FI",
              "avalista": "C",
              "tipomoeda": "R$",
              "valor": "3360,12",
              "contrato": "19540042843455276382",
              "origem": "BANCO BRADESCO S/A",
              "siglaembratel": "",
              "mensagem": "",
              "subjudice": "",
              "mensagemsubjudice": "",
              "tipoanotacao": "",
              "informante": "",
              "uf": "",
              "cidade": ""
            }
          ],
          "pendenciasfinanceirasdividavencidadetalhe": [
            {
              "dataocorrencia": "",
              "modalidade": "",
              "avalista": "",
              "tipomoeda": "",
              "valor": "",
              "contrato": "",
              "origem": "",
              "siglaembratel": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS",
              "subjudice": "",
              "mensagemsubjudice": "",
              "tipoanotacao": "",
              "informante": "",
              "uf": "",
              "cidade": ""
            }
          ],
          "pendenciasfinanceirasrefinresumo": {
            "qtdetotalcomprador": "",
            "qtdetotalavalista": "",
            "valorprimeira": "",
            "datamaiorvalor": "",
            "valormaior": "",
            "totalocorrencias": "nada consta",
            "dataocorrenciaantiga": "-",
            "dataocorrenciarecente": "-",
            "valortotal": "-",
            "tipoanotacao": "I",
            "periodoinicial": "",
            "periodofinal": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "pendenciasfinanceiraspefinresumo": {
            "qtdetotalcomprador": "",
            "qtdetotalavalista": "",
            "valorprimeira": "",
            "datamaiorvalor": "",
            "valormaior": "",
            "totalocorrencias": "1",
            "dataocorrenciaantiga": "01/10/2020",
            "dataocorrenciarecente": "01/10/2020",
            "valortotal": "3360,12",
            "tipoanotacao": "V",
            "periodoinicial": "",
            "periodofinal": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "pendenciasfinanceirasdividavencidaresumo": {
            "qtdetotalcomprador": "",
            "qtdetotalavalista": "",
            "valorprimeira": "",
            "datamaiorvalor": "",
            "valormaior": "",
            "totalocorrencias": "nada consta",
            "dataocorrenciaantiga": "-",
            "dataocorrenciarecente": "-",
            "valortotal": "-",
            "tipoanotacao": "5",
            "periodoinicial": "",
            "periodofinal": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "pendenciasresumo": {
            "qtdetotalcomprador": "",
            "qtdetotalavalista": "",
            "valorprimeira": "",
            "datamaiorvalor": "",
            "valormaior": "",
            "totalocorrencias": "0",
            "dataocorrenciaantiga": "",
            "dataocorrenciarecente": "",
            "valortotal": "",
            "tipoanotacao": "",
            "periodoinicial": "",
            "periodofinal": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "pendencias": [],
          "restricoesresumo": {
            "qtdetotalcomprador": "",
            "qtdetotalavalista": "",
            "valorprimeira": "",
            "datamaiorvalor": "",
            "valormaior": "",
            "totalocorrencias": "0",
            "dataocorrenciaantiga": "",
            "dataocorrenciarecente": "",
            "valortotal": "",
            "tipoanotacao": "",
            "periodoinicial": "",
            "periodofinal": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "restricoes": [],
          "pendenciascomerciais": {
            "spc_quantidade": null,
            "spc_data_ultima_ocorrencia": null,
            "spc_valor_total": null,
            "spc_detalhe": [],
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "protestoboavista": {
            "protestosboavistaresumo": {
              "totalocorrencias": "0",
              "dataocorrenciaantiga": "",
              "dataocorrenciarecente": "",
              "valortotal": ""
            },
            "protestosboavista": []
          },
          "protestosdetalhe": [
            {
              "dataocorrencia": "",
              "tipomoeda": "",
              "valor": "",
              "cartorio": "",
              "descricao": "",
              "endereco": "",
              "telefone": "",
              "cidade": "",
              "uf": "",
              "subjudice": "",
              "mensagemsubjudice": "",
              "tipoanotacao": "",
              "contrato": "",
              "quantidade": "0",
              "mensagem": "NAO CONSTAM OCORRENCIAS",
              "CODIGO_FEATURE": ""
            }
          ],
          "protestosresumo": {
            "totalocorrencias": "nada consta",
            "dataocorrenciaantiga": "-",
            "dataocorrenciarecente": "-",
            "valortotal": "-",
            "moeda": "-",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "protestosdetalheuf": {
            "documento": "",
            "num_protestos": 0,
            "registro_maisantigo": "",
            "ultimo_registro": "",
            "valor_total": "0,00",
            "data_consulta": "",
            "nome": null,
            "data": null,
            "data_situacao": null,
            "descricao_situacao": null,
            "dados": [],
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "acoesjudiciaisdetalhe": [
            {
              "dataocorrencia": "",
              "vara": "",
              "distribuidor": "",
              "natureza": "",
              "valor": "",
              "praca": "",
              "uf": "",
              "cidade": "",
              "principal": "",
              "subjudice": "",
              "filial": "",
              "digito": "",
              "dataanotacao": "",
              "horaanotacao": "",
              "descricaonatureza": "",
              "pracasubjudice": "",
              "distribuidorsubjudice": "",
              "varasubjudice": "",
              "datasubjudice": "",
              "processosubjudice": "",
              "numeroprocesso": "",
              "mensagemsubjudice": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS",
              "CODIGO_FEATURE": ""
            }
          ],
          "acoesjudiciaisresumo": {
            "datainicial": "-",
            "datafinal": "-",
            "quantidade": "nada consta",
            "valor": "-",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "falenciasconcordatasdetalhe": [
            {
              "cnpj": null,
              "empresa": null,
              "tipoocorrencia": null,
              "dataocorrencia": "",
              "natureza": "",
              "vara": "",
              "praca": "",
              "uf": "",
              "cidade": "",
              "filial": "",
              "digito": "",
              "dataanotacao": "",
              "horaanotacao": "",
              "descricaonatureza": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS",
              "CODIGO_FEATURE": ""
            }
          ],
          "falenciasconcordatasresumo": {
            "datainicial": "-",
            "datafinal": "-",
            "quantidade": "nada consta",
            "valor": "-",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "insucessoempresarialdetalhe": [
            {
              "dataocorrencia": "",
              "natureza": "",
              "qualificacao": "",
              "vara": "",
              "cnpj": "",
              "nomeempresa": "",
              "Filial": "",
              "digito": "",
              "dataanotacao": "",
              "horaanotacao": "",
              "descricaonatureza": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS",
              "CODIGO_FEATURE": ""
            }
          ],
          "insucessoempresarialresumo": {
            "datainicial": "-",
            "datafinal": "-",
            "quantidade": "nada consta",
            "valor": "-",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurelimitecredito": {
            "valorlimite": "",
            "observacao": "",
            "texto": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featurelimitecreditodetalhe": [],
          "featurelocalizador": [],
          "featuregastoestimado": {
            "gasto": "",
            "tipo": "",
            "codigomensagem": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "featureaprovareprova": {
            "pessoa": "",
            "documento": "",
            "score": "",
            "aprova": "",
            "texto": "",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "endividamentobancario": [],
          "dadosbasicos": {
            "nome": "ARTHUR BALDIOTTI MENDONCA ALVARES 11383223696",
            "data": "29/06/2015",
            "codigosituacao": "",
            "datasituacao": "",
            "descricaosituacao": "baixado",
            "nomemae_fantasia": "TIO SAM MULTIMARCAS",
            "status": "1",
            "valortotalocorrencias": "3360,12",
            "dataultimaocorrencia": ""
          },
          "documentosroubados": [
            {
              "numeromensagem": "",
              "totalmensagem": "",
              "tipodocumento": "",
              "numerodocumento": "",
              "motivoocorrencia": "",
              "dataocorrencia": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS"
            }
          ],
          "documentosroubadoscontato": {
            "ddd1": "",
            "numero1": "",
            "ddd2": "",
            "numero2": "",
            "ddd3": "",
            "numero3": ""
          },
          "pendenciasinternasdetalhe": [
            {
              "dataocorrencia": "",
              "modalidade": "",
              "avalista": "",
              "tipomoeda": "",
              "valor": "",
              "contrato": "",
              "origem": "",
              "siglaembratel": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS"
            }
          ],
          "pendenciasinternasresumo": {
            "totalocorrencias": "nada consta",
            "dataocorrenciaantiga": "-",
            "dataocorrenciarecente": "-",
            "valortotal": "-",
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "chequessemfundodetalhe": [
            {
              "dataocorrencia": "",
              "numerocheque": "",
              "alinea": "",
              "quantidade": "",
              "valor": "",
              "numerobanco": "",
              "nomebanco": "",
              "numeroagencia": "",
              "cidadeagencia": "",
              "ufagencia": "",
              "mensagem": "NAO CONSTAM OCORRENCIAS"
            }
          ],
          "chequessemfundoresumo": {
            "totalocorrencias": "nada consta",
            "dataocorrenciaantiga": "-",
            "dataocorrenciarecente": "-",
            "numerobanco": "-",
            "agencia": "-",
            "nomefantasiabanco": "-",
            "valortotal": "-"
          },
          "outrasocorrenciasdetalhe": [
            {
              "CodigoBanco": "",
              "NumeroAgencia": "",
              "NumeroContaCorrente": "",
              "NumeroChequeInicial": "",
              "NumeroChequeFinal": "",
              "Motivo": "",
              "DataCadastro": "",
              "CodigoFonte": "",
              "Mensagem": "NAO CONSTAM OCORRENCIAS"
            }
          ],
          "outrasocorrenciasresumo": {
            "totalocorrencias": "nada consta",
            "dataocorrenciaantiga": "-",
            "dataocorrenciarecente": "-",
            "valortotal": "-"
          },
          "featurealertacheques": [],
          "featurealertachequesdetalhe": [],
          "agenciabancaria": {
            "nome": "",
            "dataultimaatualizacao": "",
            "ddd": "",
            "numerotelefone": "",
            "dddfax": "",
            "numerofax": "",
            "endereco": "",
            "cidade": "",
            "uf": "",
            "mensagem": ""
          },
          "enderecocep": {
            "endereco": "",
            "bairro": "",
            "cidade": "",
            "uf": "",
            "cepgenerico": "",
            "mensagem": ""
          },
          "enderecotelefone": {
            "documentoconfere": "",
            "nomeassinante": "",
            "tipodocumentoassinante": "",
            "classeassinante": "",
            "datainstalacao": "",
            "logradouro": "",
            "bairro": "",
            "cidade": "",
            "cep": "",
            "indicadorpesquisa": "",
            "mensagem": ""
          },
          "ultimostelefonesconsultados": {
            "ddd1": "",
            "telefone1": "",
            "ddd2": "",
            "telefone2": "",
            "ddd3": "",
            "telefone3": "",
            "ddd4": "",
            "telefone4": "",
            "ddd5": "",
            "telefone5": "",
            "mensagem": ""
          },
          "registroconsultasinterno": {
            "emissaoprimeirocheque": "",
            "emissaoultimocheque": "",
            "totalchequesavista15dias": "",
            "totalchequesprazo30dias": "",
            "totalchequesprazo31a60dias": "",
            "totalchequesprazo61a90dias": "",
            "totalchequesprazo": "",
            "mensagem": ""
          },
          "registroconsultasmercado": {
            "dataemissaoprimeiro": "",
            "dataemissaoultimo": "",
            "totalchequesavista15dias": "",
            "totalchequesprazo30dias": "",
            "totalchequesprazo31a60dias": "",
            "totalchequesprazo61a90dias": "",
            "totalchequesprazo": ""
          },
          "registroconsultascomercial": {
            "nomeempresa1": "",
            "dataconsulta1": "",
            "nomeempresa2": "",
            "dataconsulta2": "",
            "nomeempresa3": "",
            "dataconsulta3": ""
          },
          "registroconsultassemcheque": {
            "totalchequesavista15dias": "",
            "totalchequesprazo16a30dias": "",
            "totalchequesprazo31a60dias": "",
            "totalchequesprazo61a90dias": "",
            "mensagem": ""
          },
          "featureccf": {
            "mensagem": "",
            "CODIGO_FEATURE": ""
          },
          "consultasresumomes": [],
          "consultasresumo": {
            "consultacreditototal": 17,
            "dataatual": "",
            "consultacreditoatual": 0,
            "consultacreditomes1": 0,
            "consultacreditomes2": 0,
            "consultacreditomes3": 0,
            "consultachequetotal": 0,
            "consultachequeatual": 0,
            "consultachequemes1": 0,
            "consultachequemes2": 0,
            "consultachequemes3": 0,
            "dataultimaconsulta": "12/06/2025",
            "dataprimeiraconsulta": "09/09/2024",
            "dataficad": ""
          },
          "consultasdetalhe": [
            {
              "cnpj": "",
              "data": "12/06/2025",
              "nome": "SP-SPO/SELLOUS PAY TECNOLOGIA E GEST",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "27/03/2025",
              "nome": "ANALISE DE CREDITO",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "21/03/2025",
              "nome": "ANALISE DE CREDITO",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "30/01/2025",
              "nome": "WIN SERVICOS E CREDITOS",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "20/01/2025",
              "nome": "WIN SERVICOS E CREDITOS",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "03/12/2024",
              "nome": "SP-SPO/SELLOUS PAY TECNOLOGIA E GEST",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "13/11/2024",
              "nome": "WIN SERVICOS E CREDITOS",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "08/11/2024",
              "nome": "SP-SPO/SELLOUS PAY TECNOLOGIA E GEST",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "01/11/2024",
              "nome": "SP-SPO/SELLOUS PAY TECNOLOGIA E GEST",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "31/10/2024",
              "nome": "WIN SERVICOS E CREDITOS",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "30/10/2024",
              "nome": "SP-SPO/SELLOUS PAY TECNOLOGIA E GEST",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "30/10/2024",
              "nome": "WIN SERVICOS E CREDITOS",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "27/09/2024",
              "nome": "SP-SPO/SELLOUS PAY TECNOLOGIA E GEST",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "16/09/2024",
              "nome": "SP-SPO/SUC SISTEMA UNIFICADO DE CONS",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "09/09/2024",
              "nome": "SP-SPO/SELLOUS PAY TECNOLOGIA E GEST",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "09/09/2024",
              "nome": "SP-SPO/SELLOUS PAY TECNOLOGIA E GEST",
              "quantidadedia": 0
            },
            {
              "cnpj": "",
              "data": "09/09/2024",
              "nome": "SP-SPO/SELLOUS PAY TECNOLOGIA E GEST",
              "quantidadedia": 0
            }
          ],
          "alertas": {
            "quantidade": "0",
            "ocorrencias": []
          },
          "prime": {
            "produto": "Restrição Financeira (PJ)",
            "codigo": "758",
            "mensagem": "",
            "pep": "false",
            "erro": "false",
            "saldo": "106.2200",
            "protocolo": "v6-20250612-U6Z-24372.024",
            "versao": "1.13.2506.111",
            "datahora": "12/06/2025 14:13:24",
            "documentoconsulta": "22742922000107",
            "tempoconsulta": 0,
            "tempo": 0,
            "tipo": 2,
            "cliente": "40126612000140",
            "errotipo": 0,
            "registrobase": {
              "codigo": "758",
              "features": "",
              "composto": "",
              "erro": ""
            },
            "referencia": ""
          },
          "mensagemconsumidorpositivo": ""
        }
      }
    ]
  },
  "versionId": "84292b32-f208-4a52-9ba2-11417befa90a",
  "triggerCount": 1,
  "tags": []
}