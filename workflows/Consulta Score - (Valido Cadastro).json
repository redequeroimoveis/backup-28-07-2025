{
  "createdAt": "2025-07-25T01:10:24.913Z",
  "updatedAt": "2025-07-27T00:55:25.000Z",
  "id": "LSYwMNGbT5PNIXjB",
  "name": "Consulta Score - (Valido Cadastro)",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.CREDCADASTRAL.SCORES.OCORRENCIAS[0].SCORE }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "51d48985-a6bc-49f7-a9f1-6389821aa6f7",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3840,
        1460
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            },
            {
              "name": "Informações",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Tipo Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Tipo Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "={{ $('Gerar PDF API1').item.json.FileUrl }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1ad53dea-da2a-49bd-8041-dcc323cbd2cc",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7660,
        1440
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "Consulta",
        "options": {}
      },
      "id": "d2d6602e-febe-4ab2-9d78-ed3f615538d0",
      "name": "Aggregate6",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4400,
        1440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.iconsultei.com.br/json/service.aspx",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"CodigoProduto\": \"1360\",\n    \"Versao\": \"20180521\",\n    \"ChaveAcesso\": \"l9Emo7ZpGhgw2Fw6CNjemqAtwSqjnb/MTujpNa8gkWf0OtUilAF1XT4ruhKWP3b1\",\n    \"Info\": {\n        \"Solicitante\": \"IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)\"\n    },\n    \"Parametros\": {\n        \"TipoPessoa\": \"F\",\n        \"CPFCNPJ\": \"{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}\"\n    },\n    \"WebHook\": {\n        \"UrlCallBack\": \"\"\n    }\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "9e53b27b-b44a-4442-9716-af1270c7d72a",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3160,
        1480
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/tGoxdlXzQDEO/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "=+553799781110"
            },
            {
              "name": "Retorno Consulta",
              "value": "Offline"
            },
            {
              "name": "Informações",
              "value": "Erro"
            },
            {
              "name": "CADIN",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 1",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 2",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 3",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 4",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 5",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 6",
              "value": "Erro"
            },
            {
              "name": "Protestos",
              "value": "Erro"
            },
            {
              "name": "Nome Menu",
              "value": "_~Análise Serasa, SCPC Boa Vista e Protesto~_"
            },
            {
              "name": "Nome Menu Status",
              "value": "Análise Serasa, SCPC Boa Vista e Protesto - Offline"
            }
          ]
        },
        "options": {}
      },
      "id": "39364b54-c866-4d06-b0c7-9d77cf41a860",
      "name": "UniConsultas - OFFLINE",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4020,
        3400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/tGoxdlXzQDEO/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "=+553799781110"
            },
            {
              "name": "Retorno Consulta",
              "value": "Online"
            },
            {
              "name": "Informações",
              "value": "Erro"
            },
            {
              "name": "CADIN",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 1",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 2",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 3",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 4",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 5",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 6",
              "value": "Erro"
            },
            {
              "name": "Protestos",
              "value": "Erro"
            },
            {
              "name": "Nome Menu",
              "value": "_Análise Serasa, SCPC Boa Vista e Protesto (4 créditos)_"
            },
            {
              "name": "Nome Menu Status",
              "value": "Análise Serasa, SCPC Boa Vista e Protesto - Online"
            }
          ]
        },
        "options": {}
      },
      "id": "a2dd8a76-1b43-4649-a104-2ad13aeb4d0a",
      "name": "UniConsultas - ONLINE",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4020,
        3640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/3980/2vtyWBieugfi/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "=+553799781110"
            },
            {
              "name": "Retorno Consulta",
              "value": "Offline"
            },
            {
              "name": "Informações",
              "value": "Erro"
            },
            {
              "name": "CADIN",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 1",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 2",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 3",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 4",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 5",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 6",
              "value": "Erro"
            },
            {
              "name": "Protestos",
              "value": "Erro"
            },
            {
              "name": "Nome Menu",
              "value": "_~Análise Serasa, SCPC Boa Vista e Protesto~_"
            },
            {
              "name": "Nome Menu Status",
              "value": "Análise Serasa, SCPC Boa Vista e Protesto - Offline"
            }
          ]
        },
        "options": {}
      },
      "id": "d8827f23-25bd-46b0-a1d8-7b5d48ec05ea",
      "name": "Rede Quero Imóveis - OFFLINE",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4260,
        3400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/3980/2vtyWBieugfi/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "=+553799781110"
            },
            {
              "name": "Retorno Consulta",
              "value": "Online"
            },
            {
              "name": "Informações",
              "value": "Erro"
            },
            {
              "name": "CADIN",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 1",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 2",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 3",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 4",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 5",
              "value": "Erro"
            },
            {
              "name": "Pendencias - 6",
              "value": "Erro"
            },
            {
              "name": "Protestos",
              "value": "Erro"
            },
            {
              "name": "Nome Menu",
              "value": "_Análise Serasa, SCPC Boa Vista e Protesto (4 créditos)_"
            },
            {
              "name": "Nome Menu Status",
              "value": "Análise Serasa, SCPC Boa Vista e Protesto - Online"
            }
          ]
        },
        "options": {}
      },
      "id": "b2268c97-1acb-491d-a13a-9a9fe23eb44c",
      "name": "Rede Quero Imóveis - ONLINE",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4260,
        3640
      ]
    },
    {
      "parameters": {
        "content": "## Mudar satatus consulta",
        "height": 540.9280000000002,
        "width": 792.9600000000003
      },
      "id": "148798a4-688c-45b5-aa84-4feb0fde7cac",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3780,
        3300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.HEADER.INFORMACOES_RETORNO.STATUS_RETORNO.DESCRICAO }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "007d8513-e4c4-4968-941e-1ae8c2506b24",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3580,
        1480
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "799b11b1-a5c7-4771-acd6-0b349549a48f",
      "name": "Retornar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8480,
        1720
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "85bbe7be-0b88-4219-b142-beabdf4beaa3",
      "name": "Se crédito existe",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        8860,
        1720
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f313ea21-fb9d-4acd-9c5b-95dec75a1b03",
      "name": "Retirar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9320,
        1680
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7e5f2503-afa7-4df1-830d-2d609a5615d3",
      "name": "Retornar Créditos Disponíveis1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9320,
        1880
      ],
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json.creditos }}"
            }
          ]
        },
        "options": {}
      },
      "id": "17fc733a-14b7-4b7a-b1ed-b8b8152293b0",
      "name": "Retirar Créditos2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9520,
        1880
      ],
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "=+553799781110"
            }
          ]
        },
        "options": {}
      },
      "id": "14204942-816d-49d9-8bf2-cba7f167931a",
      "name": "Verificar Crédito Arthur",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9320,
        2180
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/owwGmbohHVdp/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "=+553799781110"
            },
            {
              "name": "API Crédito",
              "value": "Offline"
            },
            {
              "name": "Telefone Consulta",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Tipo Consulta",
              "value": "Financeiro BuscaSIX"
            }
          ]
        },
        "options": {}
      },
      "id": "2344f431-30ce-4414-8114-d0deb4c856eb",
      "name": "API Crédito Offline",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9740,
        2200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Verificar Crédito Arthur').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c3df95fd-7c08-461b-b95b-13ffd5664ece",
      "name": "Se crédito existe3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        9520,
        2180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4c4b8b4-ac50-4977-b5b7-22b2d88b5eed",
              "name": "Créditos a retirar",
              "value": "={{ $('Dados N8N').item.json['Credito consulta'] }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "3b83065c-5d60-4cd3-b7d1-ecb2b12df5dd",
      "name": "Créditos a retirar1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        8680,
        1720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6611ca4d-c98b-4930-bf78-78785d12378b",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9eac7d82-f2f7-4484-8133-7bc3623203a5",
      "name": "Maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        9080,
        1700
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cbbc641b-95ba-419f-8ebf-b0125ed3247b",
      "name": "Verificar saldo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9520,
        1680
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Retirar Créditos",
        "height": 832.0660667109632,
        "width": 1533.4713488372086
      },
      "id": "3e321ecb-d435-4e5d-9eec-a6e76d98ab51",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8400,
        1600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad9c09c1-3aaf-4c42-ab43-9f8f30a12e99",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $json.creditos }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9942c63c-a43e-4e02-ae17-3ad694135c04",
      "name": "If11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        9720,
        1680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Informações",
              "value": "=*CPF:* _{{ $('Webhook').item.json.body.CPF }}_\n\n*SCORE*\n*Tipo score:* _{{ $json.CREDCADASTRAL.SCORES.OCORRENCIAS[0].TIPO_SCORE }}_\n*Score:* _{{ $json.CREDCADASTRAL.SCORES.OCORRENCIAS[0].SCORE }}_\n\n*Obs:* _{{ $json.CREDCADASTRAL.SCORES.OCORRENCIAS[0].TEXTO }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8c0d58cd-4423-4e11-8477-2ab8e244d1ec",
      "name": "Mapa - Informações",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4080,
        1440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Tipo Consulta",
              "value": "Consulta SCORE",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": 2,
              "type": "number"
            },
            {
              "id": "9ccb2bb6-7c7c-414c-887b-ebc783ca4e96",
              "name": "Prompt PDF",
              "value": "=Objetivo: Formatar os dados da consulta de crédito de forma estruturada e organizada, seguindo o modelo de análise de crédito do Serasa, retornando exclusivamente um código HTML.\nInstruções:\n* Retornar apenas o HTML, sem nenhum outro texto no output.\n* Seguir a estrutura de tabelas para organizar os dados.\n* Usar fontes de até 11px para informações dentro das tabelas.\n* Remover o título <h1>, mas adicionar duas quebras de linha (<br><br>) após a logo para espaçamento.\n* Não alterar o campo \"URL-LOGO\", pois ele será substituído dinamicamente.\n* Incluir um rodapé com informações de confidencialidade e LGPD, usando fonte de 9px e alinhado à esquerda.\n* Nunca utilizar a expressão \"Dados do Cotista\", apenas \"Dados\".\nFormato esperado:\n* HTML bem estruturado, com seções claras.\n* Uso de <div> para blocos de informações e <table> para dados tabulares.\n* Listas <ul> para e-mails, telefones e parentes.\n* Footer fixo no final do relatório.\n* Caso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\n* É obrigatório que todas as informações fornecidas abaixo conste no HTML.\n* Se tiver \"_Sem pendências registradas._\", \"_Sem pendências._\" ou algo que comece e termine com \"_\", remova o \"_\".\n* Se o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\n* Se não existir nenhum email, não adicione no html Email\n* Se não existir nenhum telefone, não adicione no html Telefone\n* Se não existir nenhum Possíveis Parentes, não adicione no html Possíveis Parentes\n* Se email estiver vazio ou não existir, não crie no html <strong>Email:</strong>\n* Se telefone estiver vazio ou não existir, não crie no html <strong>Telefone:</strong>\n\nAdicione também um rodapé na página com fonte tamanho 9 alinhado a esquerda da página com os seguintes dados:\n\"INFORMAÇÕES IMPORTANTES\nESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO , RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.\n\nMINUTA DE DECLARAÇÃO LGPD\nDECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.\"\n\nHTML DE EXEMPLO 1:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\">\n        <br><br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Nome:</span> Anderson dos Santos Jorge</p>\n            <p><span class=\"info\">Nascimento:</span> 25/06/1983</p>\n            <p><span class=\"info\">CPF:</span> 32676277880</p>\n        </div>\n        <br>\n        <div class=\"section\">\n            <h2 class=\"section-header\">Score</h2>\n            <p><span class=\"info\">Score:</span> 46</p>\n            <p><span class=\"info\">Tipo score:</span> SCORE 6 MESES</p>\n            <p><span class=\"info\">Observação:</span> A chance de um consumidor, com score 46, pagar seus compromissos financeiros em 06 meses é baixa.</p>\n        </div>\n        <br>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nImportante, escreva \"Inicio HTML\" e \"Fim HTML\" no inicio e no final. Somente isso. Não escreva mais nenhum dados fora do código.\nQuando for exatamente começar o código HTML, escreva da seguinte maneira: Inicio HTML\\n<!DOCTYPE html>\\n\nEscreva no código html todas as informações fornecidas. Não ignore nenhum dado.\nUma observação. O titulo dos menus entrão entre <>\nCaso a frase comece e termine com \"_\", pode remover o \"_\"\nSempre formate no html utilizando TODOS os dados fornecidos abaixo como informações, valores, dados, tudo sem exceção.\nVocê vai adicionar na formatação somente os dados existentes e informados abaixo.\nImportante. Se o dados como telefone, email ou parentes não estiver disponível e não for fornecido, você não precisa adicionar a \"div class\" no html.\nSempre adicione <br> entre uma \"div class\" e outra.\nSiga fielmente o layout do exemplo de html acima.\nCaso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\nSe o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\nÉ importante que você adicione no HTML somente os dados fornecidos abaixo que são para formatar. Os dados dos HTML de exemplo servem somente para seguir o layout do HTML (Nunca utilize as informações de exemplo ou invente dados para adicionar no html formatado).\nÉ obrigatório que todas as informações fornecidas abaixo conste no HTML.\nRemova todos os _ do html exceto de email.\nImportante, você vai formatar em pendências, somente o que está em pendências, você vai formatar em scpc, somente o que está em scpc e vai formatar em protestos, somente o que está em protestos. E assim por diante.\nSe durante a formatação formar criar >PENDÊNCIAS< crie com somente a primeira letra maiúscula >Pendências<\n\nAtenção, todos os dados e informações acima server exclusivamente como exemplo para você estruturar o HTML.\nAs informações na formatação do HTML precisam estar na ordem dos dados para formatar.\nUtilize somente os dados abaixo para formatar o HTML:",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ae05540e-33fa-49d1-a227-1131ebfaf473",
      "name": "Dados N8N",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        0,
        160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Informações",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Tipo Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Tipo Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "0eed6cf7-a40e-46b3-955c-ec808ab21296",
      "name": "HTTP Request4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3960,
        2740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false; // Verifica se possui 11 dígitos e não é uma sequência repetida\n\n    let soma = 0, resto;\n\n    // Validação do primeiro dígito verificador\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    // Validação do segundo dígito verificador\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false; // Verifica se possui 14 dígitos e não é uma sequência repetida\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o CPF ou CNPJ diretamente do campo 'body.CPF' ou 'body.CNPJ' dentro do 'Webhook'\nconst numero = ($('Webhook').item.json.body.CPF || $('Webhook').item.json.body.CNPJ).replace(/[^\\d]+/g, '');\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido // Retorna true ou false\n        }\n    }\n];\n"
      },
      "id": "1d4ba032-9eaa-4265-a00e-231a5ba83996",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        340,
        140
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bfac3c94-a23c-4008-aa6c-dd5fcb21c8e6",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "91c4e3e3-9cf7-4eb5-851f-812872f5a470",
      "name": "If26",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        540,
        140
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "58bac6b1-10ea-4450-a4d8-3518bf1500ec",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        540,
        740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=O CPF informado é inválido. Verifique os números digitados e tente novamente.\n\nObs: Digite apenas números, sem pontos, traços ou espaços."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "8ebf2851-2a78-4b34-b3d1-919a55194a80",
      "name": "HTTP Request7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        340,
        740
      ]
    },
    {
      "parameters": {
        "content": "## CPF / CNPJ inválido",
        "height": 870.3156121746183,
        "width": 456.60627452732734,
        "color": 3
      },
      "id": "95770907-d67c-49ec-b956-42cff115e8f9",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        260,
        40
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2c13764d-6f4d-4ba6-907f-0e7e93515236",
      "name": "If28",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        340,
        540
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "bd5f8f54-1187-46c2-8c6c-baf114ca1d27",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        3960,
        2900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6f246f92-68ef-4e05-8298-13b630cba932",
      "name": "If27",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3780,
        2740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "dfec968c-68e9-469f-957b-8550e4d117a1",
      "name": "HTTP Request8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3780,
        2920
      ]
    },
    {
      "parameters": {
        "content": "## ERRO CONSULTA",
        "height": 615.5028160284517,
        "width": 463.0557878889166,
        "color": 3
      },
      "id": "7d2e8aeb-97be-4471-a2d0-72f5adb6e7c0",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3700,
        2440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "=Erro"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Tipo Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Tipo Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "7f2c1cbd-4493-487b-a43b-c9777da698d9",
      "name": "HTTP Request9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        540,
        520
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1fa44b7e-1e5f-4ed5-885c-7ee0a648e519",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        7660,
        1600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ea71fc7c-160c-4f20-86c4-b9c4fafcfc0e",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7460,
        1440
      ]
    },
    {
      "parameters": {
        "content": "## ENVIAR RESULTADO CONSULTA SITE",
        "height": 540.823728738776,
        "width": 462.8961536434481,
        "color": 2
      },
      "id": "a18449bf-69a5-472c-a838-0decdeba8cbf",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7400,
        1320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\n\n## PDF - 01\n{{ $('Gerar PDF API1').item.json.FileUrl }}\n\n\n______________________________________________________________\n\n\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "dd997e5a-6b26-49af-8753-df0544709dd4",
      "name": "HTTP Request10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7460,
        1600
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "valido-cadastro_score",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "04085f0d-4f56-45a8-9a14-dc74edd277ba",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -260,
        160
      ],
      "webhookId": "9e0a20c1-dbef-4418-87c4-99d414620c8a"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a3a0539-f0be-4d1f-9255-391a5380557c",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4460794d-743d-4af6-a67a-9412f813302c",
      "name": "If10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4620,
        1440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/UfO1nbtNGdqa/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "=+553799781110"
            },
            {
              "name": "Consulta",
              "value": "=*Telefone:* _{{ $('Webhook').item.json.body.Telefone }}_\n*CPF / CNPJ:* _{{ $('Webhook').item.json.body.CPF }}_\n\n-----------//-----------\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "b05e90af-5718-4fe2-a711-2bcb45a0e29a",
      "name": "Acompanhar consulta site (Botconversa)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7940,
        1880
      ],
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "be20c50e-9b8f-490d-bdf7-16696afbd35d",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        3780,
        1860
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtém a data e hora do campo\nconst currentDate = new Date($('Date & Time1').item.json.currentDate);\n\n// Converte para o horário de São Paulo (GMT-3)\nconst options = { timeZone: 'America/Sao_Paulo', hour12: false };\nconst brazilianTime = new Date(currentDate.toLocaleString('en-US', options));\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado) e a hora\nconst dayOfWeek = brazilianTime.getDay(); // 0=Domingo, 1=Segunda, ..., 6=Sábado\nconst hour = brazilianTime.getHours();\n\n// Verifica se a hora está entre 08:00 e 18:00 e se o dia é útil (segunda a sexta)\nif (hour >= 9 && hour < 18 && dayOfWeek >= 1 && dayOfWeek <= 5) {\n    return {\n        json: {\n            status: 'Horário funcionamento'\n        }\n    };\n} else {\n    return {\n        json: {\n            status: 'Fora do horário'\n        }\n    };\n}\n"
      },
      "id": "a9bfea95-5e9f-4750-ac99-b03415c85be4",
      "name": "Code Horário funcionamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3960,
        1860
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "Tente novamente utilizando outra opção de consulta disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3df5265c-d6fc-47c8-9a97-827cedb0dc16",
      "name": "Horário funcionamento1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3960,
        2020
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8ec90439-29cc-4f7e-9318-906539cd9a2d",
              "leftValue": "={{ $json.status }}",
              "rightValue": "funcionamento",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4f4bc0ac-0d19-4077-8c76-f449b31f927a",
      "name": "Verificar Horário funcionamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3780,
        2020
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "🕗 Alguns birôs restringem as consultas ao horário comercial. Aguarde até o horário de funcionamento para realizar a consulta e melhor experiência ou tente novamente utilizando outra opção disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f53909f2-b091-4b3e-be50-c7212d9ae764",
      "name": "Fora do horário",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3780,
        2160
      ]
    },
    {
      "parameters": {
        "content": "## Horário funcionamento",
        "height": 578.2747827033502,
        "width": 397.97803245596407,
        "color": 3
      },
      "id": "e83e6c76-f7e5-4269-b093-0a7062f84ba7",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3720,
        1780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "4331dd6d-d92f-4101-bd52-7a6b47f83545",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8d4c453e-23bd-44e9-a385-5629a0465341",
      "name": "se typebot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        340,
        380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: o CPF informado é inválido. Por favor, digite o CPF corretamente 🚨",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "23ddc017-b0df-4a36-af49-4d4de1074662",
      "name": "typebot",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        700,
        360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "d6e86043-dbdc-43bd-be12-cd2032f58920",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0a1ed73f-260c-4383-9b10-d7bd305d97a3",
      "name": "se typebot1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3780,
        2560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "={{ $('se typebot1').item.json[\"Consulta erro\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "72e0b352-04f2-435d-bdb1-1444e5001c2e",
      "name": "typebot1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        4200,
        2560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "802f6c71-33f2-4999-b91f-e6decf50bcea",
      "name": "se typebot2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7400,
        1160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.validocadastro.com.br/json/service.aspx",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"CodigoProduto\": \"629\",\n    \"Versao\": \"20180521\",\n    \"ChaveAcesso\": \"L1m5egI62W5WEg4WH8ihbwZ8xED1JlJeMXOp8kewYEQG8hA6+S/Ysy/E7Yc9Z1m+\",\n    \"Info\": {\n        \"Solicitante\": \"IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)\"\n    },\n    \"Parametros\": {\n        \"TipoPessoa\": \"F\",\n        \"CPFCNPJ\": \"{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}\"\n    },\n    \"WebHook\": {\n        \"UrlCallBack\": \"\"\n    }\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "23b55b85-226c-4a68-b0d2-25578b78e20f",
      "name": "HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3160,
        1660
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.HEADER.INFORMACOES_RETORNO.STATUS_RETORNO.DESCRICAO }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e7043283-44ea-457a-b9c2-595ca4d991ec",
      "name": "If8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3520,
        1660
      ]
    },
    {
      "parameters": {
        "jsCode": "const agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [dataStrRaw, horaStr] = agora.split(' ');\nconst dataStr = dataStrRaw.replace(',', '');\n\n// Extrai dia, mês e ano\nconst [dia, mes, ano] = dataStr.split('/');\nconst dataFormatada = `${dia}/${mes}/${ano}`;\n\n// Novo formato ISO (YYYY-MM-DD)\nconst dataISO = `${ano}-${mes}-${dia}`;\n\n// Monta a URL da execução\nconst executionId = $execution.id;\nconst workflowId = $workflow.id;\nconst baseUrl = \"https://n8n.redequeroimoveis.com\";\nconst executionUrl = `${baseUrl}/workflow/${workflowId}/executions/${executionId}`;\n\n// Retorna tudo em um único objeto\nreturn [{\n  json: {\n    data: dataFormatada,\n    data_iso: dataISO,\n    hora: horaStr,\n    executionUrl: executionUrl\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        10120,
        2160
      ],
      "id": "67056708-5b45-43be-b109-4c1455ee6992",
      "name": "Code4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e3f71e0f-120d-491c-9d5b-b24ee9a67a8b",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1520,
        600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $json.creditos }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2318faa9-03f0-4582-b238-51cf196e32a2",
      "name": "Crédito maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1520,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "402091ba-4a74-4484-a2b5-dae1edee19ae",
      "name": "Se site / bc1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "d3c6fcde-d2f8-4155-9e68-62b492609e9c",
      "name": "Crédito inferior1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1340,
        440
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "2da2bcf5-ab58-4c52-9206-89e22615f7cc",
      "name": "Respond to Webhook6",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1520,
        440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c338b3ac-203c-4919-96c2-cd04688aa7f3",
      "name": "Retornar Créditos Site1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1340,
        240
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## SE SITE VERIFICAR CRÉDITO",
        "height": 779,
        "width": 710,
        "color": 4
      },
      "id": "30b7bef5-4d8e-4495-9243-c896f39d5913",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1100,
        80
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c247900f-57e5-4609-8921-371439c46f6b",
      "name": "Se base44",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7060,
        940
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64530896-b254-4c99-991f-167b429c9304",
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If30').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}",
              "type": "string"
            },
            {
              "id": "842b2f23-b0c2-4713-a419-890e04377971",
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API1').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "774d16d2-47c6-411a-8c78-78812c161e93",
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9ac0f015-9ec0-4c2c-a1db-9d6e9e6cba77",
      "name": "resposta-base44",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        7520,
        940
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8e5d1e6-feda-4373-8e50-936f54a48786",
              "name": "Créditos",
              "value": "={{ $('Dados N8N').item.json['Credito consulta'] }}",
              "type": "string"
            },
            {
              "id": "e83c4952-cefe-4e2e-accf-865e014c5c20",
              "name": "Opção Consulta",
              "value": "Score",
              "type": "string"
            },
            {
              "id": "b465d432-f3ad-4b56-8e49-81a06ca7db1a",
              "name": "Tipo Consulta",
              "value": "={{ $workflow.name }}",
              "type": "string"
            },
            {
              "id": "ccbdfb0b-45f1-40b2-b095-fcfefa698376",
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}",
              "type": "string"
            },
            {
              "id": "41bac44d-098a-4889-ad47-0138194c7d6b",
              "name": "Dado consultado",
              "value": "={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
              "type": "string"
            },
            {
              "id": "5f0eaada-894e-45cf-8c51-3f1a65fb785e",
              "name": "Data",
              "value": "={{ $json.data }}",
              "type": "string"
            },
            {
              "id": "f34f0ad5-5beb-4941-a1be-d63c2f099f22",
              "name": "Hora",
              "value": "={{ $json.hora }}",
              "type": "string"
            },
            {
              "id": "7c7fe4c7-5f91-4a5c-af93-3104c80aab4c",
              "name": "Origem Consulta",
              "value": "={{ $('Webhook').item.json.body.Webhook }}",
              "type": "string"
            },
            {
              "id": "1d73fdf2-efea-4c10-a59d-d631ffb5769d",
              "name": "=URL PDF",
              "value": "={{ $('Gerar PDF API1').item.json.FileUrl }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        10320,
        1520
      ],
      "id": "6a1a57cb-363d-4d02-862c-1d8b511164c9",
      "name": "Dados Histórico"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6819f5703086936c581632c2/entities/Historico",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "tipo_consulta",
              "value": "={{ $json['Tipo Consulta'] }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json['Créditos'] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            },
            {
              "name": "origem",
              "value": "={{ $json['Origem Consulta'] }}"
            },
            {
              "name": "opcao",
              "value": "={{ $json['Opção Consulta'] }}"
            },
            {
              "name": "exec",
              "value": "={{ $('Code4').item.json.executionUrl }}"
            },
            {
              "name": "url_pdf",
              "value": "={{ $json['URL PDF'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10540,
        1520
      ],
      "id": "2fdb3e05-41f1-4cf6-a102-2e1e8cbf2640",
      "name": "Base44 API - Histórico",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If30').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API1').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7300,
        940
      ],
      "id": "0fbb1ad7-b027-4c16-ad16-e41fcf1ee16e",
      "name": "Base44 API - RetornoConsulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/UltimaConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If30').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API1').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            },
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10540,
        1700
      ],
      "id": "b7ed09b2-fb55-42e4-9233-f34af0ff5784",
      "name": "Base44 API - Última Consulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('se typebot1').item.json[\"Consulta erro\"] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4180,
        2360
      ],
      "id": "80a97663-2868-4f49-a6eb-5f89a19b90e0",
      "name": "Base44 API - Erro Consulta",
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "=*CPF:* _{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_\n\n{{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5a7f76e1-516d-4687-9371-f469cce07815",
      "name": "Edit Fields16",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3520,
        840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.DADOS_PESSOAIS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.DADOS_PESSOAIS[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "0fab7232-006a-465f-b000-85d51a60863f",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_NOVO[0].SCORE_SERASA }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8e3bd8fc-0792-45a2-96fa-ad47eda78c34",
      "name": "If50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3920,
        840
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/dados/cpf/{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 20000
        }
      },
      "id": "ebd4e6f2-2746-459e-a693-eefabb3243e6",
      "name": "Dados - ehmconsultas",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3140,
        840
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const score = $('Dados - ehmconsultas').item.json.DATA.SCORE_NOVO[0].SCORE_SERASA;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];\n"
      },
      "id": "5e3f6da9-040b-46a0-9780-c6532b107050",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3320,
        840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const score = $('minerdapifoda').item.json.resultado.SCORE[0].CSBA;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];"
      },
      "id": "7e5edd08-00bd-48fd-b814-172895f47bbe",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3340,
        300
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a71f79c-c28b-4ed8-811a-9c130e7df817",
              "name": "Informações",
              "value": "=*Nome:* _{{ $('minerdapifoda').item.json.resultado.DADOS[0].NOME }}_\n*Nascimento:* _{{ $('minerdapifoda').item.json.resultado.DADOS[0].NASC }}_\n*CPF:* _{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_\n\n{{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fc08609d-5522-4658-95d0-30d207a5f64c",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3520,
        300
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://typebots.minerdapifoda.xyz:8080/api/cpffull?cpf={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "0267cf44-41bf-4e10-918f-8c5876644182",
      "name": "minerdapifoda",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3140,
        300
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b09abb5c-c1e5-4dd8-b31c-ed46d0d51eeb",
              "leftValue": "={{ $('minerdapifoda').item.json.resultado.DADOS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "bc6380b3-987c-4253-81da-677bc3e40577",
              "leftValue": "={{ $('minerdapifoda').item.json.resultado.SCORE[0].CSBA }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3db865f4-e819-4734-96aa-08f32edc2a48",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3920,
        300
      ]
    },
    {
      "parameters": {
        "model": "llama-3.3-70b-versatile",
        "options": {
          "temperature": 0
        }
      },
      "id": "0f02d61f-efdd-412c-a1b3-cb6637492883",
      "name": "Groq Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        5680,
        2900
      ],
      "credentials": {
        "groqApi": {
          "id": "0U8f3VFF5G2KERm1",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n    // Obter a string de HTML do campo {{ $json.output }}\n    const htmlString = $json.output;\n\n    // Verificar se htmlString está definido e é uma string\n    if (!htmlString || typeof htmlString !== 'string') {\n        throw new Error(\"O campo 'output' está vazio ou não é uma string.\");\n    }\n\n    // Encontrar o índice da primeira ocorrência de 'Inicio HTML'\n    const doctypeIndex = htmlString.indexOf('Inicio HTML\\n<!DOCTYPE html>\\n');\n\n    // Se a string for encontrada, cortar tudo antes dela\n    let htmlContent = doctypeIndex !== -1 ? htmlString.slice(doctypeIndex) : htmlString;\n\n    // Substituir \"URL-LOGO\" por \"LOGOARTHUR\"\n    htmlContent = htmlContent.replace('URL-LOGO', 'LOGOARTHUR');\n\n    // Substituir tabelas específicas por parágrafos informativos\n    htmlContent = htmlContent.replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem informações registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem informações registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem informações registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n);\n\n\n    // Retornar o conteúdo modificado\n    return { htmlContent };\n} catch (error) {\n    // Em caso de erro, retornar a string {{ $json.message.content }}\n    return { htmlContent: $json.message?.content || \"Erro desconhecido\" };\n}"
      },
      "id": "76a54566-1d19-4e45-9cfb-11a8f6fb1e53",
      "name": "Code Formatar HTML",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6180,
        2720
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Dados N8N').item.json['Prompt PDF'] }}\n\nInformações\n{{ $('Aggregate6').item.json.Consulta[0]['Informações']}}",
        "options": {}
      },
      "id": "25b95220-7fff-4e3b-909e-3c9f1c94513c",
      "name": "AI Agent2",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        5660,
        2740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "195af974-c126-484e-b5a5-acc1383966d5",
              "leftValue": "={{ $json.output ? $json.output : $json.message.content }}",
              "rightValue": "Fim HTML",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "88d65093-2062-4bb2-8c09-b886be978aa4",
              "leftValue": "={{ $json.output ? $json.output : $json.message.content }}",
              "rightValue": "Inicio HTML",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d672e0de-e04e-4ce3-8375-ef549dee967f",
      "name": "If22",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6000,
        2740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://v2.api2pdf.com/chrome/pdf/html",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "085551d3-3165-49d6-9fff-22ac23f127b9"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If30').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "dbd8d62b-5dba-4e2f-b933-b2944cfc71f5",
      "name": "Gerar PDF API1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6380,
        2720
      ],
      "alwaysOutputData": true,
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://baserow.unisistemas.tech/api/database/rows/table/643/?user_field_names=true&filter__field_6200__contains={{ $('Webhook').item.json.body.Telefone }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_field_names",
              "value": "true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token UU2yIjUeFuKaWhvMc734TVS2oEOKWjp9"
            }
          ]
        },
        "options": {}
      },
      "id": "39ed343e-1e28-43e3-99e4-46e50c2ab11f",
      "name": "HTTP Request11",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5080,
        2740
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "87ac1dec-3f72-4857-8884-a3cfde60d311",
              "leftValue": "={{ $json.results[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "60387208-f99b-49b3-a177-eedb897a94a5",
              "leftValue": "={{ $json.results[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5260,
        2740
      ],
      "id": "2711ba6f-7828-4445-b651-d4b001e25b7f",
      "name": "If30"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a71f79c-c28b-4ed8-811a-9c130e7df817",
              "name": "Informações",
              "value": "=*Nome:* _{{ $('minerdapifoda').item.json.resultado.DADOS[0].NOME }}_\n*Nascimento:* _{{ $('minerdapifoda').item.json.resultado.DADOS[0].NASC }}_\n*CPF:* _{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_\n\n{{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9d398951-0bda-47ff-8d93-38f959ec3a77",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3520,
        460
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b09abb5c-c1e5-4dd8-b31c-ed46d0d51eeb",
              "leftValue": "={{ $('minerdapifoda').item.json.resultado.DADOS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "bc6380b3-987c-4253-81da-677bc3e40577",
              "leftValue": "={{ $('minerdapifoda').item.json.resultado.SCORE[0].CSBA }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e1e34b3b-91d1-4721-bb1c-76628e86054d",
      "name": "If9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3920,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "const score = $('minerdapifoda').item.json.resultado.SCORE[0].CSB8;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];\n"
      },
      "id": "3ed779f4-5561-42e3-9f92-eafd4d064fd9",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3340,
        460
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "992cbfd2-fbbc-4eff-a7df-feccd1176866",
              "leftValue": "={{ $('minerdapifoda').item.json.resultado.SCORE[0].CSBA }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            },
            {
              "id": "87f01dfe-a7c3-40d6-b985-809e5726f083",
              "leftValue": "={{ $('minerdapifoda').item.json.resultado.SCORE[0].CSBA }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3720,
        300
      ],
      "id": "0ca48928-36ad-4f7b-ab47-7bd6c02031fa",
      "name": "If2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "992cbfd2-fbbc-4eff-a7df-feccd1176866",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "0",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "dd284b1b-b5f7-4661-b016-415a61622397",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "cc83b3e3-5034-42e2-b7f2-6e506b8510d0",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "1bb99b40-5833-4574-8778-13a758e93900",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "2",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3720,
        840
      ],
      "id": "d72382b3-8e1e-4512-9ed3-a3c5ab7bf41f",
      "name": "If3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.DADOS_PESSOAIS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.DADOS_PESSOAIS[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "0fab7232-006a-465f-b000-85d51a60863f",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_NOVO[0].SCORE_SERASA }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d7ccc497-f58b-473e-a0a5-bc17816834c0",
      "name": "If52",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3920,
        1040
      ]
    },
    {
      "parameters": {
        "jsCode": "const score = $('Dados - ehmconsultas').item.json.DATA.SCORE_BASE[0].SCORE_SERASA;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];"
      },
      "id": "9f6d7384-20ef-4b22-beef-1e525852fa9a",
      "name": "Code19",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3320,
        1040
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "=*CPF:* _{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_\n\n{{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d5c0042c-ff2f-41f8-b477-a59d903fbaa7",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3520,
        1040
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "992cbfd2-fbbc-4eff-a7df-feccd1176866",
              "leftValue": "={{ $('minerdapifoda').item.json.resultado.SCORE[0].CSB8 }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "110d11d7-aeae-4b9e-9db8-8eceaa0cf612",
              "leftValue": "={{ $('minerdapifoda').item.json.resultado.SCORE[0].CSB8 }}",
              "rightValue": "2",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "dd4e39c7-2d93-4395-9037-a7d11833f6d9",
              "leftValue": "={{ $('minerdapifoda').item.json.resultado.SCORE[0].CSB8 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3720,
        460
      ],
      "id": "0a5325a6-325f-44e9-8bdd-b8df664519c6",
      "name": "If4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.Data[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.Data[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4f0ee883-068d-4bb0-8a95-4422648e3d26",
      "name": "If51",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3700,
        680
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/sus1/cpf/{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 20000
        }
      },
      "id": "6f4c903d-3d7a-4b5e-84a4-508f8dc868ec",
      "name": "Dados - ehmconsultas2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3140,
        680
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Obtendo os dados da array do nó \"Dados - ehmconsultas\"\nlet dados = $('Dados - ehmconsultas2').item.json.Data;\n\nif (!Array.isArray(dados) || dados.length === 0) {\n    return [{\n        json: {\n            resultado: \"Dados inválidos ou incompletos.\"\n        }\n    }];\n}\n\nlet pessoa = dados[0]; // Pegando o primeiro item da lista\n\n// Função para verificar se o valor é válido (não nulo, não vazio, não undefined)\nfunction valorValido(valor) {\n    return valor !== null && valor !== undefined && String(valor).trim() !== '';\n}\n\n// Função para formatar a data no formato dd/mm/yyyy\nfunction formatarData(data) {\n    if (!valorValido(data)) return null;\n    if (/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(data)) return data;\n    const date = new Date(data);\n    if (isNaN(date)) return null;\n    return date.toLocaleDateString('pt-BR');\n}\n\nlet resultado = '';\n\n// Nome\nif (valorValido(pessoa.NOME)) {\n    resultado += `*Nome:* _${pessoa.NOME}_\\n`;\n}\n\n// CPF\nif (valorValido(pessoa.CPF)) {\n    resultado += `CPF: _${pessoa.CPF}_\\n`;\n}\n\n// Data de nascimento\nconst dataNascimento = formatarData(pessoa.DATA_NASCIMENTO);\nif (dataNascimento) {\n    resultado += `Nascimento: _${dataNascimento}_\\n`;\n}\n\n// Nome da Mãe\nif (valorValido(pessoa.NOME_MAE)) {\n    resultado += `Nome da Mãe: _${pessoa.NOME_MAE}_\\n`;\n}\n\n// Nome do Pai\nif (valorValido(pessoa.NOME_PAI)) {\n    resultado += `Nome do Pai: _${pessoa.NOME_PAI}_\\n`;\n}\n\n// Telefones\nlet telefones = [];\nif (valorValido(pessoa.TELEFONE)) telefones.push(pessoa.TELEFONE);\n\nif (telefones.length > 0) {\n    resultado += `\\n*Telefones:*\\n`;\n    Array.from(new Set(telefones)).slice(0, 3).forEach(tel => {\n        resultado += ` - _${tel}_\\n`;\n    });\n}\n\n// E-mails\nlet emails = [];\nif (valorValido(pessoa.EMAIL)) emails.push(pessoa.EMAIL);\nif (valorValido(pessoa.EMAIL2)) emails.push(pessoa.EMAIL2);\n\nif (emails.length > 0) {\n    resultado += `\\n*E-mails:*\\n`;\n    Array.from(new Set(emails)).slice(0, 3).forEach(email => {\n        resultado += ` - ${email}\\n`;\n    });\n}\n\nreturn [{\n    json: {\n        resultado: resultado.trim()\n    }\n}];\n"
      },
      "id": "9043fd0a-d8a4-4284-b0c6-9341f5337012",
      "name": "Code10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3320,
        680
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "de567d9e-a523-4f46-beb5-691facd99673",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3520,
        680
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "url-pdf",
        "filters": {
          "conditions": [
            {
              "keyName": "Telefone",
              "keyValue": "={{ $('Webhook').item.json.body.Telefone.startsWith('+') ? $('Webhook').item.json.body.Telefone : '+' + $('Webhook').item.json.body.Telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5080,
        2920
      ],
      "id": "b352d030-52c3-409c-b95e-ae47a4a03f73",
      "name": "Obter Logo Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "8b8095b1-ba11-4306-8602-9e78be3503cd",
              "leftValue": "={{ $('minerdapifoda2').item.json.DADOS[0].NOME }}",
              "rightValue": "Nome:",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "b09abb5c-c1e5-4dd8-b31c-ed46d0d51eeb",
              "leftValue": "={{ $('minerdapifoda2').item.json.SCORE[0].CSBA }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "b0313358-9483-4ab6-a639-d4cbecb00179",
              "leftValue": "={{ $('minerdapifoda2').item.json.SCORE[0].CSBA }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ad64306d-8ad0-4e0c-87e7-1ac8e2aeb040",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3980,
        80
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a3c190a-4b1a-4e2f-bbee-6fa4d37c118f",
              "name": "Informações",
              "value": "=*Nome:* _{{ $('minerdapifoda2').item.json.DADOS[0].NOME }}_\n*Nascimento:* _{{ $('minerdapifoda2').item.json.DADOS[0].NASC }}_\n*CPF:* _{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_\n\n---------------------------\n\n{{ $json.resultado }}",
              "type": "string"
            },
            {
              "id": "0244c918-7e2d-431c-bd88-ac995e2835cb",
              "name": "SCORE[0].CSBA",
              "value": "={{ $('minerdapifoda2').item.json.SCORE[0].CSBA }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "52f2ee4b-6f70-45bf-8cc0-a4719c8417aa",
      "name": "Edit Fields9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3760,
        80
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://sys.sistemafull.site:3000/api/cpf?token=bbeacb297037b97ca56e43d437ac4620&cpf={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 5000
        }
      },
      "id": "a21cee45-c030-4a44-bd7b-14f891072847",
      "name": "minerdapifoda2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3120,
        80
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// Função para calcular idade com base na data de nascimento\nfunction calcularIdade(dataNasc) {\n    const hoje = new Date();\n    const [dia, mes, ano] = dataNasc.split('/');\n    const nascimento = new Date(`${ano}-${mes}-${dia}`);\n    let idade = hoje.getFullYear() - nascimento.getFullYear();\n    const mesAtual = hoje.getMonth();\n    const diaAtual = hoje.getDate();\n    if (mesAtual < nascimento.getMonth() || \n       (mesAtual === nascimento.getMonth() && diaAtual < nascimento.getDate())) {\n        idade--;\n    }\n    return idade;\n}\n\n// Função para evitar duplicatas\nfunction removerDuplicatas(array) {\n    return array.filter((item, index, self) =>\n        index === self.findIndex((t) => JSON.stringify(t) === JSON.stringify(item))\n    );\n}\n\n// Pegar os dados diretamente do nó 'minerdapifoda2'\nconst origem = $('minerdapifoda2').item.json;\n\nconst dados = origem.DADOS?.[0] || {};\nconst emails = removerDuplicatas(origem.EMAIL || []).slice(0, 5);\nconst telefones = removerDuplicatas(origem.HISTORICO_TELEFONES || [])\n    .filter(tel => tel.TELEFONE && tel.TELEFONE !== \"undefined\")\n    .slice(0, 5)\n    .map(tel => `${tel.DDD}${tel.TELEFONE}`);\nconst parentes = removerDuplicatas(origem.PARENTES || []).slice(0, 5);\n\n// Início da formatação\nlet resultadoFormatado = \"\";\n\n// Adicionar dados principais\nif (dados.NOME && dados.CPF && dados.NASC) {\n    const idade = calcularIdade(dados.NASC);\n    resultadoFormatado += `*Nome:* _${dados.NOME}_\\n`;\n    resultadoFormatado += `*CPF:* _${dados.CPF}_\\n`;\n    resultadoFormatado += `*Data Nascimento:* _${dados.NASC}_\\n`;\n    resultadoFormatado += `*Idade:* _${idade} anos_\\n\\n`;\n}\n\n// Adicionar telefones\nif (telefones.length) {\n    resultadoFormatado += `## *Telefone*\\n`;\n    telefones.forEach(tel => {\n        resultadoFormatado += `- ${tel}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar emails\nif (emails.length) {\n    resultadoFormatado += `## *Email*\\n`;\n    emails.forEach(email => {\n        resultadoFormatado += `- ${email.EMAIL}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar parentes\nif (parentes.length) {\n    resultadoFormatado += `## *Possíveis Parentes*\\n`;\n    parentes.forEach(parente => {\n        const nome = parente.NOME_VINCULO || \"Não informado\";\n        const vinculo = parente.VINCULO || \"Não informado\";\n        resultadoFormatado += `- _${nome} - ${vinculo}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Retornar resultado formatado\nreturn {\n    json: {\n        resultadoFormatado: resultadoFormatado.trim()\n    }\n};\n"
      },
      "id": "35e68d76-3d4c-4000-914c-4186721bfd5e",
      "name": "Code12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3340,
        80
      ],
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const score = $('minerdapifoda2').item.json.SCORE?.[0]?.CSBA || 0;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3560,
        80
      ],
      "id": "84eac65a-e98f-495f-b7ea-c0505a4a12c6",
      "name": "Code5"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        5460,
        2740
      ],
      "id": "5de1784f-d6f3-4f25-b3d5-82850a4b72da",
      "name": "Limit"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "992cbfd2-fbbc-4eff-a7df-feccd1176866",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "0",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "dd284b1b-b5f7-4661-b016-415a61622397",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "cc83b3e3-5034-42e2-b7f2-6e506b8510d0",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "1bb99b40-5833-4574-8778-13a758e93900",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "2",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3140,
        1040
      ],
      "id": "d9f27d7b-09b7-417e-9c98-802362fc515b",
      "name": "If6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        520,
        360
      ],
      "id": "f4217b2d-4532-491f-8e13-9beba0e9ad60",
      "name": "EvolutionAPI - CPF Invalido",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "={{ $('se typebot2').item.json['Consulta erro'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3980,
        2480
      ],
      "id": "51dfa803-2012-4773-9e37-183471ad90f8",
      "name": "EvolutionAPI - Erro",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1360,
        660
      ],
      "id": "facd2d6f-529f-4434-b45c-5427d1566be7",
      "name": "EvolutionAPI - Sem credito",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "60288151-e6eb-4293-b30b-a838e064013e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "0932bc08-1e8e-4d36-97b7-a0cca5e92166",
      "name": "If23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37111169-e67b-43ee-856e-7deb5fa193ab",
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}",
              "type": "string"
            },
            {
              "id": "e298fd1f-2f1c-4140-bf94-7c782ced4329",
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        8200,
        1160
      ],
      "id": "3f87a748-a1ae-492c-a795-cc72b581aa63",
      "name": "resposta typebot"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=*UniConsultas*\nTodas as consultas em um só lugar!\n\n------- / / -------\n\n## Consulta Score\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7680,
        1140
      ],
      "id": "ebbdeeb8-2b53-4132-958b-f79b5f23eb16",
      "name": "EvolutionAPI - Consulta"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: O link para download do PDF estará disponível por apenas 1 minuto. Após esse período, ele será deletado automaticamente.\n\n### PDF\n{{ $('Gerar PDF API1').item.json.FileUrl }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7880,
        1140
      ],
      "id": "d14fc355-2e46-4abc-b441-c52643c25599",
      "name": "EvolutionAPI - URLPDF"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Aguarde, realizando consulta..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        0
      ],
      "id": "679111ca-e0ed-4058-b9cd-344913be6737",
      "name": "EvolutionAPI - Realizando consulta",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "befa8f4c-31cb-4e19-8038-5e5e3086f7e1",
      "name": "Se site / bc",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        820,
        120
      ]
    }
  ],
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Mapa - Informações",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate6": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UniConsultas - OFFLINE": {
      "main": [
        [
          {
            "node": "Rede Quero Imóveis - OFFLINE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UniConsultas - ONLINE": {
      "main": [
        [
          {
            "node": "Rede Quero Imóveis - ONLINE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos": {
      "main": [
        [
          {
            "node": "Créditos a retirar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe": {
      "main": [
        [
          {
            "node": "Maior ou igual1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Crédito Arthur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos": {
      "main": [
        [
          {
            "node": "Verificar saldo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Disponíveis1": {
      "main": [
        [
          {
            "node": "Retirar Créditos2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Crédito Arthur": {
      "main": [
        [
          {
            "node": "Se crédito existe3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "API Crédito Offline",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Créditos a retirar1": {
      "main": [
        [
          {
            "node": "Se crédito existe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Maior ou igual1": {
      "main": [
        [
          {
            "node": "Retirar Créditos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Disponíveis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar saldo": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados N8N": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If26": {
      "main": [
        [
          {
            "node": "Se site / bc",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If28": {
      "main": [
        [
          {
            "node": "HTTP Request9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If27": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request10",
            "type": "main",
            "index": 0
          },
          {
            "node": "Acompanhar consulta site (Botconversa)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request10": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados N8N",
            "type": "main",
            "index": 0
          },
          {
            "node": "EvolutionAPI - Realizando consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook3": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Obter Logo Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Code Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Horário funcionamento": {
      "main": [
        [
          {
            "node": "Verificar Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Horário funcionamento": {
      "main": [
        [
          {
            "node": "Horário funcionamento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fora do horário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Horário funcionamento1": {
      "main": [
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fora do horário": {
      "main": [
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos2": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API Crédito Offline": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot": {
      "main": [
        [
          {
            "node": "EvolutionAPI - CPF Invalido",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot1": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Erro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot2": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Consulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Dados Histórico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito maior ou igual1": {
      "main": [
        [
          {
            "node": "minerdapifoda2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se site / bc1": {
      "main": [
        [
          {
            "node": "minerdapifoda2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Site1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito inferior1": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Site1": {
      "main": [
        [
          {
            "node": "Crédito maior ou igual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se base44": {
      "main": [
        [
          {
            "node": "Base44 API - RetornoConsulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta-base44": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados Histórico": {
      "main": [
        [
          {
            "node": "Base44 API - Histórico",
            "type": "main",
            "index": 0
          },
          {
            "node": "Base44 API - Última Consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - RetornoConsulta": {
      "main": [
        [
          {
            "node": "resposta-base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - Erro Consulta": {
      "main": [
        [
          {
            "node": "typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields16": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Edit Fields16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If50": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code Formatar HTML": {
      "main": [
        [
          {
            "node": "Gerar PDF API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "If22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If22": {
      "main": [
        [
          {
            "node": "Code Formatar HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request11": {
      "main": [
        [
          {
            "node": "If30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If30": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar PDF API1": {
      "main": [
        [
          {
            "node": "Se base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "If50",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code19": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If52": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas2": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "If51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If51": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obter Logo Supabase": {
      "main": [
        [
          {
            "node": "If30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda2": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Code19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - CPF Invalido": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Erro": {
      "main": [
        [
          {
            "node": "Base44 API - Erro Consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Sem credito": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If23": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Sem credito",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crédito inferior1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Consulta": {
      "main": [
        [
          {
            "node": "EvolutionAPI - URLPDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - URLPDF": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se site / bc": {
      "main": [
        [
          {
            "node": "Se site / bc1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "HTTP Request11": [
      {
        "json": {
          "count": 1,
          "next": null,
          "previous": null,
          "results": [
            {
              "id": 3,
              "order": "2.00000000000000000000",
              "Telefone": "+553799781110",
              "Titulo Consultas": "UniConsultas",
              "URL PDF": "11HQEpkA-HEprYtECt9loSst9Jdm3huIX1KfXnsSX_30",
              "URL PDF Imagem": "https://i.imgur.com/g0gImpK.jpeg"
            }
          ]
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "n8n.redequeroimoveis.com",
            "content-length": "239",
            "sentry-trace": "ca7d19045700442cad95943698219935-aa4bf53cfdbab3bc-1",
            "baggage": "sentry-trace_id=ca7d19045700442cad95943698219935,sentry-environment=production_new,sentry-release=02d07f3e500f58be9468b0c97358be5c63d281ff,sentry-public_key=af3c6636fa6e4f89948eaa4e575b3286,sentry-transaction=/api/v1/blocks_integration/test_request/,sentry-sample_rate=0.02,sentry-sampled=true",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "content-type": "application/json"
          },
          "params": {},
          "query": {},
          "body": {
            "CPF": "42545579149",
            "Webhook": "https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/nicY2k7dGPcg/",
            "Telefone": "553799781110",
            "URL_LogoPDF": "11HQEpkA-HEprYtECt9loSst9Jdm3huIX1KfXnsSX_30",
            "Tipo consulta": "CPF"
          },
          "webhookUrl": "https://n8n.redequeroimoveis.com:5678/webhook-test/valido-cadastro_score",
          "executionMode": "test"
        }
      }
    ],
    "minerdapifoda": [
      {
        "json": {
          "status": 200,
          "resultado": {
            "DADOS": [
              {
                "CPF": "42545579149",
                "NOME": "CLAUDIO GUIMARAES BRANDAO DA SILVA",
                "SEXO": "M",
                "NASC": "19/12/1969",
                "NOME_MAE": "MARIA IONETE GUIMARAES BRANDAO",
                "NOME_PAI": "",
                "ESTCIV": "",
                "NACIONALID": "",
                "RG": "23999575082188",
                "ORGAO_EMISSOR": "SSP",
                "UF_EMISSAO": "GO",
                "DT_OB": "",
                "RENDA": "7489,19",
                "DT_INFORMACAO": "22/10/2007",
                "TITULO_ELEITOR": ""
              }
            ],
            "EMAIL": [
              {
                "EMAIL": "claudiogbs@hotmail.com"
              },
              {
                "EMAIL": "claudio.bsilva@inss.gov.br"
              },
              {
                "EMAIL": "cseabra@uefs.br"
              },
              {
                "EMAIL": "amauri@futuracontabil.com.br"
              },
              {
                "EMAIL": "goias@pmb.org.br"
              }
            ],
            "HISTORICO_TELEFONES": [
              {
                "DDD": "62",
                "TELEFONE": "981429010",
                "TIPO_TELEFONE": "3",
                "DT_INCLUSAO": "22/10/2010",
                "DT_INFORMACAO": null,
                "SIGILO": "",
                "NSU": "",
                "CLASSIFICACAO": "A0"
              },
              {
                "DDD": "62",
                "TELEFONE": "30937644",
                "TIPO_TELEFONE": "1",
                "DT_INCLUSAO": "06/05/2012",
                "DT_INFORMACAO": null,
                "SIGILO": "",
                "NSU": "",
                "CLASSIFICACAO": "A0"
              },
              {
                "DDD": "62",
                "TELEFONE": "32251235",
                "TIPO_TELEFONE": "2",
                "DT_INCLUSAO": "03/03/2013",
                "DT_INFORMACAO": "14/12/2012",
                "SIGILO": "",
                "NSU": "000000015207246",
                "CLASSIFICACAO": "D"
              },
              {
                "DDD": "62",
                "TELEFONE": "34376440",
                "TIPO_TELEFONE": "1",
                "DT_INCLUSAO": "15/12/2014",
                "DT_INFORMACAO": "07/12/2012",
                "SIGILO": "",
                "NSU": "000000622316367",
                "CLASSIFICACAO": "D"
              },
              {
                "DDD": "62",
                "TELEFONE": "36247273",
                "TIPO_TELEFONE": "1",
                "DT_INCLUSAO": "20/03/2018",
                "DT_INFORMACAO": "07/08/2017",
                "SIGILO": "",
                "NSU": "",
                "CLASSIFICACAO": "B"
              }
            ],
            "PARENTES": [
              {
                "VINCULO": "MAE",
                "CPF_VINCULO": null,
                "NOME_VINCULO": "MARIA IONETE GUIMARAES BRANDAO"
              }
            ],
            "PODER_AQUISITIVO": [
              {
                "COD_PODER_AQUISITIVO": 6,
                "PODER_AQUISITIVO": "ALTO",
                "RENDA_PODER_AQUISITIVO": "De R$ 7489.00",
                "FX_PODER_AQUISITIVO": "De R$ 7017 até� R$ 11742"
              }
            ],
            "ENDERECOS": [
              {
                "LOGR_TIPO": "R",
                "LOGR_NOME": "QUINZE DE NOVEMBRO",
                "LOGR_NUMERO": "20",
                "LOGR_COMPLEMENTO": null,
                "BAIRRO": "NULL",
                "CIDADE": "URUACU",
                "UF": "GO",
                "CEP": "76400000",
                "DT_ATUALIZACAO": "25/06/2018"
              },
              {
                "LOGR_TIPO": "R",
                "LOGR_NOME": "JOAO DE ABREU",
                "LOGR_NUMERO": "SN",
                "LOGR_COMPLEMENTO": "ED EURO 116",
                "BAIRRO": "ST OESTE",
                "CIDADE": "GOIANIA",
                "UF": "GO",
                "CEP": "74120110",
                "DT_ATUALIZACAO": "20/08/2018"
              },
              {
                "LOGR_TIPO": "R",
                "LOGR_NOME": "JOAO DE ABREU",
                "LOGR_NUMERO": "116",
                "LOGR_COMPLEMENTO": "S 705 B",
                "BAIRRO": "ST OESTE",
                "CIDADE": "GOIANIA",
                "UF": "GO",
                "CEP": "74120110",
                "DT_ATUALIZACAO": null
              },
              {
                "LOGR_TIPO": "R",
                "LOGR_NOME": "T 55",
                "LOGR_NUMERO": "NULL",
                "LOGR_COMPLEMENTO": "Q101 LT7 ED EASY LIFE RES550",
                "BAIRRO": "ST BUENO",
                "CIDADE": "GOIANIA",
                "UF": "GO",
                "CEP": "74215170",
                "DT_ATUALIZACAO": null
              }
            ],
            "PIS": [
              {
                "PIS": 17071540282
              }
            ],
            "UNIVERSITARIO": [],
            "SCORE": [
              {
                "CSB8": "46",
                "CSB8_FAIXA": "ALTISSIMO",
                "CSBA": 68,
                "CSBA_FAIXA": "ALTISSIMO"
              }
            ],
            "IRPF": [
              {
                "Sit_Receita_Federal": "IMPOSTO A PAGAR",
                "Cod_Agencia": "",
                "Instituicao_Bancaria": "",
                "DocNumber": 42545579149
              },
              {
                "Sit_Receita_Federal": "SUA DECLARACAO ESTA NA BASE DE DADOS DA RECEITA FEDERAL",
                "Cod_Agencia": "",
                "Instituicao_Bancaria": "",
                "DocNumber": 42545579149
              },
              {
                "Sit_Receita_Federal": "SUA DECLARACAO JA FOI PROCESSADA",
                "Cod_Agencia": "",
                "Instituicao_Bancaria": "",
                "DocNumber": 42545579149
              },
              {
                "Sit_Receita_Federal": "SUA DECLARACAO ESTA NA BASE DE DADOS DA RECEITA FEDERAL",
                "Cod_Agencia": "",
                "Instituicao_Bancaria": "",
                "DocNumber": 42545579149
              }
            ],
            "TSE": []
          }
        }
      }
    ],
    "HTTP Request": [
      {
        "json": {
          "HEADER": {
            "INFORMACOES_RETORNO": {
              "VERSAO": "20180521",
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "CHAVE_CONSULTA": "2523903",
              "PRODUTO": "1360-SCORE CPF/CNPJ",
              "CLIENTE": "40.126.612/0001-40-Rede Quero Imoveis",
              "DATA_HORA_CONSULTA": "20/05/2025 09:16",
              "TERMINAL": "",
              "SOLICITANTE": "IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)",
              "PDF": "https://api.iconsultei.com.br/tools/generate-pdf.aspx?file_code=7k8TyNi5oUULs9xABtrRcCAc1CmI2n073j7sXjMB6jc%3d",
              "ENTIDADE": "26",
              "REQUISICAO": "d09f97685b91489389cbef36431c94a4/20052025091620",
              "TEMPO_RESPOSTA": {
                "INICIO": "1747743380,29546",
                "FINAL": "1747743385,89731",
                "INTERVALO": "5,602"
              },
              "INFORM_EXTERNO": {
                "REQUISICAO_EXTERNA": "52b4f99966e34d67b4648d3e428d380a/20052025091623",
                "ENTIDADE_EXTERNA": "42",
                "CHAVE_EXTERNA": "1314295"
              }
            },
            "PARAMETROS": {
              "CPFCNPJ": "42545579149"
            },
            "DADOS_RETORNADOS": {
              "DADOS_RECEITA_FEDERAL": "0",
              "ALERTA_DOCUMENTOS_ROUBADOS": "0",
              "DADOS_AGENCIA_BANCARIA": "0",
              "PROTESTO_SINTETICO": "0",
              "PROTESTO_ANALITICO": "0",
              "ENDERECOS": "0",
              "FALENCIAS_ACOES_RECUPERACOES": "0",
              "INFORMACOES_ELEITORAIS": "0",
              "QUADRO_SOCIETARIO": "0",
              "PARTICIPACAO_EM_EMPRESAS": "0",
              "PENDENCIAS_INTERNAS": "0",
              "PENDENCIAS_FINANCEIRAS": "0",
              "INFORMACOES_DA_EMPRESA": "0",
              "CCF_BACEN": "0",
              "CCF_VAREJO": "0",
              "RECHEQUE_ONLINE": "0",
              "RECHEQUE": "0",
              "CONTUMACIA": "0",
              "ENDERECO_DO_CEP": "0",
              "PASSAGENS_COMERCIAIS": "0",
              "INFORMACOES_ALERTAS_RESTRICOES": "0",
              "SCORE": "1",
              "ADMINISTRADORES_DA_EMPRESA": "0",
              "TITULOS_A_VENCER": "0",
              "HISTORICO_DE_PAGAMENTOS": "0",
              "REFERENCIA_DE_NEGOCIOS": "0",
              "PRINCIPAIS_FORNECEDORES": "0",
              "IDENTIFICACAO_PESSOA_FISICA": "0",
              "OCUPACAO_PESSOA_FISICA": "0",
              "PARTICIPACAO_EM_FALENCIAS": "0",
              "TELEFONE_FIXO": "0",
              "TITULAR_DO_TELEFONE": "0",
              "OUTROS_TELEFONES": "0",
              "TELEFONE_CELULAR": "0",
              "PARENTES": "0",
              "CONTATOS": "0",
              "LOCAIS_TRABALHO": "0",
              "TELEFONE_COMERCIAL": "0",
              "DADOS_GERAIS": "0",
              "VIZINHOS": "0",
              "RESIDENTES": "0",
              "BENEFICIO": "0",
              "EMAILS": "0",
              "INFOBUSCA": "0",
              "VINCULO_MESMO_ENDERECO": "0",
              "SOMENTE_TELEFONE": "0",
              "SOMENTE_ENDERECO": "0",
              "RELATORIO_TEXTO": "0",
              "VEICULOS_POR_DOCUMENTO": "0",
              "CNH": "0",
              "AGREGADOS": "0",
              "BIN_NACIONAL": "0",
              "BIN_ESTADUAL": "0",
              "GRAVAME": "0",
              "LEILAO": "0",
              "CONFERENCIA_MOTOR_E_CHASSI": "0",
              "HISTORICO_PROPRIETARIOS": "0",
              "HISTORICO_ROUBO_FURTO": "0",
              "ROUBO_FURTO": "0",
              "PERDA_TOTAL": "0",
              "ALERTAS": "0",
              "RECALL": "0",
              "DPVAT": "0",
              "DECODIFICADOR_DE_CHASSI": "0",
              "PRECIFICADOR": "0",
              "RENAJUD": "0",
              "RENACH": "0",
              "CRLV": "0",
              "REMARKETING": "0",
              "INDICIO_SINISTRO": "0",
              "PARECER_TECNICO": "0",
              "PENDENCIAS_REFIN": "0",
              "PENDENCIAS_VENCIDAS": "0",
              "LOCALIZADOR_AGREGADOS": "0",
              "CARACTERISTICAS_ADICIONAIS": "0",
              "LAUDO_CAUTELAR": "0",
              "DECISAO": "0",
              "LIMITE_CREDITO": "0",
              "FATURAMENTO_PRESUMIDO": "0",
              "PARTICIPACAO_SOCIO_ADM_OUTRAS_EMPRESAS": "0",
              "PARTICIPACOES_EMPRESAS_CONSULTADAS": "0",
              "HIST_CONSULTAS": "0",
              "ACOES_CIVEIS": "0",
              "FALENCIA_RECUPERACAO_JUDICIAL": "0",
              "ANALISE_KILOMETRAGEM": "0",
              "PONTUALIDADE_PAGTO": "0",
              "PROPRIETARIO_ATUAL_VEICULO": "0",
              "VALIDACAO_PESSOA_FISICA": "0",
              "VALIDACAO_PF_BASICA": "0",
              "VALIDACAO_PF_BIOMETRIA_FACE": "0",
              "VALIDACAO_PF_CNH": "0",
              "VALIDACAO_PF_DOCUMENTO": "0",
              "VALIDACAO_PF_ENDERECO": "0",
              "VALIDACAO_PF_FILIACAO": "0",
              "AUTO_VISTORIA": "0",
              "INDICE_SECURITARIO": "0",
              "CALCULO_VALORIZACAO": "0",
              "ATPVE": "0",
              "CREDITO_CONCEDIDO": "0",
              "RENDA_PRESUMIDA": "0",
              "COMPROMETIMENTO_PAGTO": "0",
              "LEILAO_CONJUGADO": "0",
              "CSV": "0",
              "RENAINF": "0",
              "RELATORIO_ARQUIVO": "0",
              "INDICIO_SINISTRO_CONJUGADO": "0",
              "CONSULTA_GENERICA": "0",
              "BATIDOS": "0",
              "RELATORIO_SCR": "0",
              "CADIN": "0",
              "ACOES_TRABALHISTAS": "0",
              "RELATORIO_SCR_SINTETICO": "0",
              "CPR": "0",
              "FICHA_TECNICA_VEICULAR": "0",
              "CHECK_LIST_VEICULAR": "0",
              "DIVIDA_ATIVA_PESSOA_FISICA": "0",
              "DIVIDA_ATIVA_PESSOA_JURIDICA": "0",
              "PENDENCIAS_ISP": "0",
              "RELATORIO_JURIDICO_EMPRESARIAL": "0",
              "INFORMACOES_CRIMINAIS": "0",
              "PROCURADOS_JUSTICA": "0",
              "RELATORIO_JURIDICO_PESSOA_FISICA": "0",
              "DETALHAMENTO_ACAO_JUDICIAL": "0",
              "RELATORIO_IMOVEIS": "0",
              "DEBITOS_IPVA": "0",
              "DEBITO_DIRETO_AUTORIZADO": "0",
              "CONTROLE_POSITIVO": "0",
              "ALERTA_INDICIO": "0",
              "RELATORIO_CREDITICIO_ARQUIVO": "0",
              "IMAGENS_VEICULO": "0",
              "RELATORIO_SCR_ENCAPSULADO": "0",
              "RESTRICOES_FINANCEIRAS": "0",
              "ALERTA_VEICULAR_PROPRIEDADE": "0",
              "MOTOR_CREDITO": "0",
              "ALTERACAO_CARACTERISTICAS": "0",
              "DEBITOS_VEICULARES": "0"
            },
            "CONTROLE": {
              "QUANTIDADE_OCORRENCIAS": "1",
              "OCORRENCIAS": [
                {
                  "CONTEUDO": "378",
                  "FONTE": "136",
                  "STATUS": "1"
                }
              ]
            }
          },
          "CREDCADASTRAL": {
            "SCORES": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "QUANTIDADE_OCORRENCIAS": "1",
              "OCORRENCIAS": [
                {
                  "LAYOUT": "SCSIMPLE2020",
                  "TIPO_SCORE": "SCORE 6 MESES",
                  "SCORE": "708",
                  "EXECUCAO": "NULO",
                  "DESCR_PLANO": "NULO",
                  "DESCR_SCORE": "SCORE 6 MESES",
                  "CLASSIF_NRO": "NULO",
                  "CLASSIF_ABC": "NULO",
                  "PROBABILIDADE_INADIMPLENCIA": "19,69%",
                  "TEXTO": "A CHANCE DE UM CONSUMIDOR, COM SCORE ENTRE 701 E 800, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES E DE 80,31%",
                  "RISCO": "A CHANCE DE UM CONSUMIDOR, COM SCORE ENTRE 701 E 800, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES E DE 80,31%",
                  "MODELO_SCORE": "",
                  "INFORMANTE": "BASE I"
                }
              ]
            }
          },
          "VEICULAR": {}
        }
      }
    ],
    "Dados - ehmconsultas": [
      {
        "json": {
          "DATA": {
            "Version": "1.0",
            "Status": 200,
            "DADOS_PESSOAIS": [
              {
                "CPF": "42545579149",
                "NOME": "CLAUDIO GUIMARAES BRANDAO DA SILVA",
                "SEXO": "M",
                "NASCIMENTO": "1969-12-19 00:00:00",
                "NOME_CIVIL": "Sem Informação",
                "NOME_MAE": "MARIA IONETE GUIMARAES BRANDAO",
                "NOME_PAI": "Sem Informação",
                "ESTADO_CIVIL": "Sem Informação",
                "RG": "23999575082188",
                "ORGAO_EMISSOR": "SSP",
                "UF_EMISSAO": "GO",
                "NACIONALIDADE": "Sem Informação",
                "CPF_CONJUGE": "Sem Informação",
                "SEXO_RETRATADO": "M",
                "OB_UNB": "Sem Informação",
                "DATA_OBTO": "Sem Informação",
                "CBO": "252105",
                "ID_CBO": "2500",
                "CODIGO_MOSAIC": "A01",
                "RENDA": "Sem Informação",
                "TITULO_ELEITOR": "True",
                "CODIGO_MOSAIC_NOVO": "2014-10-15 13:20:48.473000000",
                "CODIGO_MOSAIC_SECUNDARIO": "2014-09-11 10:16:08.800000000"
              }
            ],
            "PARENTES": [
              {
                "NOME": "MARIA IONETE GUIMARAES BRANDAO",
                "CPF": "Sem informação",
                "VINCULO": "MAE"
              }
            ],
            "PIS": [
              {
                "PIS": "17071540282",
                "DT_INCLUSAO": "Sem informação"
              },
              {
                "PIS": "17071540282",
                "DT_INCLUSAO": "Sem informação"
              }
            ],
            "NIS": [
              "Sem Informação"
            ],
            "CNS": [
              "Sem Informação"
            ],
            "DADOS_ELEITORAIS": [
              "Sem Informação"
            ],
            "SCORE_BASE": [
              {
                "SCORE_SERASA": "46",
                "SCORE_SERASA_FAIXA": "ALTISSIMO",
                "SCORE_BOA_VISTA": "68",
                "SCORE_BOA_VISTA_FAIXA": "ALTISSIMO"
              }
            ],
            "SCORE_NOVO": [
              {
                "SCORE_SERASA": "68"
              }
            ],
            "SCORE_ANTIGO": [
              {
                "SCORE_SERASA": "46",
                "SCORE_SERASA_FAIXA": "ALTISSIMO",
                "SCORE_BOA_VISTA": "93",
                "SCORE_BOA_VISTA_FAIXA": "ALTISSIMO"
              }
            ],
            "IRPF": [
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2016",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "IMPOSTO A PAGAR"
              },
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2015",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "SUA DECLARACAO ESTA NA BASE DE DADOS DA RECEITA FEDERAL"
              },
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2018",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "SUA DECLARACAO ESTA NA BASE DE DADOS DA RECEITA FEDERAL"
              },
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2017",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "SUA DECLARACAO JA FOI PROCESSADA"
              }
            ],
            "PODER_AQUISITIVO": [
              {
                "PODER_AQUISITIVO": "ALTO",
                "RENDA_PODER_AQUISITIVO": "7489.187328499634",
                "FX_PODER_AQUISITIVO": "De R$ 7017 até R$ 11742"
              }
            ],
            "CLASSE_SOCIAL": [
              {
                "CLASSE_SOCIAL": "B",
                "SUB_CLASSE_SOCIAL": "B1"
              },
              {
                "CLASSE_SOCIAL": "B",
                "SUB_CLASSE_SOCIAL": "B1"
              }
            ],
            "PROFISSAO": [
              "Sem Informação"
            ],
            "PRODUTOR_RURAL": [
              "Sem Informação"
            ],
            "QUADRO_SOCIETARIO": [
              {
                "CNPJ": "62683842000142",
                "RAZAO_SOCIAL": "LABOR DE ANALISES CLINICAS DR SACRAMENTO LTDA",
                "NOME_FANTASIA": "Sem informação",
                "PARTICIPACAO_SOCIO": "1.00"
              },
              {
                "CNPJ": "18054827000143",
                "RAZAO_SOCIAL": "GUIMARAES BRANDAO PERICIAS SERV MEDICOS EIRELI",
                "NOME_FANTASIA": "GUIMARAES BRANDAO PERICIAS SERV MEDICOS",
                "PARTICIPACAO_SOCIO": "100.00"
              }
            ],
            "BOLSA_FAMILIA": [
              "Sem Informação"
            ],
            "FGTS": [
              {
                "PIS": "17071540282",
                "CPF": "42545579149"
              },
              {
                "PIS": "17071540282",
                "CPF": "42545579149"
              }
            ],
            "ESCOLARIDADE": [
              {
                "ESCOLARIDADE": "SUPERIOR COMPLETO"
              }
            ],
            "UNIVERSIDADE": [
              "Sem Informação"
            ],
            "SERVIDOR_PUBLICO": [
              {
                "DESCRICAO_CARGO": "PERITO MEDICO PREVIDENCIARIO",
                "ORG_LOTACAO": "INSTITUTO NACIONAL DE SEGURO SOCIAL",
                "ORG_EXERCICIO": "MINISTERIO DA PREVIDENCIA SOCIAL",
                "RENDA_BRUTA": "14305.74",
                "SERV_PB": "FEDERAL",
                "OBS": "Sem informação",
                "AFASTAMENTO": "NAO",
                "VINCULO": "ATIVO",
                "FUNCAO": "Sem informação",
                "SITUACAO": "Sem informação",
                "REFERENCIA": "Sem informação",
                "ORGSUP_LOTACAO": "Sem informação",
                "FAIXA_SALARIAL": "Sem informação",
                "TOTAL_HONORARIOS": "Sem informação",
                "CBO_ATRIBUIDO": "Sem informação"
              },
              {
                "DESCRICAO_CARGO": "PERITO MEDICO PREVIDENCIARIO",
                "ORG_LOTACAO": "INSTITUTO NACIONAL DE SEGURO SOCIAL",
                "ORG_EXERCICIO": "INSTITUTO NACIONAL DE SEGURO SOCIAL",
                "RENDA_BRUTA": "12082.66",
                "SERV_PB": "CIVIL",
                "OBS": "Sem informação",
                "AFASTAMENTO": "NAO",
                "VINCULO": "Sem informação",
                "FUNCAO": "Sem informação",
                "SITUACAO": "Sem informação",
                "REFERENCIA": "Sem informação",
                "ORGSUP_LOTACAO": "Sem informação",
                "FAIXA_SALARIAL": "Sem informação",
                "TOTAL_HONORARIOS": "Sem informação",
                "CBO_ATRIBUIDO": "Sem informação"
              }
            ],
            "MINHA_CASA_MINHA_VIDA": [
              "Sem Informação"
            ],
            "ENDERECOS": [
              {
                "TIPO": "R",
                "NOME": "QUINZE DE NOVEMBRO",
                "NUMERO": "20",
                "COMPLEMENTO": "Sem Informação",
                "BAIRRO": "Sem informação",
                "CIDADE": "URUACU",
                "UF": "GO",
                "CEP": "76400000"
              },
              {
                "TIPO": "R",
                "NOME": "JOAO DE ABREU",
                "NUMERO": "Sem Informação",
                "COMPLEMENTO": "Q E 8 LT 10 12 14 42 44 S",
                "BAIRRO": "ST OESTE",
                "CIDADE": "GOIANIA",
                "UF": "GO",
                "CEP": "74120110"
              },
              {
                "TIPO": "R",
                "NOME": "JOAO DE ABREU",
                "NUMERO": "116",
                "COMPLEMENTO": "S 705 B",
                "BAIRRO": "ST OESTE",
                "CIDADE": "GOIANIA",
                "UF": "GO",
                "CEP": "74120110"
              },
              {
                "TIPO": "R",
                "NOME": "JOAO DE ABREU",
                "NUMERO": "SN",
                "COMPLEMENTO": "ED EURO 116",
                "BAIRRO": "ST OESTE",
                "CIDADE": "GOIANIA",
                "UF": "GO",
                "CEP": "74120110"
              },
              {
                "TIPO": "R",
                "NOME": "T 55",
                "NUMERO": "Sem informação",
                "COMPLEMENTO": "Q101 LT7 ED EASY LIFE RES550",
                "BAIRRO": "ST BUENO",
                "CIDADE": "GOIANIA",
                "UF": "GO",
                "CEP": "74215170"
              }
            ],
            "EMAIL_BASE": [
              {
                "EMAIL": "claudiogbs@hotmail.com",
                "EMAIL_SCORE": "OTIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "claudio.bsilva@inss.gov.br",
                "EMAIL_SCORE": "BOM",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "cseabra@uefs.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "amauri@futuracontabil.com.br",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "goias@pmb.org.br",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              }
            ],
            "EMAIL_NEW": [
              {
                "EMAIL": "claudiogbs@hotmail.com",
                "EMAIL_SCORE": "OTIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "claudio.bsilva@inss.gov.br",
                "EMAIL_SCORE": "BOM",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "cseabra@uefs.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "amauri@futuracontabil.com.br",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "goias@pmb.org.br",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              }
            ],
            "EMAIL_NOVO": [
              {
                "EMAIL": "claudiogbs@hotmail.com",
                "EMAIL_SCORE": "OTIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "claudio.bsilva@inss.gov.br",
                "EMAIL_SCORE": "BOM",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "cseabra@uefs.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "amauri@futuracontabil.com.br",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "goias@pmb.org.br",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              }
            ],
            "TELEFONES": [
              {
                "TELEFONE": "62981429010",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "6230937644",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "6232251235",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "6234376440",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "6236247273",
                "CLASSIFICACAO": "B"
              },
              {
                "TELEFONE": "6234376440",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "62981429010",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "6230937644",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "6232251235",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "6236247273",
                "CLASSIFICACAO": "B"
              }
            ]
          }
        }
      }
    ],
    "Dados - ehmconsultas2": [
      {
        "json": {
          "Version": "1.0",
          "Status": 200,
          "Data": [
            {
              "NOME": "ANDERSON DOS SANTOS JORGE",
              "NOME_SOCIAL": null,
              "CPF": "32676277880",
              "DATA_NASCIMENTO": "25/06/1983",
              "SEXO": "M",
              "IDENTIDADE_GENERO": null,
              "NOME_MAE": "MARIA JUSILENE DOS SANTOS JORGE",
              "NOME_PAI": null,
              "CNS": "706003838968046",
              "OBITO": "false",
              "DATA_OBITO": null,
              "ESTADO_CIVIL": null,
              "ESCOLARIDADE": null,
              "TELEFONE": "1238420788",
              "MUNICIPIO_NASCIMENTO": "999999",
              "LOGRADOURO": "R GOES",
              "NUMERO": "21",
              "BAIRRO": "PEREQUE MIRIM",
              "COMPLEMENTO": null,
              "MUNICIPIO": "355540",
              "UF": "SP",
              "PAIS": "1",
              "CEP": "11680000",
              "NUMERO_RG": null,
              "ORGAO_EMISSOR_RG": null,
              "UF_RG": null,
              "EMAIL": null,
              "EMAIL2": null
            }
          ]
        }
      }
    ],
    "minerdapifoda2": [
      {
        "json": {
          "DADOS": [
            {
              "CPF": "11383223696",
              "NOME": "ARTHUR BALDIOTTI MENDONCA ALVARES",
              "SEXO": "M",
              "NASC": "03/04/1993",
              "NOME_MAE": "MARIA LUIZA BALDIOTTI MENDONCA",
              "NOME_PAI": "",
              "ESTCIV": "",
              "NACIONALID": "",
              "RG": "",
              "ORGAO_EMISSOR": "",
              "UF_EMISSAO": "",
              "DT_OB": "",
              "RENDA": "994,76",
              "DT_INFORMACAO": null,
              "TITULO_ELEITOR": ""
            }
          ],
          "EMAIL": [
            {
              "EMAIL": "tiosam_importados@hotmail.com"
            },
            {
              "EMAIL": "arthurbaldiotti@hotmail.com"
            }
          ],
          "HISTORICO_TELEFONES": [
            {
              "DDD": "37",
              "TELEFONE": "999781110",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "20/07/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "A0"
            },
            {
              "DDD": "31",
              "TELEFONE": "33344803",
              "TIPO_TELEFONE": "1",
              "DT_INCLUSAO": "27/07/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "A2"
            },
            {
              "DDD": "31",
              "TELEFONE": "975122221",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "27/07/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "A2"
            },
            {
              "DDD": "31",
              "TELEFONE": "997781110",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "08/11/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "D"
            },
            {
              "DDD": "37",
              "TELEFONE": "999493378",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "08/11/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "D"
            }
          ],
          "PARENTES": [
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 57629030606,
              "NOME_VINCULO": "RITA DE CASSIA CARVALHO BALDIOTTI"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 52162486687,
              "NOME_VINCULO": "MARCIA APARECIDA CARVALHO BALDIOTTI PONCE"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 18081223649,
              "NOME_VINCULO": "LUIZ MIGUEL CARVALHO BALDIOTTI"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 31243916672,
              "NOME_VINCULO": "REGINA AUXILIADORA CARVALHO BALDIOTTI VENCATO"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 7769001617,
              "NOME_VINCULO": "MARCELA BALDIOTTI PONCE"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 10191111600,
              "NOME_VINCULO": "VICTOR BALDIOTTI VENCATO"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 10219297606,
              "NOME_VINCULO": "LIVIA BALDIOTTI RIBEIRO"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 10191110620,
              "NOME_VINCULO": "BIANCA BALDIOTTI VENCATO"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 28911458600,
              "NOME_VINCULO": "FERNANDO ANTONIO CARVALHO BALDIOTTI"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 27914232653,
              "NOME_VINCULO": "ANGELICA DE FATIMA CARVALHO BALDIOTTI FERREIRA"
            },
            {
              "VINCULO": "MAE",
              "CPF_VINCULO": 43315763615,
              "NOME_VINCULO": "MARIA LUIZA BALDIOTTI MENDONCA"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 10602393612,
              "NOME_VINCULO": "JULIA BALDIOTTI RIBEIRO"
            },
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 11628911654,
              "NOME_VINCULO": "AUGUSTO BALDIOTTI MENDONCA ALVARES"
            },
            {
              "VINCULO": "AVO",
              "CPF_VINCULO": 7600355639,
              "NOME_VINCULO": "ZENIRA CARVALHO BALDIOTTI"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 50132105691,
              "NOME_VINCULO": "LUCIA HELENA CARVALHO BALDIOTTI RIBEIRO"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 5128883612,
              "NOME_VINCULO": "PATRICIA BALDIOTTI FREITAS ARAUJO"
            }
          ],
          "PODER_AQUISITIVO": [
            {
              "COD_PODER_AQUISITIVO": 2,
              "PODER_AQUISITIVO": "BAIXO",
              "RENDA_PODER_AQUISITIVO": "De R$ 994.00",
              "FX_PODER_AQUISITIVO": "De R$ 630 até� R$ 1018"
            }
          ],
          "ENDERECOS": [
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "FRANCISCO SALES",
              "LOGR_NUMERO": "129",
              "LOGR_COMPLEMENTO": "AP 602",
              "BAIRRO": "CENTRO",
              "CIDADE": "PARA DE MINAS",
              "UF": "MG",
              "CEP": "35660017",
              "DT_ATUALIZACAO": "29/07/2019"
            }
          ],
          "PIS": [],
          "UNIVERSITARIO": [],
          "SCORE": [
            {
              "CSB8": "606",
              "CSB8_FAIXA": "BAIXO",
              "CSBA": 288,
              "CSBA_FAIXA": "ALTO"
            }
          ],
          "IRPF": [
            {
              "DocNumber": 11383223696,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "0000",
              "Lote": "0",
              "Sit_Receita_Federal": "SALDO INEXISTENTE DE IMPOSTO A PAGAR OU A RESTITUIR",
              "CADASTRO_ID": 3963,
              "CPF": 11383223696,
              "CONTATOS_ID": 333399180
            }
          ],
          "TSE": [],
          "INTERESSES": [
            {
              "cpf": 11383223696,
              "creditoPessoalPreAprovado": 1,
              "creditoImobiliarioPreAprovado": 0,
              "financiamentoDeVeiculoPreAprovado": 1,
              "classeMedia": 0,
              "debitoAutmatico": 1,
              "possuiLuxo": 1,
              "possuiInvestimentos": 1,
              "possuiCartaoDeCredito": 1,
              "possuiMultiplosCartoes": 1,
              "possuiContaAltoPadrao": 0,
              "possuiCartaoBlack": 0,
              "possuiCartaoPrime": 0,
              "possuiCelularPrePago": 1,
              "possuiCelularPosPago": 1,
              "possuiMilhasAcumuladas": 1,
              "possuiCasaPropria": 1,
              "possuiDescontos": 1,
              "possuiContasCorrentes": 1,
              "possuiSeguroAutomotivo": 1,
              "possuiPrevidenciaPrivada": 1,
              "possuiInternetBanking": 1,
              "possuiTokenInstalado": 1,
              "realizouViagens": 1,
              "creditoPessoal": 68,
              "financiamentoVeiculo": 92,
              "compraInternet": 34,
              "multiplosCartoes": 56,
              "cartaoPrime": 35,
              "tvCabo": 54,
              "bandaLarga": 67,
              "casaPropria": 77,
              "celularPrePago": 54,
              "celularPosPago": 57,
              "creditoMobiliario": 0,
              "seguroAutomotivo": 62,
              "seguroSaude": 49,
              "seguroVida": 27,
              "seguroResidencial": 52,
              "investimentos": 67,
              "consignado": 0,
              "previdenciaPrivada": 76,
              "resgateMilhas": 70,
              "cacadorDescontos": 50,
              "fitness": 56,
              "turismo": 63,
              "luxo": 53,
              "cinefilo": 60,
              "transportePublico": 45,
              "jogosOnline": 69,
              "videoGame": 68,
              "earlyAdopters": 56
            }
          ]
        }
      }
    ]
  },
  "versionId": "025f9112-d574-42c1-8e58-72f18d61ae39",
  "triggerCount": 1,
  "tags": []
}