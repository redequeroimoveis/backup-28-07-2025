{
  "createdAt": "2025-07-25T18:49:51.206Z",
  "updatedAt": "2025-07-25T19:14:21.000Z",
  "id": "5ILGSAyWPrUyIOiw",
  "name": "Dividas CPF 4-2 (ehmconsultas - dividas/multi /cpf) Eduardo",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b9fceadd-0e68-49ef-91f6-a7c1a02ccc24",
              "leftValue": "={{ $json.data.Nome }}",
              "rightValue": "200",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "1fcc84cf-06c3-4ab7-8a22-48251ba20709",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "496e6f17-e435-469b-8bdb-e20d5fa38140",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1460,
        1920
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "Consulta",
        "options": {}
      },
      "id": "436523a8-2fe9-46d4-bd87-7e57e807a973",
      "name": "Aggregate6",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4600,
        4120
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4c4b8b4-ac50-4977-b5b7-22b2d88b5eed",
              "name": "Créditos a retirar",
              "value": "={{ $('Dados N8N').item.json['Credito consulta'] }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "93ebdf41-1fa5-4d88-b37a-b0afe5e1029a",
      "name": "Créditos a retirar1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        9580,
        3540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "6611ca4d-c98b-4930-bf78-78785d12378b",
              "leftValue": "={{ $('Retornar Créditos1').item.json.creditos }}",
              "rightValue": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "aaf959a2-eebd-4278-9647-977642838e11",
      "name": "Maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        9960,
        3520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "86c5c14e-834c-4cdb-ac03-e8c2b20ceae7",
      "name": "Verificar saldo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10360,
        3500
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5d6fa895-7a56-4b48-b0f3-24cb2fb7b211",
      "name": "Retornar Créditos1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9400,
        3540
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Retornar Créditos1').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dd771d01-bbec-4eba-b64e-a41a5b254787",
      "name": "Se crédito existe1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        9760,
        3540
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "66fdcd2f-386a-4ed4-b4fa-a415bac9c63a",
      "name": "Retirar Créditos1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10160,
        3500
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad9c09c1-3aaf-4c42-ab43-9f8f30a12e99",
              "leftValue": "={{ $('Retornar Créditos1').item.json.creditos }}",
              "rightValue": "={{ $json.creditos }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "858e417d-f485-4936-946c-53cee07fdf25",
      "name": "If20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        10540,
        3500
      ]
    },
    {
      "parameters": {
        "content": "## Retirar Créditos",
        "height": 312,
        "width": 1453
      },
      "id": "af57764a-921e-46b4-a226-503aa1ea1125",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9320,
        3420
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Nome Consulta",
              "value": "={{ $json['Tipo Consulta'] }}",
              "type": "string"
            },
            {
              "id": "ac5a7a11-a016-4827-a7ae-88a6490e25ec",
              "name": "URL Consulta Padrão",
              "value": "-",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": "={{ $json['Credito consulta'] }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "1e18901c-24f9-4101-9eda-3f795b354925",
      "name": "Dados N8N",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -6200,
        1640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            },
            {
              "name": "Informações",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/_ /g, '_') }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "Tipo consulta",
              "value": "={{ $('Webhook').item.json.body['Tipo consulta'] }}"
            },
            {
              "name": "Pendências",
              "value": "={{ $('Aggregate6').item.json.Consulta[1].Pendencias.replace(/_ /g, '_') }}"
            },
            {
              "name": "Protestos",
              "value": "={{ $('Aggregate6').item.json.Consulta[3].Protesto.replace(/_ /g, '_') }}"
            },
            {
              "name": "SCPC",
              "value": "={{ $('Aggregate6').item.json.Consulta[2].SCPC.replace(/_ /g, '_').replace(/Cr\\uFFFDdito/g, 'Crédito') }}"
            },
            {
              "name": "URL PDF",
              "value": "=### PDF\n{{ $('IF PDF').item.json.FileUrl }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3d82d344-4787-4b3e-8730-7b566fc77c12",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8280,
        3520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64ebe726-e8ed-4fc7-b458-c3e743223880",
              "name": "api",
              "value": "cpf_pros",
              "type": "string"
            },
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Tipo Consulta",
              "value": "Consulta Serasa + SCPC Boa Vista + Protestos + Dados + Resumo IA (3 créditos)",
              "type": "string"
            },
            {
              "id": "ac5a7a11-a016-4827-a7ae-88a6490e25ec",
              "name": "URL Consulta Padrão",
              "value": "-",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": 3,
              "type": "number"
            },
            {
              "id": "c73091bc-7366-4591-a659-e5f3c90fc3e5",
              "name": "Prompt Resumo IA",
              "value": "=Você receberá dados financeiros e de pendências relacionadas a um CPF ou CNPJ, incluindo informações como dívidas, protestos, status de crédito e score. Sua tarefa é organizar essas informações de maneira clara e objetiva, estruturando-as em seções e terminando com um breve resumo da situação financeira da pessoa física ou jurídica.\n\nInstruções para a Estrutura e Redação:\nEstrutura dos Dados:\nInicie apresentando as principais informações do CPF ou CNPJ, como nome, data de nascimento, nome da mãe e situação na Receita Federal, se disponível.\nCrie uma seção que apresente, de forma resumida, todas as pendências financeiras, dívidas e protestos identificados.\nApresente o score de crédito e a probabilidade de inadimplência, se forem disponibilizados.\n\nResumo da Situação Financeira:\nElabore um parágrafo resumindo a situação financeira geral do CPF ou CNPJ.\nUse uma linguagem neutra e clara, apontando os riscos de crédito, quantidade de dívidas ou protestos e qualquer outra informação relevante que possa impactar a análise do perfil financeiro.\n\nObservações Importantes:\nNÃO exiba ou informe nenhum dado de contato, incluindo telefones, endereços ou e-mails.\nNÃO invente dados que não foram explicitamente fornecidos.\nSiga rigorosamente as normas de proteção de dados pessoais (LGPD), respeitando a privacidade do consultado.\n\nSegue abaixo um breve exemplo de resumo\n\"### Resumo da Situação Financeira\nRafael dos Santos Nogueira apresenta um histórico financeiro com múltiplas pendências, incluindo dívidas com instituições educacionais e um protesto registrado. O total das pendências varia, mas a principal dívida se destaca no valor de R$ 1.467,62. Essas ocorrências podem impactar negativamente seu acesso ao crédito. A situação atual sugere um certo risco de inadimplência e é recomendável que Rafael busque regularizar suas pendências para evitar complicações financeiras futuras.\"\n\nFaça um breve resumo com no máximo 700 caracteres de forma simples explicando a situação financeira utilizando todas as informações fornecidas. Não ignore nenhum dado. No resumo você não precisa escrever ou listar todas as pendências. Apenas resumir com um total e quantidade dos titulos abaixo.\nO titulo do resumo precisa ser exatamente \"### RESUMO DA SITUAÇÃO FINANCEIRA\" (EM LETRAS MAIÚSCULAS)\nUma observação. O titulo dos menus estão entre ##\nRetorne apenas os dados a partir de \"## RESUMO DA SITUAÇÃO FINANCEIRA\"\n\nAtenção, todos os dados e informações acima serve exclusivamente como exemplo.\nUtilize somente os dados abaixo para formatar o resumo:",
              "type": "string"
            },
            {
              "id": "7d6071af-8961-4ac5-8057-a43cc10be521",
              "name": "Prompt PDF",
              "value": "=Objetivo: Formatar os dados da consulta de crédito de forma estruturada e organizada, seguindo o modelo de análise de crédito do Serasa, retornando exclusivamente um código HTML.\nInstruções:\n* Retornar apenas o HTML, sem nenhum outro texto no output.\n* Seguir a estrutura de tabelas para organizar os dados.\n* Usar fontes de até 11px para informações dentro das tabelas.\n* Remover o título <h1>, mas adicionar duas quebras de linha (<br><br>) após a logo para espaçamento.\n* Não alterar o campo \"URL-LOGO\", pois ele será substituído dinamicamente.\n* Adicionar \"Resumo através de IA\" no final, com um resumo dos dados recebidos bem básico sem apresentar muitos os valores.\n* Incluir um rodapé com informações de confidencialidade e LGPD, usando fonte de 9px e alinhado à esquerda.\n* Nunca utilizar a expressão \"Dados do Cotista\", apenas \"Dados\".\nFormato esperado:\n* HTML bem estruturado, com seções claras.\n* Uso de <div> para blocos de informações e <table> para dados tabulares.\n* Listas <ul> para e-mails, telefones e parentes.\n* Footer fixo no final do relatório.\n* Caso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\n* É obrigatório que todas as informações fornecidas abaixo conste no HTML.\n* Se tiver \"_Sem pendências registradas._\", \"_Sem pendências._\" ou algo que comece e termine com \"_\", remova o \"_\".\n* Se o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\n* Se não existir nenhum email, não adicione no html Email\n* Se não existir nenhum telefone, não adicione no html Telefone\n* Se não existir nenhum Possíveis Parentes, não adicione no html Possíveis Parentes\n* Se email estiver vazio ou não existir, não crie no html <strong>Email:</strong>\n* Se telefone estiver vazio ou não existir, não crie no html <strong>Telefone:</strong>\n\nAdicione um texto no final com os dados recebidos de \"RESUMO ATRAVÉS DE IA\"\"\n\nAdicione também um rodapé na página com fonte tamanho 9 alinhado a esquerda da página com os seguintes dados:\n\"INFORMAÇÕES IMPORTANTES\nESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO , RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.\n\nMINUTA DE DECLARAÇÃO LGPD\nDECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.\"\n\nHTML DE EXEMPLO 1:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 12px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: center; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\">\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Identificação</h2>\n            <p><span class=\"info\">Nome:</span> ANDERSON DOS SANTOS JORGE</p>\n            <p><span class=\"info\">CPF:</span> 326.762.778-80</p>\n            <p><span class=\"info\">Data de Nascimento:</span> 25/06/1983</p>\n            <p><span class=\"info\">Nome da Mãe:</span> MARIA JUSILENE DOS SANTOS JORGE</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Contato</h2>\n            <ul>\n                <li>andersonsjorge@bol.com.br</li>\n                <li>ambientesimoveis@gmail.com</li>\n                <li>at-estevam@bol.com.br</li>\n                <li>contato@ambientesimoveis.com.br</li>\n                <li>andersondjorge@hotmail.com</li>\n            </ul>\n            <h2 class=\"section-header\">Telefones</h2>\n            <ul>\n                <li>5517991921913</li>\n                <li>1732515124</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Possíveis Parentes</h2>\n            <ul>\n                <li>REGIANE DOS SANTOS JORGE - IRMÃ(O)</li>\n                <li>ALEX DOS SANTOS JORGE - IRMÃO(O)</li>\n                <li>MARIA JUSILENE DOS SANTOS JORGE - MÃE</li>\n                <li>CRISTIANE DOS SANTOS COSTA - IRMÃ(O)</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Contrato</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>13/12/2021</td>\n                    <td>0001872649932</td>\n                    <td>R-CRED FINAN</td>\n                    <td>R$3.077,24</td>\n                </tr>\n                <tr>\n                    <td>12/09/2021</td>\n                    <td>015000229668</td>\n                    <td>R-CRED FINAN</td>\n                    <td>R$19.504,00</td>\n                </tr>\n                <tr>\n                    <td>10/12/2023</td>\n                    <td>237106</td>\n                    <td>R-EMPRES CTA</td>\n                    <td>R$156,06</td>\n                </tr>\n                <tr>\n                    <td>14/12/2022</td>\n                    <td>441388001</td>\n                    <td>R-OUTRAS OPE</td>\n                    <td>R$124,94</td>\n                </tr>\n                <tr>\n                    <td>05/03/2022</td>\n                    <td>10327001</td>\n                    <td>R-OUTRAS OPE</td>\n                    <td>R$124,94</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">SCPC</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Cidade</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>10/04/2023</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>BANCO C6 SA</td>\n                    <td>R$ 990,76</td>\n                </tr>\n                <tr>\n                    <td>31/12/2022</td>\n                    <td>UBATUBA</td>\n                    <td>SP-UTB/ESCOLA CRIAR-TE</td>\n                    <td>R$ 7.126,82</td>\n                </tr>\n                <tr>\n                    <td>17/06/2022</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>NU FINANCEIRA S/A</td>\n                    <td>R$ 640,68</td>\n                </tr>\n                <tr>\n                    <td>13/12/2021</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>ITAU UNIBANCO S/A</td>\n                    <td>R$ 3.077,24</td>\n                </tr>\n                <tr>\n                    <td>08/12/2021</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>LOJAS CEM/MATRIZ</td>\n                    <td>R$ 4.038,30</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Protestos</h2>\n            <table>\n                <tr>\n                    <th>Cidade</th>\n                    <th>Data</th>\n                    <th>Cartório</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>24/10/2024</td>\n                    <td>1</td>\n                    <td>R$728,15</td>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>02/04/2024</td>\n                    <td>1</td>\n                    <td>R$1.346,65</td>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>02/04/2024</td>\n                    <td>1</td>\n                    <td>R$846,81</td>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>21/12/2023</td>\n                    <td>1</td>\n                    <td>R$1.889,38</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>ANDERSON DOS SANTOS JORGE não apresenta pendências registradas em PENDÊNCIAS, SCPC ou PROTESTOS. Isso indica uma situação financeira sem restrições atuais, comprovando um histórico de crédito sem problemas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nHTML DE EXEMPLO 2:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\"><br><br>\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Nome:</span> CASSIUS ABRAHAN MENDES HADDAD</p>\n            <p><span class=\"info\">CPF:</span> 21991463839</p>\n            <p><span class=\"info\">Data de Nascimento:</span> 1982-06-02</p>\n            <p><span class=\"info\">Nome da Mãe:</span> BERNADETE MENDES HADDAD</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">E-mails</h2>\n            <ul>\n                <li>cassius.abrahan@superig.com.br</li>\n                <li>cahad@terra.com.br</li>\n                <li>carrijocalcados@terra.com.br</li>\n                <li>teletim1@terra.com.br</li>\n                <li>unidosporlimeira@gmail.com</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Possíveis Parentes</h2>\n            <ul>\n                <li>VANESSA HADDAD SCHERRER - IRMA(O)</li>\n                <li>DULCE PINHO MENDES DA SILVA - AVO</li>\n                <li>BERNADETE MENDES HADDAD - MAE</li>\n                <li>ROSANGELA APARECIDA MENDES DA SILVA - TIA(O)</li>\n                <li>LUIZ ROBERTO MENDES DA SILVA - TIA(O)</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">SCPC</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Protestos</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>Cassius Abrahan Mendes Haddad apresenta um histórico financeiro com apenas um score de crédito de 534, indicando uma chance de 59,25% de pagar compromissos financeiros em 6 meses. Apesar de não ter pendências registradas nos cadastros de inadimplentes (SCPC ou PROTESTOS), é importante lembrar que o score de crédito é apenas um indicador da situação financeira. É recomendável que Cassius busque manter um histórico financeiro saudável para evitar complicações futuras.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nHTML DE EXEMPLO 3:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\"><br><br>\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Nome:</span> ILIELSON DE LIMA PONTES FILHO</p>\n            <p><span class=\"info\">CPF:</span> 02401717218</p>\n            <p><span class=\"info\">Data de Nascimento:</span> 1993-01-21</p>\n            <p><span class=\"info\">Nome da Mãe:</span> ELZANIRA DA SILVA TENORIO</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">E-mails</h2>\n            <ul>\n                <li>ilielson220@hotmail.com</li>\n                <li>ilielson210@gmail.com</li>\n            </ul>\n            <h2 class=\"section-header\">Telefones</h2>\n            <ul>\n                <li>5517991921913</li>\n                <li>1732515124</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Cidade</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>08/01/2025</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>NU FINANCEIRA S/A</td>\n                    <td>R$ 135,31</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">SCPC</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Informante</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>08/01/2025</td>\n                    <td>NU FINANCEIRA S/A</td>\n                    <td>R$ 135,31</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Protestos</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>ILIELSON DE LIMA PONTES FILHO apresenta um histórico financeiro com uma pendência registrada, com um total de R$ 135,31. Embora não existam protestos, a presença de uma dívida pode impactar negativamente seu acesso ao crédito. Além disso, o score de crédito de 2 indica que há uma probabilidade de 99 em 100 de que o consumidor apresente débitos nos próximos 6 meses. É recomendável que Ilieelson busque regularizar suas pendências para evitar complicações financeiras futuras.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nImportante, escreva \"Inicio HTML\" e \"Fim HTML\" no inicio e no final. Somente isso. Não escreva mais nenhum dados fora do código.\nQuando for exatamente começar o código HTML, escreva da seguinte maneira: Inicio HTML\\n<!DOCTYPE html>\\n\nEscreva no código html todas as informações fornecidas. Não ignore nenhum dado.\nUma observação. O titulo dos menus entrão entre <>\nCaso a frase comece e termine com \"_\", pode remover o \"_\"\nSempre formate no html utilizando TODOS os dados fornecidos abaixo como informações, valores, dados, tudo sem exceção.\nVocê vai adicionar na formatação somente os dados existentes e informados abaixo.\nImportante. Se o dados como telefone, email ou parentes não estiver disponível e não for fornecido, você não precisa adicionar a \"div class\" no html.\nAdicione \"Sugestões para Regularização em caso de Débitos\"\nSempre adicione <br> entre uma \"div class\" e outra.\nÉ obrigatório que pendências, scpc, débitos, refin e pefin e protestos sejam sempre em tabela.\nSiga fielmente o layout do exemplo de html acima.\nCaso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\nSe o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\nÉ importante que você adicione no HTML somente os dados fornecidos abaixo que são para formatar. Os dados dos HTML de exemplo servem somente para seguir o layout do HTML (Nunca utilize as informações de exemplo ou invente dados para adicionar no html formatado).\nÉ obrigatório que todas as informações fornecidas abaixo conste no HTML.\nRemova todos os _ do html exceto de email.\nImportante, você vai formatar em pendências, somente o que está em pendências, você vai formatar em scpc, somente o que está em scpc e vai formatar em protestos, somente o que está em protestos. E assim por diante.\nSe durante a formatação formar criar >PENDÊNCIAS< crie com somente a primeira letra maiúscula >Pendências<\n\nAtenção, faça \"Resumo através de IA\" levando em consideração todos os dados financeiros informados abaixo como Pendências, SCPC e Protestos.\n\nAtenção, todos os dados e informações acima server exclusivamente como exemplo para você estruturar o HTML.\nAs informações na formatação do HTML precisam estar na ordem dos dados para formatar.\nUtilize somente os dados abaixo para formatar o HTML:",
              "type": "string"
            },
            {
              "id": "b57420b6-0cfc-48dc-a086-e7387e7d3fcf",
              "name": "URL-LOGO",
              "value": "=https://i.imgur.com/g0gImpK.jpeg",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bef8684d-c94c-4a9d-a208-ec6ee0e5ca5d",
      "name": "Dados N8N1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -6400,
        1640
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "acd51107-a178-42a4-9050-0d6c021ff1ac",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -240,
        2420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bfac3c94-a23c-4008-aa6c-dd5fcb21c8e6",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "dbe1076e-9565-4795-8cc1-a69bb27e0b0c",
              "leftValue": "={{ $json.tipo }}",
              "rightValue": "CPF",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e3ebcf65-641e-4032-a2c9-f04d38192b03",
      "name": "If15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -5560,
        1640
      ]
    },
    {
      "parameters": {
        "content": "## CPF / CNPJ inválido",
        "height": 876.7623384092028,
        "width": 456.60627452732734,
        "color": 3
      },
      "id": "8519bbeb-5e62-4a05-91cd-0bf0839829e3",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5820,
        1580
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false; // Verifica se possui 11 dígitos e não é uma sequência repetida\n\n    let soma = 0, resto;\n\n    // Validação do primeiro dígito verificador\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    // Validação do segundo dígito verificador\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false; // Verifica se possui 14 dígitos e não é uma sequência repetida\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o CPF ou CNPJ diretamente do campo 'body.CPF' ou 'body.CNPJ' dentro do 'Webhook'\nconst numero = ($('Webhook').item.json.body.CPF || $('Webhook').item.json.body.CNPJ).replace(/[^\\d]+/g, '');\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido // Retorna true ou false\n        }\n    }\n];\n"
      },
      "id": "502669e2-66a6-41f2-93b4-c40f13d6efaa",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5760,
        1640
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ec365e9a-d87e-46c3-acb4-63f903350816",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -5540,
        2260
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\nAtenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente.\n\nObs: Digite apenas números, sem pontos, traços ou espaços."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "34f3c102-3bf2-4552-8c8e-e3d82e30795c",
      "name": "HTTP Request7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5740,
        2260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "684dcd67-12c3-4bd9-99a3-0729efbb4019",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -5740,
        2060
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente."
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "Tipo consulta",
              "value": "={{ $('Webhook').item.json.body['Tipo consulta'] }}"
            },
            {
              "name": "Pendências",
              "value": "=Erro"
            },
            {
              "name": "Protestos",
              "value": "=Erro"
            },
            {
              "name": "SCPC",
              "value": "=Erro"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "59a62ead-146e-4095-89e5-8384ff5151fa",
      "name": "Erro1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5560,
        2040
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\n\n## PDF\n{{ $('IF PDF').item.json.FileUrl }}\n\n\n______________________________________________________________\n\n\n\n{{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            },
            {
              "name": "URL PDF",
              "value": "="
            }
          ]
        },
        "options": {}
      },
      "id": "048c9f73-38e8-494f-9b64-02cf394c6bb4",
      "name": "HTTP Request5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8280,
        3800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ac651b5a-a3f1-4fa7-af09-f01dab050415",
      "name": "If16",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        8080,
        3540
      ]
    },
    {
      "parameters": {
        "content": "## BASE 44",
        "height": 222,
        "width": 635,
        "color": 2
      },
      "id": "ea3305b7-6d93-49f5-95c6-38cde0948fe3",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7880,
        2960
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0bfe1bce-c4d1-4154-a2a8-3c949b465a4b",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        8680,
        3540
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.redequeroimoveis.com/webhook/dividas-cpf_3-2",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "CPF",
              "value": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            },
            {
              "name": "URL_LogoPDF",
              "value": "={{ $('Webhook').item.json.body.URL_LogoPDF }}"
            },
            {
              "name": " Tipo consulta",
              "value": "Completa"
            },
            {
              "name": "Prompt Resumo IA",
              "value": "={{ $('Dados N8N1').item.json['Prompt Resumo IA'] }}"
            },
            {
              "name": "Prompt PDF",
              "value": "={{ $('Dados N8N1').item.json['Prompt PDF'] }}"
            },
            {
              "name": "URL-LOGO",
              "value": "={{ $('Dados N8N1').item.json['URL-LOGO'] }}"
            },
            {
              "name": "RequestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            }
          ]
        },
        "options": {}
      },
      "id": "859d0258-0cbd-4231-a5a3-8951191a7ee2",
      "name": "HTTP Request19",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -400,
        2420
      ],
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## CONTINUAÇÃO",
        "height": 251.51571340885795,
        "width": 571.376359106563,
        "color": 6
      },
      "id": "422c6a9c-927b-464f-8579-ba663addb04e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        2360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "6c35d14f-6ff2-4330-aa1d-abed7cdcb3b5",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "4f36c325-e0b0-4108-8467-d76ffe97258c",
      "name": "If9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4820,
        4120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "ecb5fcf0-39ab-494a-ac37-59cd15ab4d68",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c861266e-658b-45fd-a0f8-95f834380218",
      "name": "se typebot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -5740,
        1860
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "adf5d00f-c8d0-49a3-bb8d-b037f15eba33",
      "name": "typebot",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -5380,
        1840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c047c239-2341-4eee-882f-aeb41c8beff3",
      "name": "se typebot1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7940,
        3300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Informações",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "Tipo consulta",
              "value": "={{ $('Webhook').item.json.body['Tipo consulta'] }}"
            },
            {
              "name": "Pendências",
              "value": "=Erro"
            },
            {
              "name": "Protestos",
              "value": "=Erro"
            },
            {
              "name": "SCPC",
              "value": "=Erro"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            },
            {
              "name": "Cadin",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "58f44953-d9c3-4b0a-925f-e617fe0dfaa2",
      "name": "Erro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4360,
        3620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "aab3050a-2e89-49af-9958-5970f09201ce",
      "name": "HTTP Request6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4580,
        3800
      ]
    },
    {
      "parameters": {
        "content": "## ERRO CONSULTA",
        "height": 647.1423012728503,
        "width": 455.90538040659635,
        "color": 3
      },
      "id": "d9cab39d-b3f4-45ca-abc9-77503048c509",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4640,
        3340
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3bf246f9-4791-4d16-8eb9-886f37b8a68e",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -4560,
        2760
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtém a data e hora do campo\nconst currentDate = new Date($('Date & Time1').item.json.currentDate);\n\n// Converte para o horário de São Paulo (GMT-3)\nconst options = { timeZone: 'America/Sao_Paulo', hour12: false };\nconst brazilianTime = new Date(currentDate.toLocaleString('en-US', options));\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado) e a hora\nconst dayOfWeek = brazilianTime.getDay(); // 0=Domingo, 1=Segunda, ..., 6=Sábado\nconst hour = brazilianTime.getHours();\n\n// Verifica se a hora está entre 08:00 e 18:00 e se o dia é útil (segunda a sexta)\nif (hour >= 9 && hour < 18 && dayOfWeek >= 1 && dayOfWeek <= 5) {\n    return {\n        json: {\n            status: 'Horário funcionamento'\n        }\n    };\n} else {\n    return {\n        json: {\n            status: 'Fora do horário'\n        }\n    };\n}\n"
      },
      "id": "75942755-9c95-4091-ac47-778ebff303f2",
      "name": "Code Horário funcionamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4380,
        2760
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "=⚠️ Erro no retorno do provedor\n\nNão foi possível obter os dados da consulta no momento. Sugerimos tentar novamente com outra opção disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2a23e647-9908-457c-b08d-f53a63e7d80e",
      "name": "Horário funcionamento1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -4380,
        2920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "8ec90439-29cc-4f7e-9318-906539cd9a2d",
              "leftValue": "={{ $json.status }}",
              "rightValue": "funcionamento",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1cc2262d-91b8-4028-b66e-8ab264af9142",
      "name": "Verificar Horário funcionamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4560,
        2920
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "=⚠️ Opção fora do horário de funcionamento.\nEsta opção está disponível apenas das 08h00 às 18h00.\nEnquanto isso, você pode utilizar uma das outras opções disponíveis no sistema.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f6eac9c4-3324-402c-9b7f-ad1210766784",
      "name": "Fora do horário",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -4560,
        3060
      ]
    },
    {
      "parameters": {
        "content": "## Horário funcionamento",
        "height": 578.2747827033502,
        "width": 397.97803245596407,
        "color": 3
      },
      "id": "02d74272-c2c2-49e5-829b-8dc091eb4578",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4620,
        2680
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8a6db3f0-0755-40e7-a89c-43d229fa7b1b",
      "name": "Respond to Webhook4",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -4360,
        3800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "922ae267-0166-4cef-9a41-81d5db00bfa8",
      "name": "If21",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4580,
        3640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "ae16c52d-8a0d-4204-ae93-cd970099d58b",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "ad2e1421-35f2-43f2-a31e-77ad02c4e30e",
      "name": "se typebot2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4580,
        3440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "={{ $('se typebot2').item.json['Consulta erro'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f899169c-d58e-4901-a5cd-85990b18f1ee",
      "name": "typebot2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -4200,
        3420
      ]
    },
    {
      "parameters": {},
      "id": "b4ca7f69-4af8-4539-910e-120badbcf6b4",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -580,
        2420
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "49e85b80-0532-46a3-8a58-2528501bf09e",
              "name": "CONSULTA _ TEXTO",
              "value": "=## INFORMAÇÕES ##\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/_ /g, '_') }}\n\n--------------------------------------------------------------\n\n## PENDÊNCIAS ##\n{{ $('Aggregate6').item.json.Consulta[1].Pendencias.replace(/_ /g, '_') }}\n--------------------------------------------------------------\n\n## SCPC ##\n{{ $('Aggregate6').item.json.Consulta[2].SCPC.replace(/_ /g, '_') }}\n--------------------------------------------------------------\n\n## PROTESTOS ##\n{{ $('Aggregate6').item.json.Consulta[3].Protesto.replace(/_ /g, '_') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f8a36721-96de-4f55-b54e-cd051800d1fd",
      "name": "CONSULTA _ TEXTO",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5160,
        4080
      ]
    },
    {
      "parameters": {
        "model": "llama-3.3-70b-versatile",
        "options": {
          "temperature": 0
        }
      },
      "id": "2da36850-eeac-48bf-85c4-07908dc5feea",
      "name": "Groq Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        5160,
        4500
      ],
      "credentials": {
        "groqApi": {
          "id": "0U8f3VFF5G2KERm1",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = [];\nfor (let i = 0; i < 10; i++) {\n  items.push({ json: { iteration: i + 1 } });\n}\nreturn items;"
      },
      "id": "c5fe6230-1937-4e8a-955b-8b8575cd88c6",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5680,
        4520
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "71d10bd9-9e5c-466b-8b5a-be1ad3550a70",
      "name": "Wait4",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6100,
        4540
      ],
      "webhookId": "525869f7-c8f9-454e-a55d-3a8c2296ab93"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://v2.api2pdf.com/chrome/pdf/html",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "085551d3-3165-49d6-9fff-22ac23f127b9"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $('Code Formatar HTML').item.json.htmlContent\n    .replace('LOGOARTHUR', \n        ($('If27').item.json.results && $('If27').item.json.results[0] && $('If27').item.json.results[0]['URL PDF Imagem']) \n        || $('Dados N8N1').item.json['URL-LOGO'] \n        || 'https://i.imgur.com/vK314BL.jpeg'\n    )\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim()\n    .replace('URL-LOGO', \n        ($('If27').item.json.results && $('If27').item.json.results[0] && $('If27').item.json.results[0]['URL PDF Imagem']) \n        || $('Dados N8N1').item.json['URL-LOGO'] \n        || 'https://i.imgur.com/vK314BL.jpeg'\n    )\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim() \n}}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "d7b04d2a-aa63-4e9e-ad9c-d406481ffaee",
      "name": "Gerar PDF API1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5880,
        4340
      ],
      "alwaysOutputData": true,
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "try {\n    // Obter a string de HTML do campo {{ $json.output }}\n    const htmlString = $json.output;\n\n    // Verificar se htmlString está definido e é uma string\n    if (!htmlString || typeof htmlString !== 'string') {\n        throw new Error(\"O campo 'output' está vazio ou não é uma string.\");\n    }\n\n    // Encontrar o índice da primeira ocorrência de 'Inicio HTML'\n    const doctypeIndex = htmlString.indexOf('Inicio HTML\\n<!DOCTYPE html>\\n');\n\n    // Se a string for encontrada, cortar tudo antes dela\n    let htmlContent = doctypeIndex !== -1 ? htmlString.slice(doctypeIndex) : htmlString;\n\n    // Substituir \"URL-LOGO\" por \"LOGOARTHUR\"\n    htmlContent = htmlContent.replace('URL-LOGO', 'LOGOARTHUR');\n\n    // Substituir tabelas específicas por parágrafos informativos\n    htmlContent = htmlContent.replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem pendências registradas.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<td>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Informante<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<td>-<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<td><\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem pendências registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Contrato<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem informações registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Data<\\/th>\\s*<th>Cidade<\\/th>\\s*<th>Origem<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem informações registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n    ).replace(\n        /<table>\\s*<tr>\\s*<th>Cidade<\\/th>\\s*<th>Data<\\/th>\\s*<th>Cartório<\\/th>\\s*<th>Valor<\\/th>\\s*<\\/tr>\\s*<tr>\\s*<td>Sem informações registradas.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<td>Sem informações disponíveis.<\\/td>\\s*<\\/tr>\\s*<\\/table>\\s*<\\/div>/g,\n        '<p>Sem pendências registradas.</p></div>'\n\n);\n\n\n    // Retornar o conteúdo modificado\n    return { htmlContent };\n} catch (error) {\n    // Em caso de erro, retornar a string {{ $json.message.content }}\n    return { htmlContent: $json.message?.content || \"Erro desconhecido\" };\n}"
      },
      "id": "2a0faf21-e1db-4ce2-b73f-1864f33a8da3",
      "name": "Code Formatar HTML",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5660,
        4340
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a5c38417-4d68-48c1-891e-a1a071bea433",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        5900,
        4520
      ]
    },
    {
      "parameters": {},
      "id": "fdb9e592-458e-45a4-9de3-2d14c9b390e8",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        5500,
        4520
      ]
    },
    {
      "parameters": {},
      "id": "c472d28e-0a7e-4802-8e0d-79918342e508",
      "name": "Limit3",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        6620,
        4320
      ]
    },
    {
      "parameters": {
        "content": "## GROQ",
        "height": 810.5701325137197,
        "width": 1470.1173247966844,
        "color": 6
      },
      "id": "2524ce37-31bb-4cb1-9571-6228700935e9",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4980,
        3980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f72aecac-f8f3-445b-b743-03e61e2bf49b",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "38a3b330-ee97-478a-93a5-3285321c8f44",
      "name": "IF PDF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6120,
        4340
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/dividas/multi/{{ $('Dados N8N1').item.json.api }}/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "afb6fe3e-74e5-4edd-9828-a8d1f0aac3b6",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2760,
        1880
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente."
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "84b16ebb-7469-4558-a2dc-601cff013f3a",
      "name": "Resposta Typebot CPF Errado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5560,
        1840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'] }}"
            },
            {
              "name": "PDF",
              "value": "=### PDF\n{{ $('IF PDF').item.json.FileUrl }}"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "40fe6750-1f4b-4e2a-96fd-ce1ad6841423",
      "name": "Resposta Typebot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8140,
        3300
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=## PDF\n{{ $('IF PDF').item.json.FileUrl }}\n\n-------- / / --------\n\n{{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e211deca-b625-4e79-8603-100d3593d5fd",
      "name": "typebot1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        8340,
        3300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f23a050f-eb8c-47c4-a4a9-d100a05a088e",
      "name": "Resposta Typebot Erro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4380,
        3420
      ]
    },
    {
      "parameters": {},
      "id": "77ac218c-78b7-431c-b0d6-7346f9af765b",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4440,
        2120
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dividas-cpf_4-2-eduardo",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "8820869d-f781-4e73-ad54-5aff6ffbb124",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -6600,
        1640
      ],
      "webhookId": "8b2e7247-9b17-46fc-bd7d-41fabc8b16c2"
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/dividas/multi/cpf_pro/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 50000
        }
      },
      "id": "f6ea6664-bd2c-4269-a062-e2be349360e5",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2480,
        2060
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b9fceadd-0e68-49ef-91f6-a7c1a02ccc24",
              "leftValue": "={{ $json.data.Nome }}",
              "rightValue": "200",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "1fcc84cf-06c3-4ab7-8a22-48251ba20709",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "941c5560-ba64-4822-815f-b617c5169b9d",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1940,
        1880
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Dados N8N1').item.json['Prompt PDF'] }}\n\n{{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/ - (?![A-Z]{2})/g, '').replace(/_(?![\\w.-]+@[\\w.-]+)/g, '').replace(/_(?![\\w.-]+@[\\w.-]+)/g, '').replace(/\\*/g, '') }}",
        "options": {}
      },
      "id": "fc431e36-3f03-478a-a1c1-de2d021e8bf5",
      "name": "AI Agent2",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        5140,
        4340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "195af974-c126-484e-b5a5-acc1383966d5",
              "leftValue": "={{ $json.output ? $json.output : $json.message.content }}",
              "rightValue": "Fim HTML",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "88d65093-2062-4bb2-8c09-b886be978aa4",
              "leftValue": "={{ $json.output ? $json.output : $json.message.content }}",
              "rightValue": "Inicio HTML",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a6696e0a-81e2-4df1-9ba0-18784b51b740",
      "name": "If22",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5480,
        4340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b9fceadd-0e68-49ef-91f6-a7c1a02ccc24",
              "leftValue": "={{ $json.data.Nome }}",
              "rightValue": "200",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "1fcc84cf-06c3-4ab7-8a22-48251ba20709",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "75d915a9-c7f8-4e25-94ad-910767c15e34",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1940,
        2060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c154cada-a3ee-4a35-aedd-3cc3c7aefe37",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "timeout",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "b00ef0b3-03d2-456b-818a-518906598c18",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "501",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "f680a240-dea5-4feb-97be-56488eada75c",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "connect ETIMEDOUT",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2280,
        1880
      ],
      "id": "d4a0040a-1250-40e0-b729-c63392584083",
      "name": "If2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c154cada-a3ee-4a35-aedd-3cc3c7aefe37",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "timeout",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "b00ef0b3-03d2-456b-818a-518906598c18",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "501",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2160,
        2060
      ],
      "id": "e3ebde62-8986-4670-a4e9-5c7067b5eedc",
      "name": "If7"
    },
    {
      "parameters": {},
      "id": "275e71fe-a926-4002-91f7-31861c0348c5",
      "name": "Merge60",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4420,
        2840
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "SCPC",
              "stringValue": "=_Sem pendências registradas._\n"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "8d386567-c391-4888-a846-16629142f866",
      "name": "SCPC - 49",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3380,
        2620
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "SCPC",
              "value": "={{ $('If').item.json.data.SCPC }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "e93b2062-073e-4772-a19f-2be83d2ee534",
      "name": "Mapa - SCPC2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2580,
        2620
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=_Sem pendências registradas._\n"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "627007cc-d7d0-4b85-9cba-1c73a9574b48",
      "name": "Protesto - 49",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3420,
        3420
      ]
    },
    {
      "parameters": {},
      "id": "a1ccb1ed-a0f2-457a-a76f-29eefd77de9e",
      "name": "Merge78",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4400,
        3660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto }}",
              "rightValue": "Data",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5706cc12-3848-4854-9a38-908a6c215719",
      "name": "SE Protesto - 50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3180,
        3420
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "={{ $json.Protesto }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "c6ab505d-072c-4e11-8b81-b250c566367d",
      "name": "Protesto - 52",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3180,
        3660
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dcebe609-25a3-4e5d-82e6-62075b92af61",
              "name": "Protesto",
              "value": "={{ $('If').item.json.data.Protesto }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "cbf16861-024c-46c2-913e-4ed6bb23d105",
      "name": "Mapa - Protesto2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2580,
        3420
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "SCPC",
              "stringValue": "={{ $json.SCPC }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "606586bb-795b-43c3-9562-37e878a3214b",
      "name": "SCPC - 53",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3180,
        2860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.SCPC }}",
              "rightValue": "Data",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "36f42243-744f-4b54-96f7-fc4071576182",
      "name": "SE SCPC - 50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3180,
        2620
      ]
    },
    {
      "parameters": {
        "jsCode": "// Captura os dados do SCPC\nconst scpc = $('If').item.json.data['SCPC'];\n\n// Limita a 15 ocorrências\nconst scpcLimitado = scpc.slice(0, 15);\n\n// Formata os dados no formato desejado\nconst resultado = scpcLimitado.map(item => {\n  return `*Data:* _${item['Dt Ocorr']}_\\n*Cidade:* _${item['Cidade']}_\\n*Origem:* _${item['Nome']}_\\n*Valor:* _${item['Vr Dívida']}_\\n`;\n});\n\n// Junta todas as ocorrências formatadas em uma única string\nconst textoFinal = resultado.join('\\n');\n\n// Retorna o texto como parte do objeto json dentro de um array\nreturn [{ json: { texto: textoFinal } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2780,
        2620
      ],
      "id": "62849f1c-707a-4d76-8705-63bffb6a7959",
      "name": "Code5",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "60bc819d-3591-4bdb-bd62-300cc7e6a05b",
              "name": "SCPC",
              "value": "={{ $json.texto }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2980,
        2620
      ],
      "id": "e1d67450-f444-4fc3-9ef5-3a9f3a87941f",
      "name": "Edit Fields2",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Captura os dados do Protesto\nconst protestos = $('If').item.json.data['Protesto'];\n\n// Limita a 15 protestos\nconst protestosLimitados = protestos.slice(0, 15);\n\n// Formata os protestos no formato desejado\nconst resultado = protestosLimitados.map(protesto => {\n  return `*Cidade:* _${protesto['Cidade']} - ${protesto['UF']}_\\n*Data:* _${protesto['Data']}_\\n*Cartório:* _${protesto['Cartório']}_\\n*Valor:* _R$${protesto['Valor Protesto']}_\\n`;\n});\n\n// Junta todos os protestos formatados em uma única string\nconst textoFinal = resultado.join('\\n');\n\n// Retorna o texto como parte do objeto json dentro de um array\nreturn [{ json: { texto: textoFinal } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2780,
        3420
      ],
      "id": "a2317869-e9ac-4484-a17b-9fe43e615a8f",
      "name": "Code6",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "60bc819d-3591-4bdb-bd62-300cc7e6a05b",
              "name": "Protesto",
              "value": "={{ $json.texto }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2980,
        3420
      ],
      "id": "edc7867c-5866-47e3-88c6-6967a63688c6",
      "name": "Edit Fields3",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3dc1efe0-4397-4b12-89e3-b97c36914b36",
              "name": "Pendencias",
              "value": "={{ $json.data['REFIN/PEFIN'] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "520cb222-434c-4b57-92a2-808fd0c2408d",
      "name": "Mapa - Pendencias2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2220,
        1940
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias",
              "stringValue": "=_Sem pendências registradas._\n"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "ce63f88b-6487-4fc1-8264-5dd04d5b63b4",
      "name": "Pendencias - 83",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3380,
        2120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Pendencias }}",
              "rightValue": "Data",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "508ec59c-02b2-45af-9ea4-add06941f570",
      "name": "SE Pendencias - 82",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3180,
        2120
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias",
              "stringValue": "={{ $json.Pendencias }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "1108fc1c-3103-4fd8-a807-6c40334de8ce",
      "name": "Pendencias - 87",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        3180,
        2360
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "60bc819d-3591-4bdb-bd62-300cc7e6a05b",
              "name": "Pendencias",
              "value": "={{ $json.texto }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2980,
        2120
      ],
      "id": "ea513c28-ca6c-43ff-8523-84196ee2915a",
      "name": "Edit Fields1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Captura os dados das pendências\nconst pendencias = $('Mapa - Pendencias2').item.json.Pendencias;\n\n// Verifica se há pendências antes de continuar\nif (!pendencias || pendencias.length === 0) {\n  return [{ json: { texto: \"Nenhuma pendência encontrada.\" } }];\n}\n\n// Limita a 15 pendências\nconst pendenciasLimitadas = pendencias.slice(0, 15);\n\n// Formata as pendências no formato desejado\nconst resultado = pendenciasLimitadas.map(pendencia => {\n  return `*Data:* _${pendencia['Dt Ocorr']}_\\n*Contrato:* _${pendencia['Contrato']}_\\n*Origem:* _${pendencia['RazaoSocial']}_\\n*Valor:* _R$${pendencia['Vr Dívida'].replace('.', ',')}_\\n`;\n});\n\n// Junta todas as pendências formatadas em uma única string\nconst textoFinal = resultado.join('\\n');\n\n// Retorna o texto como parte do objeto json dentro de um array\nreturn [{ json: { texto: textoFinal } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2780,
        2120
      ],
      "id": "491eb928-8366-4894-963f-1b3769459922",
      "name": "Code7",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8e5d1e6-feda-4373-8e50-936f54a48786",
              "name": "Créditos",
              "value": "=4",
              "type": "string"
            },
            {
              "id": "e83c4952-cefe-4e2e-accf-865e014c5c20",
              "name": "Opção Consulta",
              "value": "CPF 4",
              "type": "string"
            },
            {
              "id": "b465d432-f3ad-4b56-8e49-81a06ca7db1a",
              "name": "Tipo Consulta",
              "value": "={{ $workflow.name }}",
              "type": "string"
            },
            {
              "id": "ccbdfb0b-45f1-40b2-b095-fcfefa698376",
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}",
              "type": "string"
            },
            {
              "id": "41bac44d-098a-4889-ad47-0138194c7d6b",
              "name": "Dado consultado",
              "value": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
              "type": "string"
            },
            {
              "id": "5f0eaada-894e-45cf-8c51-3f1a65fb785e",
              "name": "Data",
              "value": "={{ $('Code4').item.json.data }}",
              "type": "string"
            },
            {
              "id": "f34f0ad5-5beb-4941-a1be-d63c2f099f22",
              "name": "Hora",
              "value": "={{ $('Code4').item.json.hora }}",
              "type": "string"
            },
            {
              "id": "80f689ee-d4ec-4b52-ad1d-e1e710f72420",
              "name": "=URL PDF",
              "value": "={{ $('IF PDF').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "7c7fe4c7-5f91-4a5c-af93-3104c80aab4c",
              "name": "Origem Consulta",
              "value": "={{ $('Webhook').item.json.body.Webhook }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7760,
        4500
      ],
      "id": "a2a99cb7-e2e4-411f-ba4b-47ca49516ee9",
      "name": "Dados Histórico"
    },
    {
      "parameters": {
        "jsCode": "const agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [dataStrRaw, horaStr] = agora.split(' ');\nconst dataStr = dataStrRaw.replace(',', '');\n\n// Extrai dia, mês e ano\nconst [dia, mes, ano] = dataStr.split('/');\nconst dataFormatada = `${dia}/${mes}/${ano}`;\n\n// Novo formato ISO (YYYY-MM-DD)\nconst dataISO = `${ano}-${mes}-${dia}`;\n\n// Monta a URL da execução\nconst executionId = $execution.id;\nconst workflowId = $workflow.id;\nconst baseUrl = \"https://n8n.redequeroimoveis.com\";\nconst executionUrl = `${baseUrl}/workflow/${workflowId}/executions/${executionId}`;\n\n// Retorna tudo em um único objeto\nreturn [{\n  json: {\n    data: dataFormatada,\n    data_iso: dataISO,\n    hora: horaStr,\n    executionUrl: executionUrl\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7540,
        4500
      ],
      "id": "1c23f5cb-6e78-4a1c-bd93-5b38339ab018",
      "name": "Code4"
    },
    {
      "parameters": {
        "url": "=https://baserow.unisistemas.tech/api/database/rows/table/643/?user_field_names=true&filter__field_6200__contains={{ $('Webhook').item.json.body.Telefone }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_field_names",
              "value": "true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token UU2yIjUeFuKaWhvMc734TVS2oEOKWjp9"
            }
          ]
        },
        "options": {}
      },
      "id": "6e78ef69-2d4a-4833-9cff-f0f1328ecc3f",
      "name": "HTTP Request10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5360,
        4080
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "87ac1dec-3f72-4857-8884-a3cfde60d311",
              "leftValue": "={{ $json.results[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "60387208-f99b-49b3-a177-eedb897a94a5",
              "leftValue": "={{ $json.results[0].id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5580,
        4080
      ],
      "id": "97dd229b-947a-4adf-8b02-26c4f42e10b9",
      "name": "If27"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "249f3f38-a24b-4497-ad2d-827e70e38961",
              "name": "Pendencias",
              "value": "={{ $('If').item.json.data['REFIN/PEFIN'] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2500,
        1940
      ],
      "id": "589d9f9c-4ac5-4912-b54a-046ef9071e70",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "21931f42-9dfd-4f8d-80c7-b37b12e2a18b",
              "name": "Pendencias",
              "value": "={{ $('Mapa - Pendencias2').item.json.Pendencias }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2720,
        1940
      ],
      "id": "a2f048ad-adfa-4c5b-9cd2-9d7604ce3db6",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "fc5d82c2-b0c4-4f29-9959-5b875821c4eb",
      "name": "Se base44",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7940,
        3020
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64530896-b254-4c99-991f-167b429c9304",
              "name": "html",
              "value": "={{ $('Code Formatar HTML').item.json.htmlContent\n    .replace('LOGOARTHUR', \n        ($('If27').item.json.results && $('If27').item.json.results[0] && $('If27').item.json.results[0]['URL PDF Imagem']) \n        || $('Dados N8N1').item.json['URL-LOGO'] \n        || 'https://i.imgur.com/vK314BL.jpeg'\n    )\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim()\n    .replace('URL-LOGO', \n        ($('If27').item.json.results && $('If27').item.json.results[0] && $('If27').item.json.results[0]['URL PDF Imagem']) \n        || $('Dados N8N1').item.json['URL-LOGO'] \n        || 'https://i.imgur.com/vK314BL.jpeg'\n    )\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim() \n}}",
              "type": "string"
            },
            {
              "id": "842b2f23-b0c2-4713-a419-890e04377971",
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "774d16d2-47c6-411a-8c78-78812c161e93",
              "name": "resposta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a2626ced-f79e-4a1b-9b44-5ba954a2e413",
      "name": "resposta-base44",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        8340,
        3000
      ]
    },
    {
      "parameters": {
        "content": "## SE SITE VERIFICAR CRÉDITO",
        "height": 779,
        "width": 710,
        "color": 4
      },
      "id": "9ee75cec-269f-48f3-9dbb-4c2c424039c7",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4580,
        1560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7d307f09-ac20-42f9-9294-f55141423683",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -4160,
        2080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $json.creditos }}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "45d822f7-9eb9-487f-8043-aa0cab87a8c8",
      "name": "Crédito maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4160,
        1720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "84e17417-ac6e-4798-8e4a-fe2f69310e2b",
      "name": "Se site / bc1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4500,
        1620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "976b3be1-7a06-458d-b0c7-05d1ad3b00ca",
      "name": "Crédito inferior1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4340,
        1920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "985bb6c2-34e3-41fc-9552-9a3e99277160",
      "name": "Retornar Créditos Site1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4340,
        1720
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a0524c50-43b7-49fc-86b8-b7671a1c023e",
      "name": "Respond to Webhook7",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -4160,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "60288151-e6eb-4293-b30b-a838e064013e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "a87881ea-6297-4c0d-8c23-65e1da1b9940",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2fd2077e-2493-468f-89d6-4b0e482996b8",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4340,
        2100
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "apin8n",
        "filters": {
          "conditions": [
            {
              "keyName": "dado",
              "keyValue": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "keyName": "consulta",
              "keyValue": "ehmconsultas"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3040,
        1600
      ],
      "id": "ffd5881d-fc77-45a0-bbb6-d0053cf34207",
      "name": "Obter Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a2ba1813-65ee-4ce4-a393-8f658c12d43f",
              "leftValue": "={{ $json.dado }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2580,
        1600
      ],
      "id": "4d4569fe-61c7-4691-9f63-9a0b94fd42b1",
      "name": "Se Supabase",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "tableId": "historico",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "Telefone",
              "fieldValue": "={{ $json.Telefone }}"
            },
            {
              "fieldId": "Dado Consultado",
              "fieldValue": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "fieldId": "Tipo Consulta",
              "fieldValue": "={{ $json[\"Tipo Consulta\"] }}"
            },
            {
              "fieldId": "Créditos",
              "fieldValue": "={{ $json[\"Créditos\"] }}"
            },
            {
              "fieldId": "Data",
              "fieldValue": "={{ $json.Data }}"
            },
            {
              "fieldId": "Hora",
              "fieldValue": "={{ $json.Hora }}"
            },
            {
              "fieldId": "URL PDF",
              "fieldValue": "={{ $json[\"URL PDF\"] }}"
            },
            {
              "fieldId": "Origem Consulta",
              "fieldValue": "={{ $json[\"Origem Consulta\"] }}"
            },
            {
              "fieldId": "Opção Consulta",
              "fieldValue": "={{ $json[\"Opção Consulta\"] }}"
            },
            {
              "fieldId": "exec",
              "fieldValue": "={{ $('Code4').item.json.executionUrl }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        7960,
        4500
      ],
      "id": "ddf2376d-dbd1-4f49-95d9-8cfec1e727f8",
      "name": "Histórico Supabse",
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Typebot",
        "height": 222,
        "width": 635,
        "color": 2
      },
      "id": "46815ba3-5f2a-46df-83e9-6348a05ac753",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7880,
        3220
      ]
    },
    {
      "parameters": {
        "content": "## Whatsapp (Botconversa)",
        "height": 222,
        "width": 635,
        "color": 2
      },
      "id": "af327b42-5e31-4e7b-becc-beea30ca563e",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7880,
        3480
      ]
    },
    {
      "parameters": {
        "content": "## Site",
        "height": 222,
        "width": 635,
        "color": 2
      },
      "id": "564af227-9d85-46dc-b7bb-6fee77d075f1",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7880,
        3740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6819f5703086936c581632c2/entities/Historico",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "tipo_consulta",
              "value": "={{ $json['Tipo Consulta'] }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json['Créditos'] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            },
            {
              "name": "url_pdf",
              "value": "={{ $json['URL PDF'] }}"
            },
            {
              "name": "origem",
              "value": "={{ $json['Origem Consulta'] }}"
            },
            {
              "name": "opcao",
              "value": "={{ $json['Opção Consulta'] }}"
            },
            {
              "name": "exec",
              "value": "={{ $('Code4').item.json.executionUrl }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7960,
        4140
      ],
      "id": "0d6730c0-dd1d-4764-a357-7e2c4534d960",
      "name": "Base44 API - Histórico"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "html",
              "value": "={{ $('Code Formatar HTML').item.json.htmlContent\n    .replace('LOGOARTHUR', \n        ($('If27').item.json.results && $('If27').item.json.results[0] && $('If27').item.json.results[0]['URL PDF Imagem']) \n        || $('Dados N8N1').item.json['URL-LOGO'] \n        || 'https://i.imgur.com/vK314BL.jpeg'\n    )\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim()\n    .replace('URL-LOGO', \n        ($('If27').item.json.results && $('If27').item.json.results[0] && $('If27').item.json.results[0]['URL PDF Imagem']) \n        || $('Dados N8N1').item.json['URL-LOGO'] \n        || 'https://i.imgur.com/vK314BL.jpeg'\n    )\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim() \n}}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8140,
        3000
      ],
      "id": "6889dce1-1118-457c-84b7-56a085bc0811",
      "name": "Base44 API - RetornoConsulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/UltimaConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $('Code Formatar HTML').item.json.htmlContent\n    .replace('LOGOARTHUR', \n        ($('If27').item.json.results && $('If27').item.json.results[0] && $('If27').item.json.results[0]['URL PDF Imagem']) \n        || $('Dados N8N1').item.json['URL-LOGO'] \n        || 'https://i.imgur.com/vK314BL.jpeg'\n    )\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim()\n    .replace('URL-LOGO', \n        ($('If27').item.json.results && $('If27').item.json.results[0] && $('If27').item.json.results[0]['URL PDF Imagem']) \n        || $('Dados N8N1').item.json['URL-LOGO'] \n        || 'https://i.imgur.com/vK314BL.jpeg'\n    )\n    .replace(\"```html\", \"\")\n    .replace(\"```\", \"\")\n    .replace('Inicio HTML', '')\n    .replace('Início HTML', '')\n    .replace('Fim HTML', '')\n    .trim() \n}}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            },
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7960,
        4320
      ],
      "id": "c058ffc9-b4c0-4c70-a820-958240bf6cb3",
      "name": "Base44 API - Última Consulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Retornar Créditos1').item.json.creditos }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cd5895e7-44ff-4f8b-8bb1-569ff95dbcf1",
      "name": "Retirar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10160,
        3660
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "apin8n",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "fieldId": "dado",
              "fieldValue": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "fieldId": "data",
              "fieldValue": "={{ $('If').item.json.data }}"
            },
            {
              "fieldId": "opcao",
              "fieldValue": "=CPF 3-1"
            },
            {
              "fieldId": "consulta",
              "fieldValue": "ehmconsultas"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -940,
        1720
      ],
      "id": "081138fd-0e4b-4150-84d3-4c3c3c5a7607",
      "name": "Salvar Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a2ba1813-65ee-4ce4-a393-8f658c12d43f",
              "leftValue": "={{ $json.dado }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1120,
        1700
      ],
      "id": "50e192fa-5e91-4bf9-9e79-e20f66738be7",
      "name": "Se Supabase1",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -5260,
        1440
      ],
      "id": "bd9240b3-aa95-4abb-a3f0-90996f71509f",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      status: (() => {\n        const dateTime = new Date($('Date & Time').item.json.currentDate);\n        const hours = dateTime.getUTCHours() - 4; // Ajuste de fuso horário -04:00\n        return hours >= 7 && hours < 20 ? 'dentro' : 'fora';\n      })()\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5060,
        1440
      ],
      "id": "f2b0f1f8-d7ac-4235-a13e-971dfdb58aad",
      "name": "Code19"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "dd4ad686-d563-46c0-9e70-ff27e59c9cfd",
              "leftValue": "={{ $json.status }}",
              "rightValue": "dentro",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4840,
        1440
      ],
      "id": "f42791c8-e59d-42ef-b0d3-f9d79531fb80",
      "name": "If10"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -1340,
        1700
      ],
      "id": "580cb2d2-3cce-4a0f-bba0-e2b3f2a2c0ca",
      "name": "Limit2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=erro",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b67d2153-35ca-4a40-ba8e-f146745aa0fa",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -640,
        2220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "50fb41d3-f22f-4643-be2f-da1707b31026",
              "leftValue": "={{ $('Webhook').item.json.body.Telefone }}",
              "rightValue": "554999998777",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "d00b6241-5638-4a57-9623-05c9681d96a6",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -900,
        2180
      ],
      "id": "5e62328b-c0bd-4465-b051-efff500897a7",
      "name": "If28"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "50fb41d3-f22f-4643-be2f-da1707b31026",
              "leftValue": "={{ $('Webhook').item.json.body.Telefone }}",
              "rightValue": "554999998777",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "d00b6241-5638-4a57-9623-05c9681d96a6",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        9160,
        3540
      ],
      "id": "36dfa42b-21b2-4e3a-9a4d-58bd6d065acc",
      "name": "If31"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4c4b8b4-ac50-4977-b5b7-22b2d88b5eed",
              "name": "Créditos a retirar",
              "value": "=4",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "b86ab29e-11a8-4673-8f8d-9c74a84dfb54",
      "name": "Créditos a retirar",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        9600,
        3960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "6611ca4d-c98b-4930-bf78-78785d12378b",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $('Créditos a retirar').item.json['Créditos a retirar'] }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ed70ec1b-1624-4db1-a0e8-3eb3265a7a16",
      "name": "Maior ou igual",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        9980,
        3940
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9b526832-5501-4323-898d-e059ea737bd7",
      "name": "Verificar saldo1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10380,
        3920
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0b4b3a09-0ba5-49f6-9ce7-f1e0bb4eb9d4",
      "name": "Retornar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        9420,
        3960
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6b2f3e76-11cc-4ece-b4d8-525e2ca0fea4",
      "name": "Se crédito existe",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        9780,
        3960
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Créditos a retirar').item.json['Créditos a retirar'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "829a0afd-cf70-43d7-8a89-8f7ea6facef5",
      "name": "Retirar Créditos2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10180,
        3920
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad9c09c1-3aaf-4c42-ab43-9f8f30a12e99",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $json.creditos }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "85e30adb-2ea0-44b2-87af-437e470f36fd",
      "name": "If32",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        10560,
        3920
      ]
    },
    {
      "parameters": {
        "content": "## Retirar Créditos",
        "height": 312,
        "width": 1453
      },
      "id": "d27499d4-60be-4641-90bd-b0d17fa19e62",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9340,
        3840
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Retornar Créditos').item.json.creditos }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1db2bce0-0981-4960-9493-44662f301c66",
      "name": "Retirar Créditos3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10180,
        4080
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "4af3c737-5937-4c47-9a3b-9b9924950749",
      "name": "Se base",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7960,
        2760
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "432f06f4-7712-424e-aef2-2590c51fab0e",
              "name": "resposta",
              "value": "={{ $json.error.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1220,
        2500
      ],
      "id": "3a49c90b-b9e8-4f29-9bdf-76e6d51c9c07",
      "name": "Edit Fields7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "50fb41d3-f22f-4643-be2f-da1707b31026",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "Bloqueado",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "68e00edc-8322-45ac-8c13-29e028b4d79f",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "501",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1220,
        2340
      ],
      "id": "b9f65c65-a09c-4882-9d4b-a9d14c1e9038",
      "name": "If33"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedText }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1b96a618-5929-4431-bf0e-81352afd7513",
      "name": "Edit Fields9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1400,
        820
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "position": [
        600,
        840
      ],
      "typeVersion": 1,
      "id": "97e3a9f2-f235-484d-8bd4-00566f5d132a",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "attrkey": "$",
          "explicitRoot": true,
          "mergeAttrs": false
        }
      },
      "name": "XML",
      "type": "n8n-nodes-base.xml",
      "position": [
        780,
        840
      ],
      "typeVersion": 1,
      "id": "8f9452d7-87e2-481d-a2a2-79fb3bf0d440",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "71acf42e-a6b5-453b-beb1-1804ba6e115e",
              "leftValue": "={{ $('evodata1').item.json.msg['Dados Pessoais'].Nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "da908098-e41f-4d8b-9fae-d125c0860854",
      "name": "If39",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        960,
        640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8e0363a5-1e0a-42f9-a5aa-1488030ed12a",
              "leftValue": "={{ $json.RETORNO.CADASTRAIS.NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1a7d9b9b-40e5-47e4-93d3-30d909ed580a",
      "name": "If37",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        960,
        840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eae81f98-1999-4466-8f96-06d309f1fe8c",
      "name": "If40",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1580,
        820
      ]
    },
    {
      "parameters": {
        "url": "=https://api.searchlock.me/evodata?token=eDRFTvybunIMOnibuYVGTCFXcf&tipo=cpf&dados={{ $('If15').item.json.numeroOriginal }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 5000
        }
      },
      "id": "5993941a-c20e-40bc-b859-e86db0aa1d6e",
      "name": "evodata1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        400,
        640
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "url": "=http://confere.link/api/?acao=CONS_CPF&TK=IGGE-FAO-566021-PUN-4WT4&DADO={{ $('If15').item.json.numeroOriginal }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "59b02fc9-44b3-452b-ae8e-c28ffe5122d3",
      "name": "confere.link1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        400,
        840
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4671fe13-0a89-45dc-93ba-f53bda6b91c8",
      "name": "Edit Fields18",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        780,
        1040
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.Data[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.Data[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6dc97775-609b-4100-a280-3cbefef655d4",
      "name": "If52",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        960,
        1040
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/sus1/cpf/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 20000
        }
      },
      "id": "4377b5ea-cee2-46ce-a34f-e52114053678",
      "name": "Dados - ehmconsultas2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        400,
        1040
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e64cb4ef-7583-485e-8a46-f65822c55578",
      "name": "Edit Fields19",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        780,
        1240
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas3').item.json.DATA.DADOS_PESSOAIS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas3').item.json.DATA.DADOS_PESSOAIS[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a06a3237-3f7b-4258-9abd-0df153505817",
      "name": "If53",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        960,
        1240
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/dados/cpf/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 20000
        }
      },
      "id": "1e523a27-b442-42ea-a17c-4a4049326696",
      "name": "Dados - ehmconsultas3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        400,
        1240
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "=*CPF:* _{{ $('If15').item.json.numeroOriginal }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cc33d054-5b40-4b79-8c45-23baa91fe459",
      "name": "Edit Fields11",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1240,
        1280
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Função para calcular idade com base na data de nascimento\nfunction calcularIdade(dataNasc) {\n    const hoje = new Date();\n    const [dia, mes, ano] = dataNasc.split('/');\n    const nascimento = new Date(`${ano}-${mes}-${dia}`);\n    let idade = hoje.getFullYear() - nascimento.getFullYear();\n    const mesAtual = hoje.getMonth();\n    const diaAtual = hoje.getDate();\n    if (mesAtual < nascimento.getMonth() || \n       (mesAtual === nascimento.getMonth() && diaAtual < nascimento.getDate())) {\n        idade--;\n    }\n    return idade;\n}\n\n// Função para evitar duplicatas\nfunction removerDuplicatas(array) {\n    return array.filter((item, index, self) =>\n        index === self.findIndex((t) => JSON.stringify(t) === JSON.stringify(item))\n    );\n}\n\n// Pegar os dados diretamente do nó 'minerdapifoda2'\nconst origem = $('minerdapifoda').item.json;\n\nconst dados = origem.DADOS?.[0] || {};\nconst emails = removerDuplicatas(origem.EMAIL || []).slice(0, 5);\nconst telefones = removerDuplicatas(origem.HISTORICO_TELEFONES || [])\n    .filter(tel => tel.TELEFONE && tel.TELEFONE !== \"undefined\")\n    .slice(0, 5)\n    .map(tel => `${tel.DDD}${tel.TELEFONE}`);\nconst parentes = removerDuplicatas(origem.PARENTES || []).slice(0, 5);\n\n// Início da formatação\nlet resultadoFormatado = \"\";\n\n// Adicionar dados principais\nif (dados.NOME && dados.CPF && dados.NASC) {\n    const idade = calcularIdade(dados.NASC);\n    resultadoFormatado += `*Nome:* _${dados.NOME}_\\n`;\n    resultadoFormatado += `*CPF:* _${dados.CPF}_\\n`;\n    resultadoFormatado += `*Data Nascimento:* _${dados.NASC}_\\n`;\n    resultadoFormatado += `*Idade:* _${idade} anos_\\n\\n`;\n}\n\n// Adicionar telefones\nif (telefones.length) {\n    resultadoFormatado += `## *Telefone*\\n`;\n    telefones.forEach(tel => {\n        resultadoFormatado += `- ${tel}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar emails\nif (emails.length) {\n    resultadoFormatado += `## *Email*\\n`;\n    emails.forEach(email => {\n        resultadoFormatado += `_- ${email.EMAIL}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar parentes\nif (parentes.length) {\n    resultadoFormatado += `## *Possíveis Parentes*\\n`;\n    parentes.forEach(parente => {\n        const nome = parente.NOME_VINCULO || \"Não informado\";\n        const vinculo = parente.VINCULO || \"Não informado\";\n        resultadoFormatado += `- _${nome} - ${vinculo}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Retornar resultado formatado\nreturn {\n    json: {\n        resultadoFormatado: resultadoFormatado.trim()\n    }\n};\n"
      },
      "id": "55748e8f-c4a5-428e-b519-dc354c0681a2",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        440
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a3c190a-4b1a-4e2f-bbee-6fa4d37c118f",
              "name": "Informações",
              "value": "={{ $json.resultadoFormatado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9ba1edb7-1441-4274-8e9b-52ca11e7699a",
      "name": "Edit Fields13",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        780,
        440
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://nada.sistemafull.site:80/api/cpffull?CPF={{ $('If15').item.json.numeroOriginal }}",
        "options": {
          "timeout": 5000
        }
      },
      "id": "e0c7e7b2-7678-497f-9090-0b78188eaf6d",
      "name": "minerdapifoda",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        400,
        440
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const data = $json;\n\n// Helper function to clean up and limit array data, with optional formatter\nfunction formatArray(items, fields, limit = 5, formatter = (str) => str) {\n    const uniqueItems = [...new Set(\n        items\n            .filter(item => fields.some(field => item[field]))\n            .map(item => fields.map(field => item[field]).filter(Boolean).join(\" - \"))\n    )];\n    return uniqueItems.slice(0, limit).map(formatter).join('\\n'); // ← quebras reais aqui\n}\n\n// Extracting and formatting data\nconst personalData = data.msg['Dados Pessoais'] || {};\nconst documents = data.msg['Documentos'] || {};\nconst relatives = data.msg.Parentes || [];\nconst phones = data.msg.Telefones || [];\nconst emails = data.msg.Emails || [];\nconst addresses = data.msg.Enderecos || [];\n\n// Construção com quebras de linha REAIS (não \"\\n\" como texto)\nlet formattedData = [\n    `### Dados Pessoais`,\n    `*Nome:* ${personalData.Nome || ''}`,\n    `*CPF:* ${documents.CPF || ''}`,\n    `*Nascimento:* ${personalData.Nascimento || ''}`,\n    `*Nome da Mãe:* ${personalData['Nome da Mae'] || ''}`,\n];\n\nif (phones.length > 0) {\n    const formattedPhones = formatArray(phones, ['Telefone'], 5, tel => `- ${tel}`);\n    if (formattedPhones) {\n        formattedData.push('', '\\n## *Telefones*', formattedPhones);\n    }\n}\n\n\nif (emails.length > 0) {\n    const formattedEmails = formatArray(emails, ['E-mail'], 5, email => `_- ${email}_`);\n    if (formattedEmails) {\n        formattedData.push('', '\\n## *E-mails*', formattedEmails);\n    }\n}\n\nif (relatives.length > 0) {\n    const formattedRelatives = formatArray(relatives, ['Nome Vinculo', 'Vinculo'], 5, r => `- ${r}`);\n    if (formattedRelatives) {\n        formattedData.push('', '\\n## *Possíveis Parentes*', formattedRelatives);\n    }\n}\n\n// Remove linhas vazias com undefined\nconst final = formattedData\n    .filter(line => line && !line.includes('undefined'))\n    .join('\\n');\n\n// Retorno final\nreturn [{ json: { formattedData: final.trim() } }];\n"
      },
      "id": "6fbb6961-53b8-47d8-80ee-036794bfb047",
      "name": "Code9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        640
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Obtendo os dados da array do nó \"Dados - ehmconsultas\"\nlet dados = $('Dados - ehmconsultas2').item.json.Data;\n\nif (!Array.isArray(dados) || dados.length === 0) {\n    return [{\n        json: {\n            resultado: \"Dados inválidos ou incompletos.\"\n        }\n    }];\n}\n\nlet pessoa = dados[0]; // Pegando o primeiro item da lista\n\n// Função para verificar se o valor é válido (não nulo, não vazio, não undefined)\nfunction valorValido(valor) {\n    return valor !== null && valor !== undefined && String(valor).trim() !== '';\n}\n\n// Função para formatar a data no formato dd/mm/yyyy\nfunction formatarData(data) {\n    if (!valorValido(data)) return null;\n    if (/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(data)) return data;\n    const date = new Date(data);\n    if (isNaN(date)) return null;\n    return date.toLocaleDateString('pt-BR');\n}\n\nlet resultado = '';\n\n// Nome\nif (valorValido(pessoa.NOME)) {\n    resultado += `*Nome:* _${pessoa.NOME}_\\n`;\n}\n\n// CPF\nif (valorValido(pessoa.CPF)) {\n    resultado += `CPF: _${pessoa.CPF}_\\n`;\n}\n\n// Data de nascimento\nconst dataNascimento = formatarData(pessoa.DATA_NASCIMENTO);\nif (dataNascimento) {\n    resultado += `Nascimento: _${dataNascimento}_\\n`;\n}\n\n// Nome da Mãe\nif (valorValido(pessoa.NOME_MAE)) {\n    resultado += `Nome da Mãe: _${pessoa.NOME_MAE}_\\n`;\n}\n\n// Nome do Pai\nif (valorValido(pessoa.NOME_PAI)) {\n    resultado += `Nome do Pai: _${pessoa.NOME_PAI}_\\n`;\n}\n\n// Telefones\nlet telefones = [];\nif (valorValido(pessoa.TELEFONE)) telefones.push(pessoa.TELEFONE);\n\nif (telefones.length > 0) {\n    resultado += `\\n*Telefones:*\\n`;\n    Array.from(new Set(telefones)).slice(0, 3).forEach(tel => {\n        resultado += ` - _${tel}_\\n`;\n    });\n}\n\n// E-mails\nlet emails = [];\nif (valorValido(pessoa.EMAIL)) emails.push(pessoa.EMAIL);\nif (valorValido(pessoa.EMAIL2)) emails.push(pessoa.EMAIL2);\n\nif (emails.length > 0) {\n    resultado += `\\n*E-mails:*\\n`;\n    Array.from(new Set(emails)).slice(0, 3).forEach(email => {\n        resultado += ` _- ${email}_\\n`;\n    });\n}\n\nreturn [{\n    json: {\n        resultado: resultado.trim()\n    }\n}];\n"
      },
      "id": "29551940-507d-40b4-84d1-c12ae39e654d",
      "name": "Code10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        1040
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "function formatarDados(dados) {\n    if (!dados.DATA || !dados.DATA.DADOS_PESSOAIS || !dados.DATA.DADOS_PESSOAIS.length) {\n        return \"Dados inválidos ou incompletos.\";\n    }\n\n    let pessoa = dados.DATA.DADOS_PESSOAIS[0];\n    let parentes = dados.DATA.PARENTES || [];\n    let emails = dados.DATA.EMAIL_BASE || [];\n    let telefones = dados.DATA.TELEFONES || [];\n\n    let resultado = '';\n\n    // Função para formatar a data no formato dd/mm/yyyy\n    function formatarData(data) {\n        if (!data) return \"N/A\";\n        const date = new Date(data);\n        return date.toLocaleDateString('pt-BR');\n    }\n\n    // Nome e CPF (sempre devem existir, então já são adicionados diretamente)\n    resultado += `*Nome:* _${pessoa.NOME || \"N/A\"}_\\n`;\n    resultado += `CPF: _${pessoa.CPF || \"N/A\"}_\\n`;\n    resultado += `Nascimento: _${formatarData(pessoa.NASCIMENTO)}_\\n`;\n    resultado += `Nome da Mãe: _${pessoa.NOME_MAE || \"N/A\"}_\\n`;\n    resultado += `Nome do Pai: _${pessoa.NOME_PAI || \"N/A\"}_\\n\\n`;\n\n    // Telefones\n    if (telefones.length > 0) {\n        const telefonesSet = new Set();\n        telefones.forEach(tel => telefonesSet.add(tel.TELEFONE)); // Remover duplicatas\n        \n        if (telefonesSet.size > 0) {\n            resultado += \"*Telefones:*\\n\";\n            Array.from(telefonesSet).slice(0, 3).forEach(telefone => {\n                resultado += ` - _${telefone || \"Desconhecido\"}_\\n`;\n            });\n            resultado += \"\\n\";\n        }\n    }\n  \n    // E-mails\n    if (emails.length > 0) {\n        resultado += \"*E-mails:*\\n\";\n        emails.slice(0, 3).forEach(email => {\n            resultado += ` _- ${email.EMAIL || \"Desconhecido\"}_\\n`;\n        });\n        resultado += \"\\n\";\n    }\n\n    // Parentes\n    if (parentes.length > 0) {\n        resultado += \"*Parentes:*\\n\";\n        parentes.slice(0, 3).forEach(parente => {\n            resultado += ` - _${parente.NOME || \"N/A\"} (${parente.VINCULO || \"N/A\"})_\\n`;\n        });\n    }\n\n    return resultado;\n}\n\n// Pegando os dados do input do n8n\nlet dadosConsulta = items[0].json;\nlet resultadoFormatado = formatarDados(dadosConsulta);\n\n// Retornando os dados no formato correto para o n8n\nreturn [{\n    json: {\n        resultado: resultadoFormatado\n    }\n}];\n"
      },
      "id": "94b7db37-298c-422f-8dfb-1890555d193e",
      "name": "Code12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        1240
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Captura o retorno do JSON\nconst retorno = $json.RETORNO || {};\nconst cadastrais = retorno.CADASTRAIS || {};\n\nconst telefonesFixo = retorno.TELEFONES_FIXO?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_FIXO.TELEFONE) \n        ? retorno.TELEFONES_FIXO.TELEFONE \n        : [retorno.TELEFONES_FIXO.TELEFONE] \n    : [];\n\nconst telefonesMovel = retorno.TELEFONES_MOVEL?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_MOVEL.TELEFONE) \n        ? retorno.TELEFONES_MOVEL.TELEFONE \n        : [retorno.TELEFONES_MOVEL.TELEFONE] \n    : [];\n\nconst emails = retorno.EMAILS?.EMAIL \n    ? Array.isArray(retorno.EMAILS.EMAIL) \n        ? retorno.EMAILS.EMAIL \n        : [retorno.EMAILS.EMAIL] \n    : [];\n\n// const enderecos = retorno.ENDERECOS?.ENDERECO \n//   ? Array.isArray(retorno.ENDERECOS.ENDERECO) \n//       ? retorno.ENDERECOS.ENDERECO \n//       : [retorno.ENDERECOS.ENDERECO] \n//   : [];\n\nconst parentes = retorno.POSSIVEIS_PARENTES?.CONTATO \n    ? Array.isArray(retorno.POSSIVEIS_PARENTES.CONTATO) \n        ? retorno.POSSIVEIS_PARENTES.CONTATO \n        : [retorno.POSSIVEIS_PARENTES.CONTATO] \n    : [];\n\nconst empresas = retorno.EMPRESAS_SOCIO?.EMPRESA_SOCIO \n    ? Array.isArray(retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO) \n        ? retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO \n        : [retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO] \n    : [];\n\n// Função para tratar dados\nfunction formatField(value) {\n    return value && value.trim() !== \"\" && value !== \"undefined\" ? value : null;\n}\n\n// Cria uma lista formatada com limite de itens\nfunction formatList(items, limit) {\n    return items.slice(0, limit).map(item => `- ${item}`).join('\\n');\n}\n\n// Função para formatar lista de emails no formato _- email_\nfunction formatEmailList(items, limit) {\n    return items.slice(0, limit)\n        .map(email => `_- ${email}_`)\n        .join('\\n');\n}\n\n// Monta o texto formatado\nlet formattedText = `*Nome:* _${formatField(cadastrais.NOME) || \"Não informado\"}_\n*CPF:* _${formatField(cadastrais.CPF) || \"Não informado\"}_\n*Data Nascimento:* _${formatField(cadastrais.NASCTO) || \"Não informado\"}_\n*Idade:* _${formatField(cadastrais.IDADE) || \"Não informado\"}_\\n\\n`;\n\n// Telefones\nconst allTelefones = [\n    ...telefonesFixo.map(tel => tel.NUMERO),\n    ...telefonesMovel.map(tel => tel.NUMERO)\n].filter(num => formatField(num)).slice(0, 5);\n\nif (allTelefones.length > 0) {\n    formattedText += `## *Telefone*\\n${formatList(allTelefones, 5)}\\n\\n`;\n}\n\n// Emails\nif (emails.length > 0) {\n    formattedText += `## *Email*\\n${formatEmailList(emails.filter(email => formatField(email)), 5)}\\n\\n`;\n}\n\n// Endereços (comentado)\n// if (enderecos.length > 0) {\n//     formattedText += `## *Endereços*\\n`;\n//     enderecos.slice(0, 3).forEach((endereco, index) => {\n//         formattedText += `*${index + 1}.*\\n`;\n//         formattedText += `*Logradouro:* _${formatField(endereco.LOGRADOURO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Número:* _${formatField(endereco.NUMERO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Complemento:* _${formatField(endereco.COMPLEMENTO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Bairro:* _${formatField(endereco.BAIRRO) || \"Não informado\"}_\\n`;\n//         formattedText += `*CEP:* _${formatField(endereco.CEP) || \"Não informado\"}_\\n`;\n//         formattedText += `*Cidade:* _${formatField(endereco.CIDADE) || \"Não informado\"}_\\n`;\n//         formattedText += `*Estado:* _${formatField(endereco.ESTADO) || \"Não informado\"}_\\n\\n`;\n//     });\n// }\n\n// Possíveis Parentes\nif (parentes.length > 0) {\n    const formattedParentes = parentes.slice(0, 5).map(parente => {\n        return `- _${formatField(parente.NOME) || \"Desconhecido\"} - ${formatField(parente.PARENTESCO) || \"Não informado\"}_`;\n    });\n    formattedText += `## *Possíveis Parentes*\\n${formattedParentes.join('\\n')}\\n\\n`;\n}\n\n// Empresas\nif (empresas.length > 0) {\n    formattedText += `## *Empresas*\\n`;\n    empresas.slice(0, 5).forEach((empresa, index) => {\n        formattedText += `*${index + 1}.*\\n`;\n        formattedText += `*Razão Social:* _${formatField(empresa.RAZAO_SOCIAL) || \"Não informado\"}_\\n`;\n        formattedText += `*CNPJ:* _${formatField(empresa.CNPJ) || \"Não informado\"}_\\n`;\n        formattedText += `*Cidade:* _${formatField(empresa.CIDADE) || \"Não informado\"}_\\n`;\n        formattedText += `*Qualificação:* _${formatField(empresa.QUALIFICACAO) || \"Não informado\"}_\\n`;\n        formattedText += `*Data Entrada:* _${formatField(empresa.DATA_ENTRADA) || \"Não informado\"}_\\n\\n`;\n    });\n}\n\n// Resultado final sem quebra de linha extra no fim\nreturn { formattedText: formattedText.trimEnd() };\n"
      },
      "id": "37bf72e4-844e-42ce-b754-b103d3f9e372",
      "name": "Code8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1200,
        820
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedData }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2bf2063c-3d9f-4cbf-8b10-b2d9b308dad7",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        780,
        640
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "8b8095b1-ba11-4306-8602-9e78be3503cd",
              "leftValue": "={{ $('minerdapifoda').item.json.DADOS[0].NOME }}",
              "rightValue": "Nome:",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "671d9eaa-525a-4d22-a321-1b12d5c59779",
      "name": "If30",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        960,
        440
      ]
    }
  ],
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Mapa - Pendencias2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mapa - SCPC2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mapa - Protesto2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Créditos a retirar1": {
      "main": [
        [
          {
            "node": "Se crédito existe1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Maior ou igual1": {
      "main": [
        [
          {
            "node": "Retirar Créditos1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retirar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar saldo": {
      "main": [
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos1": {
      "main": [
        [
          {
            "node": "Créditos a retirar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe1": {
      "main": [
        [
          {
            "node": "Maior ou igual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos1": {
      "main": [
        [
          {
            "node": "Verificar saldo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If20": {
      "main": [
        [
          {
            "node": "Retornar Créditos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados N8N": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate6": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados N8N1": {
      "main": [
        [
          {
            "node": "Dados N8N",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Se site / bc1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Erro1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook3": {
      "main": [
        [
          {
            "node": "If31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request19": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot": {
      "main": [
        [
          {
            "node": "Resposta Typebot CPF Errado",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot1": {
      "main": [
        [
          {
            "node": "Resposta Typebot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Erro": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request6": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Code Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Horário funcionamento": {
      "main": [
        [
          {
            "node": "Verificar Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Horário funcionamento1": {
      "main": [
        [
          {
            "node": "se typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Horário funcionamento": {
      "main": [
        [
          {
            "node": "Horário funcionamento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fora do horário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fora do horário": {
      "main": [
        [
          {
            "node": "se typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If21": {
      "main": [
        [
          {
            "node": "Erro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot2": {
      "main": [
        [
          {
            "node": "Resposta Typebot Erro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot2": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "HTTP Request19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "CONSULTA _ TEXTO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CONSULTA _ TEXTO": {
      "main": [
        [
          {
            "node": "HTTP Request10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Formatar HTML": {
      "main": [
        [
          {
            "node": "Gerar PDF API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Limit3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PDF": {
      "main": [
        [
          {
            "node": "Limit3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Se base",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot CPF Errado": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot": {
      "main": [
        [
          {
            "node": "typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot1": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Erro1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot Erro": {
      "main": [
        [
          {
            "node": "typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados N8N1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "If22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar PDF API1": {
      "main": [
        [
          {
            "node": "IF PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If22": {
      "main": [
        [
          {
            "node": "Code Formatar HTML",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge60": {
      "main": [
        [
          {
            "node": "Merge78",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SCPC - 49": {
      "main": [
        [
          {
            "node": "Merge60",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Mapa - SCPC2": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 49": {
      "main": [
        [
          {
            "node": "Merge78",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE Protesto - 50": {
      "main": [
        [
          {
            "node": "Protesto - 52",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Protesto - 49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 52": {
      "main": [
        [
          {
            "node": "Merge78",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Mapa - Protesto2": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SCPC - 53": {
      "main": [
        [
          {
            "node": "Merge60",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE SCPC - 50": {
      "main": [
        [
          {
            "node": "SCPC - 53",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SCPC - 49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "SE SCPC - 50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "SE Protesto - 50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Pendencias2": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pendencias - 83": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE Pendencias - 82": {
      "main": [
        [
          {
            "node": "Pendencias - 87",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pendencias - 83",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pendencias - 87": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "SE Pendencias - 82",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge78": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados Histórico": {
      "main": [
        [
          {
            "node": "Histórico Supabse",
            "type": "main",
            "index": 0
          },
          {
            "node": "Base44 API - Histórico",
            "type": "main",
            "index": 0
          },
          {
            "node": "Base44 API - Última Consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Dados Histórico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request10": {
      "main": [
        [
          {
            "node": "If27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If27": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se base44": {
      "main": [
        [
          {
            "node": "Base44 API - RetornoConsulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta-base44": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito maior ou igual1": {
      "main": [
        [
          {
            "node": "Obter Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se site / bc1": {
      "main": [
        [
          {
            "node": "Obter Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Site1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito inferior1": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Site1": {
      "main": [
        [
          {
            "node": "Crédito maior ou igual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crédito inferior1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obter Supabase": {
      "main": [
        [
          {
            "node": "Se Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se Supabase": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - RetornoConsulta": {
      "main": [
        [
          {
            "node": "resposta-base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook1": {
      "main": [
        []
      ]
    },
    "Retirar Créditos": {
      "main": [
        [
          {
            "node": "Verificar saldo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salvar Supabase1": {
      "main": [
        [
          {
            "node": "minerdapifoda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se Supabase1": {
      "main": [
        [
          {
            "node": "minerdapifoda",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Salvar Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Code19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code19": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Se site / bc1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "Se Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If28": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If31": {
      "main": [
        [
          {
            "node": "Retornar Créditos1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Créditos a retirar": {
      "main": [
        [
          {
            "node": "Se crédito existe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Maior ou igual": {
      "main": [
        [
          {
            "node": "Retirar Créditos2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retirar Créditos3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar saldo1": {
      "main": [
        [
          {
            "node": "If32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos": {
      "main": [
        [
          {
            "node": "Créditos a retirar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe": {
      "main": [
        [
          {
            "node": "Maior ou igual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos2": {
      "main": [
        [
          {
            "node": "Verificar saldo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If32": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos3": {
      "main": [
        [
          {
            "node": "Verificar saldo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se base": {
      "main": [
        [
          {
            "node": "resposta-base44",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Se base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If33": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "If40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "If37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If39": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "confere.link1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If37": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If40": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "evodata1": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "confere.link1": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields18": {
      "main": [
        [
          {
            "node": "If52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If52": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas2": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields19": {
      "main": [
        [
          {
            "node": "If53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If53": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas3": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "Edit Fields13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields13": {
      "main": [
        [
          {
            "node": "If30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "Edit Fields18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Edit Fields19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "If39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If30": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "evodata1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields11": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "HTTP Request2": [
      {
        "json": {
          "data": {
            "Version": "1.0",
            "Status": 200,
            "SCPC": [
              {
                "Dt Ocorr": "10/04/2023",
                "Tp Devedor": "T",
                "Nome": "BANCO C6 SA",
                "Vr Dívida": "R$ 990,76",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "MANCC32676277880",
                "Dt Disp": "10/05/2023"
              },
              {
                "Dt Ocorr": "31/12/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/ESCOLA CRIAR-TE",
                "Vr Dívida": "R$ 7.126,82",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "2020061",
                "Dt Disp": "30/01/2023"
              },
              {
                "Dt Ocorr": "09/01/2022",
                "Tp Devedor": "T",
                "Nome": "ITAU UNIBANCO HOLDING SA",
                "Vr Dívida": "R$ 939,86",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "002781068160000",
                "Dt Disp": "08/02/2022"
              },
              {
                "Dt Ocorr": "13/12/2021",
                "Tp Devedor": "T",
                "Nome": "ITAU UNIBANCO S/A",
                "Vr Dívida": "R$ 3.077,24",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "000001872649932",
                "Dt Disp": "12/01/2022"
              },
              {
                "Dt Ocorr": "08/12/2021",
                "Tp Devedor": "T",
                "Nome": "LOJAS CEM/MATRIZ",
                "Vr Dívida": "R$ 4.038,30",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "UP=0;96;28613282",
                "Dt Disp": "07/01/2022"
              },
              {
                "Dt Ocorr": "11/10/2021",
                "Tp Devedor": "T",
                "Nome": "SP-CGT/LOJA OUSADIA",
                "Vr Dívida": "R$ 170,00",
                "Cidade": "CARAGUATATUBA",
                "UF": "SP",
                "Contrato": "139869/4",
                "Dt Disp": "10/11/2021"
              },
              {
                "Dt Ocorr": "07/09/2021",
                "Tp Devedor": "T",
                "Nome": "DMCARD PROC DE DADOS E C DE A LTDA",
                "Vr Dívida": "R$ 512,37",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "32676277880-0002896083",
                "Dt Disp": "07/10/2021"
              },
              {
                "Dt Ocorr": "02/04/2024",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 846,81",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "02/05/2024"
              },
              {
                "Dt Ocorr": "02/04/2024",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.346,65",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "02/05/2024"
              },
              {
                "Dt Ocorr": "21/12/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.889,38",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "20/01/2024"
              },
              {
                "Dt Ocorr": "26/07/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 351,41",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "25/08/2023"
              },
              {
                "Dt Ocorr": "26/07/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 390,19",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "25/08/2023"
              },
              {
                "Dt Ocorr": "26/07/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 675,17",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "25/08/2023"
              },
              {
                "Dt Ocorr": "28/03/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 7.126,82",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DS/",
                "Dt Disp": "27/04/2023"
              },
              {
                "Dt Ocorr": "15/02/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 258,32",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "17/03/2023"
              },
              {
                "Dt Ocorr": "10/02/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 464,54",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "12/03/2023"
              },
              {
                "Dt Ocorr": "02/09/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 523,29",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "02/10/2022"
              },
              {
                "Dt Ocorr": "12/04/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.630,45",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "12/05/2022"
              },
              {
                "Dt Ocorr": "12/04/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.698,00",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "12/05/2022"
              },
              {
                "Dt Ocorr": "24/11/2021",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 3.816,30",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/NP/",
                "Dt Disp": "24/12/2021"
              }
            ],
            "Protesto": [
              {
                "Data": "24/11/2021",
                "Valor Protesto": "R$ 3.816,30",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "12/04/2022",
                "Valor Protesto": "R$ 1.698,00",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "12/04/2022",
                "Valor Protesto": "R$ 1.630,45",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "02/09/2022",
                "Valor Protesto": "R$ 523,29",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "31/01/2023",
                "Valor Protesto": "R$ 3.624,80",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "10/02/2023",
                "Valor Protesto": "R$ 464,54",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "15/02/2023",
                "Valor Protesto": "R$ 258,32",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "28/03/2023",
                "Valor Protesto": "R$ 7.126,82",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/07/2023",
                "Valor Protesto": "R$ 351,41",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/07/2023",
                "Valor Protesto": "R$ 675,17",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/07/2023",
                "Valor Protesto": "R$ 390,19",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "21/12/2023",
                "Valor Protesto": "R$ 1.889,38",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "02/04/2024",
                "Valor Protesto": "R$ 1.346,65",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "02/04/2024",
                "Valor Protesto": "R$ 846,81",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "24/10/2024",
                "Valor Protesto": "R$ 728,15",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/12/2024",
                "Valor Protesto": "R$ 763,28",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "10/01/2025",
                "Valor Protesto": "R$ 2.604,14",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "25/02/2025",
                "Valor Protesto": "R$ 768,83",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              }
            ],
            "REFIN/PEFIN": [],
            "SERASA": {
              "Dados Gerais": [
                {
                  "Data Primeira Ocorrência": "",
                  "Data Última Ocorrência": "",
                  "Quantidade Ocorrências": 60
                }
              ]
            },
            "CADIN": [],
            "SICCF": [],
            "Cheque sem Fundos": [],
            "Pendências REFIN/PEFIN": [
              {
                "Dt Ocorr": "09/01/2022",
                "Tipo": "R-CART CREDI",
                "Avalista": "N",
                "Vr Dívida": "939,86",
                "Contrato": "2781068160000",
                "Instituição": "060872504000123"
              },
              {
                "Dt Ocorr": "13/12/2021",
                "Tipo": "R-CRED FINAN",
                "Avalista": "N",
                "Vr Dívida": "3.077,24",
                "Contrato": "0001872649932",
                "Instituição": "060701190000104"
              },
              {
                "Dt Ocorr": "12/09/2021",
                "Tipo": "R-CRED FINAN",
                "Avalista": "N",
                "Vr Dívida": "19.504,00",
                "Contrato": "015000229668",
                "Instituição": "059588111000103"
              },
              {
                "Dt Ocorr": "10/12/2023",
                "Tipo": "R-EMPRES CTA",
                "Avalista": "N",
                "Vr Dívida": "156,06",
                "Contrato": "237106",
                "Instituição": "008561701000101"
              },
              {
                "Dt Ocorr": "14/12/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "441388001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/03/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "10327001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "10/02/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "53829001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "19/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "00315001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "19/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "00313001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "14/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "70635001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "84906001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "250,00",
                "Contrato": "52516001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "01/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "15.108,73",
                "Contrato": "92228001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/12/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "81725001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "26/11/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "52588001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "08/11/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "89876001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "10/10/2021",
                "Tipo": "R-CRED FINAN",
                "Avalista": "N",
                "Vr Dívida": "108,94",
                "Contrato": "149250882",
                "Instituição": "004088208000165"
              },
              {
                "Dt Ocorr": "07/10/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "09396001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/10/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "36061001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "25/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "845,20",
                "Contrato": "70266001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "25/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "70268001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "24/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "69134001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "24/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "69133001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "14/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "96017001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "14/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "96021001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "46992001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "16389001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "16/08/2021",
                "Tipo": "P-CONS VEICU",
                "Avalista": "N",
                "Vr Dívida": "1.715,71",
                "Contrato": "399/735-37",
                "Instituição": "045441789000154"
              },
              {
                "Dt Ocorr": "07/08/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "23482001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "17/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "44376001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "09/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "86370001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "37187001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "56549001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "30/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "28301001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "09/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "09383001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "09/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "09384001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "53327001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/05/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "63707001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "23/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "03354001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "18/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "78283001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "18/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "78285001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "99602001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "89881001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "04/03/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "281,74",
                "Contrato": "62600001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/03/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "34878001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/02/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "84506001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/01/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "83691001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "17/12/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "22071001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/12/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "44318001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "11/11/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "281,74",
                "Contrato": "92311001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "11/11/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "92312001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/11/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "50136001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "13/10/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "48584001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/10/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "01955001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/09/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "64544001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "12/08/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "68619001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/08/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "23600001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/07/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "899,00",
                "Contrato": "75679001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/05/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "899,00",
                "Contrato": "40321001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "23/04/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "845,20",
                "Contrato": "09941001",
                "Instituição": "010215988000160"
              }
            ],
            "Nome": "ANDERSON DOS SANTOS JORGE"
          }
        }
      }
    ],
    "evodata1": [
      {
        "json": {
          "retorno": "OK",
          "msg": {
            "Dados Pessoais": {
              "Nome": "NEILTON RODRIGUES DOS SANTOS",
              "Sexo": "NEILTON RODRIGUES DOS SANTOS",
              "Nascimento": "16/10/1999",
              "Nome da Mae": "LUCINEIDE DAVI DOS SANTOS",
              "Nome do Pai": "VALDIVINO PAULO RODRIGUES DOS SANTOS",
              "Conjuge": null,
              "CPF do Conjuge": null,
              "CD Sit Cad": "2",
              "DT Sit Cad": "2020-01-25 00:00:00",
              "Endereco de Nascimento": "RUA MAXIMILIANO KOLBE",
              "Raca/Cor": "PARDA",
              "Falecido": null,
              "Data Falecimento": null,
              "Id Portador Deficiencia": null
            },
            "Documentos": {
              "CPF": "70583924123",
              "CBO": null,
              "CNS": "705405438353990",
              "NIS": null,
              "PIS": null,
              "RG": {
                "Numero": null,
                "Orgao Emissor": null,
                "UF": null,
                "Data da Emissao": null
              },
              "CTPS": {
                "Numero": null,
                "Serie": null,
                "Data da Emissao": null
              },
              "Titulo de Eleitor": {
                "Numero": null,
                "Zona": null,
                "Secao": null
              },
              "Certidao de Nascimento": null,
              "Certidao de Casamento": null
            },
            "Parentes": [],
            "Veiculos": [],
            "Dados Universitarios": [],
            "Dados Trabalhistas": [],
            "Poder Aquisitivo": {
              "ID Contatos": "368689306",
              "Codigo do Poder Aquisitivo": "2",
              "Poder Aquisitivo": "BAIXO",
              "Renda Poder Aquisitivo": "746,1001015860885",
              "Fx Poder Aquisitivo": "De R$ 630 até R$ 1018",
              "Instituicao Bancaria": null,
              "Codigo da Agencia": null,
              "Ano Referencia": null,
              "Data Lote": null,
              "Tarjetas": []
            },
            "Perfil de Consumo": [],
            "Telefones": [
              {
                "Nome": "NEILTON RODRIGUES DOS SANTOS",
                "CPF": "70583924123",
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": null,
                "CPF": null,
                "Telefone": null,
                "Tipo": null
              },
              {
                "Nome": "NEILTON RODRIGUES DOS SANTOS",
                "CPF": "70583924123",
                "Telefone": "5562993115118",
                "Tipo": null
              }
            ],
            "Emails": [
              {
                "Nome": "NEILTON RODRIGUES DOS SANTOS",
                "CPF": "70583924123",
                "E-mail": null
              }
            ],
            "Enderecos": [
              {
                "Rua": "RUA MAXIMILIANO KOLBE",
                "Bairro": "VIII CENTENARIO",
                "CEP": "75490000",
                "Cidade": "São Francisco de Goiás",
                "Estado": "Goiás"
              }
            ],
            "Vizinhos": []
          }
        }
      }
    ],
    "confere.link1": [
      {
        "json": {
          "data": "<?xml version='1.0' encoding='ISO-8859-1'?><RETORNO>\r\n<CADASTRAIS>\r\n<CPF>11383223696</CPF>\r\n<NOME>ARTHUR BALDIOTTI MENDONCA ALVARES</NOME>\r\n<NOME_MAE>MARIA LUIZA BALDIOTTI MENDONCA</NOME_MAE>\r\n<NASCTO>03/04/1993</NASCTO>\r\n<IDADE>31 anos</IDADE>\r\n<SEXO>Masculino</SEXO>\r\n\r\n<RG></RG>\r\n<ORGAO_EMISSOR></ORGAO_EMISSOR>\r\n<UF_EMISSAO></UF_EMISSAO>\r\n<TITULO_ELEITOR></TITULO_ELEITOR>\r\n<NIT></NIT>\r\n<ESCOLARIDADE> </ESCOLARIDADE>\r\n<NACIONALIDADE></NACIONALIDADE>\r\n<PROFISSAO></PROFISSAO>\r\n<SALARIO></SALARIO>\r\n<CLASSE_ECONOMICA></CLASSE_ECONOMICA>\r\n<CONSTA_OBITO></CONSTA_OBITO>\r\n\r\n</CADASTRAIS>\r\n<INSS>\r\n\r\n</INSS><TELEFONES_FIXO><TELEFONE><NUMERO>3133344803</NUMERO><OPERADORA>TELEMAR/MG</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>FIXO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE></TELEFONES_FIXO><TELEFONES_MOVEL><TELEFONE><NUMERO>31997781110</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999493378</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999812824</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA>23/03/2013</DATA_REFERENCIA><TIPO_TEL>MOVEL POS-PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999951110</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>31975122221</NUMERO><OPERADORA>TIM CELULAR S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE></TELEFONES_MOVEL><EMAILS><EMAIL>tiosam_importados@hotmail.com</EMAIL>\r\n<EMAIL>arthurbaldiotti@hotmail.com</EMAIL>\r\n</EMAILS><ENDERECOS><ENDERECO><LOGRADOURO>R FRANCISCO SALES</LOGRADOURO><NUMERO>129</NUMERO><COMPLEMENTO>AP 602</COMPLEMENTO><BAIRRO>CENTRO</BAIRRO><CEP>35660017</CEP><CIDADE>PARA DE MINAS</CIDADE><ESTADO>MG</ESTADO></ENDERECO></ENDERECOS><POSSIVEIS_PARENTES><CONTATO><CPF>43315763615</CPF>\r\n<NOME>MARIA LUIZA BALDIOTTI MENDONCA</NOME>   \r\n<IDADE>63 anos</IDADE>\r\n<LOCAL>PARA DE MINAS/MG</LOCAL>\r\n<PARENTESCO>MAE</PARENTESCO>\r\n</CONTATO>\r\n<CONTATO>\r\n<CPF>11628911654</CPF>\r\n<NOME>AUGUSTO BALDIOTTI MENDONCA ALVARES</NOME>   \r\n<IDADE>24 anos</IDADE>\r\n<LOCAL></LOCAL>\r\n<PARENTESCO>IRMAO(A)</PARENTESCO>\r\n</CONTATO></POSSIVEIS_PARENTES><POSSIVEIS_CONTATOS></POSSIVEIS_CONTATOS><REFERENCIA_PROFISSIONAL></REFERENCIA_PROFISSIONAL><EMPRESAS_SOCIO><EMPRESA_SOCIO>\r\n<RAZAO_SOCIAL>REDE QUERO IMOVEIS LTDA</RAZAO_SOCIAL>\r\n<CNPJ>40126612000140</CNPJ>\r\n<CIDADE>PARA DE MINAS-MG</CIDADE>\r\n<QUALIFICACAO>Socio-Administrador</QUALIFICACAO>\r\n<DATA_ENTRADA>16/12/2020</DATA_ENTRADA>\r\n<VALOR_PARTICIPACAO></VALOR_PARTICIPACAO>\r\n</EMPRESA_SOCIO></EMPRESAS_SOCIO></RETORNO>"
        }
      }
    ],
    "Dados - ehmconsultas2": [
      {
        "json": {
          "Version": "1.0",
          "Status": 200,
          "Data": [
            {
              "NOME": "ANDERSON DOS SANTOS JORGE",
              "NOME_SOCIAL": null,
              "CPF": "32676277880",
              "DATA_NASCIMENTO": "25/06/1983",
              "SEXO": "M",
              "IDENTIDADE_GENERO": null,
              "NOME_MAE": "MARIA JUSILENE DOS SANTOS JORGE",
              "NOME_PAI": null,
              "CNS": "706003838968046",
              "OBITO": "false",
              "DATA_OBITO": null,
              "ESTADO_CIVIL": null,
              "ESCOLARIDADE": null,
              "TELEFONE": "1238420788",
              "MUNICIPIO_NASCIMENTO": "999999",
              "LOGRADOURO": "R GOES",
              "NUMERO": "21",
              "BAIRRO": "PEREQUE MIRIM",
              "COMPLEMENTO": null,
              "MUNICIPIO": "355540",
              "UF": "SP",
              "PAIS": "1",
              "CEP": "11680000",
              "NUMERO_RG": null,
              "ORGAO_EMISSOR_RG": null,
              "UF_RG": null,
              "EMAIL": null,
              "EMAIL2": null
            }
          ]
        }
      }
    ],
    "Dados - ehmconsultas3": [
      {
        "json": {
          "DATA": {
            "Version": "1.0",
            "Status": 200,
            "DADOS_PESSOAIS": [
              {
                "CPF": "32676277880",
                "NOME": "ANDERSON DOS SANTOS JORGE",
                "SEXO": "M",
                "NASCIMENTO": "1983-06-25 00:00:00",
                "NOME_CIVIL": "Sem Informação",
                "NOME_MAE": "MARIA JUSILENE DOS SANTOS JORGE",
                "NOME_PAI": "MANOEL VICENTE JORGE",
                "ESTADO_CIVIL": "Sem Informação",
                "RG": "Sem Informação",
                "ORGAO_EMISSOR": "Sem Informação",
                "UF_EMISSAO": "Sem Informação",
                "NACIONALIDADE": "Sem Informação",
                "CPF_CONJUGE": "Sem Informação",
                "SEXO_RETRATADO": "M",
                "OB_UNB": "Sem Informação",
                "DATA_OBTO": "Sem Informação",
                "CBO": "252105",
                "ID_CBO": "2500",
                "CODIGO_MOSAIC": "E17",
                "RENDA": "3933",
                "TITULO_ELEITOR": "Sem Informação",
                "CODIGO_MOSAIC_NOVO": "Sem Informação",
                "CODIGO_MOSAIC_SECUNDARIO": "314848160191"
              }
            ],
            "PARENTES": [
              {
                "NOME": "REGIANE DOS SANTOS JORGE",
                "CPF": "28430412875",
                "VINCULO": "IRMA(O)"
              },
              {
                "NOME": "ALEX DOS SANTOS JORGE",
                "CPF": "33061066829",
                "VINCULO": "IRMA(O)"
              },
              {
                "NOME": "MARIA JUSILENE DOS SANTOS JORGE",
                "CPF": "13501071825",
                "VINCULO": "MAE"
              },
              {
                "NOME": "CRISTIANE DOS SANTOS COSTA",
                "CPF": "28198843850",
                "VINCULO": "IRMA(O)"
              }
            ],
            "PIS": [
              {
                "PIS": "19028510799",
                "DT_INCLUSAO": "Sem informação"
              },
              {
                "PIS": "19028510799",
                "DT_INCLUSAO": "Sem informação"
              }
            ],
            "NIS": [
              "Sem Informação"
            ],
            "CNS": [
              "Sem Informação"
            ],
            "DADOS_ELEITORAIS": [
              "Sem Informação"
            ],
            "SCORE_BASE": [
              {
                "SCORE_SERASA": "31",
                "SCORE_SERASA_FAIXA": "ALTISSIMO",
                "SCORE_BOA_VISTA": "46",
                "SCORE_BOA_VISTA_FAIXA": "ALTISSIMO"
              }
            ],
            "SCORE_NOVO": [
              {
                "SCORE_SERASA": "46"
              }
            ],
            "SCORE_ANTIGO": [
              {
                "SCORE_SERASA": "31",
                "SCORE_SERASA_FAIXA": "ALTISSIMO",
                "SCORE_BOA_VISTA": "125",
                "SCORE_BOA_VISTA_FAIXA": "ALTISSIMO"
              }
            ],
            "IRPF": [
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2016",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "IMPOSTO A PAGAR"
              },
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2014",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "SUA DECLARACAO NAO CONSTA NA BASE DE DADOS DA RECEITA FEDERAL"
              },
              {
                "Instituicao_Bancaria": "Sem Informação",
                "Cod_Agencia": "Sem Informação",
                "Lote": "Sem Informação",
                "Ano_Referencia": "2018",
                "Dt_Lote": "Sem informação",
                "Sit_Receita_Federal": "SALDO INEXISTENTE DE IMPOSTO A PAGAR OU A RESTITUIR."
              }
            ],
            "PODER_AQUISITIVO": [
              "Sem Informação"
            ],
            "CLASSE_SOCIAL": [
              {
                "CLASSE_SOCIAL": "B",
                "SUB_CLASSE_SOCIAL": "B2"
              },
              {
                "CLASSE_SOCIAL": "B",
                "SUB_CLASSE_SOCIAL": "B2"
              }
            ],
            "PROFISSAO": [
              "Sem Informação"
            ],
            "PRODUTOR_RURAL": [
              "Sem Informação"
            ],
            "QUADRO_SOCIETARIO": [
              {
                "CNPJ": "14294259000105",
                "RAZAO_SOCIAL": "ANDERSON DOS SANTOS JORGE",
                "NOME_FANTASIA": "AMBIENTES UBATUBA",
                "PARTICIPACAO_SOCIO": "100.00"
              }
            ],
            "BOLSA_FAMILIA": [
              "Sem Informação"
            ],
            "FGTS": [
              "Sem Informação"
            ],
            "ESCOLARIDADE": [
              {
                "ESCOLARIDADE": "SUPERIOR COMPLETO"
              }
            ],
            "UNIVERSIDADE": [
              "Sem Informação"
            ],
            "SERVIDOR_PUBLICO": [
              "Sem Informação"
            ],
            "MINHA_CASA_MINHA_VIDA": [
              "Sem Informação"
            ],
            "ENDERECOS": [
              {
                "TIPO": "R",
                "NOME": "GOMIDE",
                "NUMERO": "47",
                "COMPLEMENTO": "Sem Informação",
                "BAIRRO": "Sem informação",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              },
              {
                "TIPO": "R",
                "NOME": "GOIS",
                "NUMERO": "21",
                "COMPLEMENTO": "C",
                "BAIRRO": "PEREQUE MIRIM",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              },
              {
                "TIPO": "Sem informação",
                "NOME": "VEL TRINTA REIS",
                "NUMERO": "5",
                "COMPLEMENTO": "C 3",
                "BAIRRO": "ENSEADA",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              },
              {
                "TIPO": "Sem informação",
                "NOME": "DOS TRINTA REIS",
                "NUMERO": "5",
                "COMPLEMENTO": "C 3",
                "BAIRRO": "Sem informação",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              },
              {
                "TIPO": "R",
                "NOME": "CONCEICAO",
                "NUMERO": "120",
                "COMPLEMENTO": "LJ 16 AUS PR SHOP",
                "BAIRRO": "Sem informação",
                "CIDADE": "UBATUBA",
                "UF": "SP",
                "CEP": "11680000"
              }
            ],
            "EMAIL_BASE": [
              {
                "EMAIL": "andersonsjorge@bol.com.br",
                "EMAIL_SCORE": "OTIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "ambientesimoveis@gmail.com",
                "EMAIL_SCORE": "BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "at-estevam@bol.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "contato@ambientesimoveis.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "andersondjorge@hotmail.com",
                "EMAIL_SCORE": "PESSIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              }
            ],
            "EMAIL_NEW": [
              {
                "EMAIL": "andersonsjorge@bol.com.br",
                "EMAIL_SCORE": "OTIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "ambientesimoveis@gmail.com",
                "EMAIL_SCORE": "BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "at-estevam@bol.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "contato@ambientesimoveis.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "andersondjorge@hotmail.com",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              }
            ],
            "EMAIL_NOVO": [
              {
                "EMAIL": "andersonsjorge@bol.com.br",
                "EMAIL_SCORE": "OTIMO",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "ambientesimoveis@gmail.com",
                "EMAIL_SCORE": "BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "at-estevam@bol.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              },
              {
                "EMAIL": "contato@ambientesimoveis.com.br",
                "EMAIL_SCORE": "POTENCIALMENTE BOM",
                "EMAIL_PESSOAL": "N",
                "BLACKLIST": "N",
                "DOMINIO": "DESCONHECIDO"
              },
              {
                "EMAIL": "andersondjorge@hotmail.com",
                "EMAIL_SCORE": "RUIM",
                "EMAIL_PESSOAL": "S",
                "BLACKLIST": "N",
                "DOMINIO": "PUBLICO"
              }
            ],
            "TELEFONES": [
              {
                "TELEFONE": "1238420788",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "12997122929",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "1238422303",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "1238422288",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "12997318985",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "1238422303",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "1238420788",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "1238422288",
                "CLASSIFICACAO": "D"
              },
              {
                "TELEFONE": "12997122929",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "12997318985",
                "CLASSIFICACAO": "D"
              }
            ]
          }
        }
      }
    ],
    "minerdapifoda": [
      {
        "json": {
          "DADOS": [
            {
              "CPF": "32676277880",
              "NOME": "ANDERSON DOS SANTOS JORGE",
              "SEXO": "M",
              "NASC": "25/06/1983",
              "NOME_MAE": "MARIA JUSILENE DOS SANTOS JORGE",
              "NOME_PAI": "MANOEL VICENTE JORGE",
              "ESTCIV": "",
              "NACIONALID": "",
              "RG": "",
              "ORGAO_EMISSOR": "",
              "UF_EMISSAO": "",
              "DT_OB": "",
              "RENDA": "",
              "DT_INFORMACAO": "14/06/2008",
              "TITULO_ELEITOR": "314848160191"
            }
          ],
          "EMAIL": [
            {
              "EMAIL": "andersonsjorge@bol.com.br"
            },
            {
              "EMAIL": "ambientesimoveis@gmail.com"
            },
            {
              "EMAIL": "at-estevam@bol.com.br"
            },
            {
              "EMAIL": "contato@ambientesimoveis.com.br"
            },
            {
              "EMAIL": "andersondjorge@hotmail.com"
            }
          ],
          "HISTORICO_TELEFONES": [
            {
              "DDD": "12",
              "TELEFONE": "38420788",
              "TIPO_TELEFONE": "1",
              "DT_INCLUSAO": "06/01/2012",
              "DT_INFORMACAO": "24/10/2011",
              "SIGILO": "",
              "NSU": "000000549681564",
              "CLASSIFICACAO": "D"
            },
            {
              "DDD": "12",
              "TELEFONE": "997122929",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "18/07/2013",
              "DT_INFORMACAO": "06/07/2019",
              "SIGILO": "",
              "NSU": "000000829688412",
              "CLASSIFICACAO": "A0"
            },
            {
              "DDD": "12",
              "TELEFONE": "38422303",
              "TIPO_TELEFONE": "1",
              "DT_INCLUSAO": "17/11/2014",
              "DT_INFORMACAO": "10/11/2014",
              "SIGILO": "",
              "NSU": "000000572485181",
              "CLASSIFICACAO": "A0"
            },
            {
              "DDD": "12",
              "TELEFONE": "38422288",
              "TIPO_TELEFONE": "2",
              "DT_INCLUSAO": "28/05/2015",
              "DT_INFORMACAO": "08/08/2015",
              "SIGILO": "",
              "NSU": "000000756253886",
              "CLASSIFICACAO": "D"
            },
            {
              "DDD": "12",
              "TELEFONE": "997318985",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "23/08/2016",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "D"
            }
          ],
          "PARENTES": [
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 28430412875,
              "NOME_VINCULO": "REGIANE DOS SANTOS JORGE"
            },
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 33061066829,
              "NOME_VINCULO": "ALEX DOS SANTOS JORGE"
            },
            {
              "VINCULO": "MAE",
              "CPF_VINCULO": 13501071825,
              "NOME_VINCULO": "MARIA JUSILENE DOS SANTOS JORGE"
            },
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 28198843850,
              "NOME_VINCULO": "CRISTIANE DOS SANTOS COSTA"
            }
          ],
          "PODER_AQUISITIVO": [],
          "ENDERECOS": [
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "CONCEICAO",
              "LOGR_NUMERO": "120",
              "LOGR_COMPLEMENTO": "LJ 16 AUS PR SHOP",
              "BAIRRO": "NULL",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": null
            },
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "GOMIDE",
              "LOGR_NUMERO": "47",
              "LOGR_COMPLEMENTO": null,
              "BAIRRO": "NULL",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": "07/03/2018"
            },
            {
              "LOGR_TIPO": "NULL",
              "LOGR_NOME": "DOS TRINTA REIS",
              "LOGR_NUMERO": "5",
              "LOGR_COMPLEMENTO": "C 3",
              "BAIRRO": "NULL",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": null
            },
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "GOIS",
              "LOGR_NUMERO": "21",
              "LOGR_COMPLEMENTO": "C",
              "BAIRRO": "PEREQUE MIRIM",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": "12/12/2014"
            },
            {
              "LOGR_TIPO": "NULL",
              "LOGR_NOME": "VEL TRINTA REIS",
              "LOGR_NUMERO": "5",
              "LOGR_COMPLEMENTO": "C 3",
              "BAIRRO": "ENSEADA",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": "28/10/2019"
            }
          ],
          "PIS": [
            {
              "PIS": 19028510799
            }
          ],
          "UNIVERSITARIO": [],
          "SCORE": [
            {
              "CSB8": "31",
              "CSB8_FAIXA": "ALTISSIMO",
              "CSBA": 46,
              "CSBA_FAIXA": "ALTISSIMO"
            }
          ],
          "IRPF": [
            {
              "DocNumber": 32676277880,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "",
              "Lote": "",
              "Sit_Receita_Federal": "SUA DECLARACAO NAO CONSTA NA BASE DE DADOS DA RECEITA FEDERAL ",
              "CADASTRO_ID": 3963,
              "CPF": 32676277880,
              "CONTATOS_ID": 20857024
            },
            {
              "DocNumber": 32676277880,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "",
              "Lote": "",
              "Sit_Receita_Federal": "SALDO INEXISTENTE DE IMPOSTO A PAGAR OU A RESTITUIR.",
              "CADASTRO_ID": 4079,
              "CPF": 32676277880,
              "CONTATOS_ID": 20857024
            },
            {
              "DocNumber": 32676277880,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "",
              "Lote": "",
              "Sit_Receita_Federal": "IMPOSTO A PAGAR",
              "CADASTRO_ID": 3963,
              "CPF": 32676277880,
              "CONTATOS_ID": 20857024
            }
          ],
          "TSE": [],
          "INTERESSES": [
            {
              "cpf": 32676277880,
              "creditoPessoalPreAprovado": 1,
              "creditoImobiliarioPreAprovado": 0,
              "financiamentoDeVeiculoPreAprovado": 1,
              "classeMedia": 0,
              "debitoAutmatico": 1,
              "possuiLuxo": 1,
              "possuiInvestimentos": 1,
              "possuiCartaoDeCredito": 1,
              "possuiMultiplosCartoes": 0,
              "possuiContaAltoPadrao": 0,
              "possuiCartaoBlack": 0,
              "possuiCartaoPrime": 0,
              "possuiCelularPrePago": 0,
              "possuiCelularPosPago": 0,
              "possuiMilhasAcumuladas": 1,
              "possuiCasaPropria": 1,
              "possuiDescontos": 1,
              "possuiContasCorrentes": 1,
              "possuiSeguroAutomotivo": 1,
              "possuiPrevidenciaPrivada": 1,
              "possuiInternetBanking": 1,
              "possuiTokenInstalado": 1,
              "realizouViagens": 1,
              "creditoPessoal": 79,
              "financiamentoVeiculo": 88,
              "compraInternet": 51,
              "multiplosCartoes": 42,
              "cartaoPrime": 49,
              "tvCabo": 58,
              "bandaLarga": 70,
              "casaPropria": 49,
              "celularPrePago": 48,
              "celularPosPago": 42,
              "creditoMobiliario": 44,
              "seguroAutomotivo": 73,
              "seguroSaude": 53,
              "seguroVida": 75,
              "seguroResidencial": 56,
              "investimentos": 73,
              "consignado": 53,
              "previdenciaPrivada": 74,
              "resgateMilhas": 66,
              "cacadorDescontos": 55,
              "fitness": 67,
              "turismo": 65,
              "luxo": 5,
              "cinefilo": 72,
              "transportePublico": 31,
              "jogosOnline": 52,
              "videoGame": 60,
              "earlyAdopters": 60
            }
          ]
        }
      }
    ]
  },
  "versionId": "de71e317-f65b-480a-bc1f-8d2e3a43b46c",
  "triggerCount": 1,
  "tags": []
}