{
  "createdAt": "2025-07-25T00:45:22.039Z",
  "updatedAt": "2025-07-25T11:46:57.000Z",
  "id": "z4qpWevfzbKX1Y2y",
  "name": "Dividas CPF 7 Principal",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Nome Consulta",
              "value": "={{ $json['Tipo Consulta'] }}",
              "type": "string"
            },
            {
              "id": "ac5a7a11-a016-4827-a7ae-88a6490e25ec",
              "name": "URL Consulta Padrão",
              "value": "-",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": "={{ $json['Credito consulta'] }}",
              "type": "number"
            },
            {
              "id": "a6c1282a-2197-4d92-97f8-e2cad05f4676",
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "145e0100-4cac-4b39-9ba7-0e27112ff4bc",
      "name": "Dados N8N",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -4600,
        920
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Tipo Consulta",
              "value": "Consulta Serasa + SCPC Boa Vista + Protestos + Cadin + Score + Renda + Dados + Resumo IA (6 créditos)",
              "type": "string"
            },
            {
              "id": "ac5a7a11-a016-4827-a7ae-88a6490e25ec",
              "name": "URL Consulta Padrão",
              "value": "-",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": 6,
              "type": "number"
            },
            {
              "id": "5fa0c448-711a-479b-9186-918d50e48088",
              "name": "Prompt Resumo IA",
              "value": "=Você receberá dados financeiros e de pendências relacionadas a um CPF ou CNPJ, incluindo informações como dívidas, protestos, status de crédito e score. Sua tarefa é organizar essas informações de maneira clara e objetiva, estruturando-as em seções e terminando com um breve resumo da situação financeira da pessoa física ou jurídica.\n\nInstruções para a Estrutura e Redação:\nEstrutura dos Dados:\nInicie apresentando as principais informações do CPF ou CNPJ, como nome, data de nascimento, nome da mãe e situação na Receita Federal, se disponível.\nCrie uma seção que apresente, de forma resumida, todas as pendências financeiras, dívidas e protestos identificados.\nApresente o score de crédito e a probabilidade de inadimplência, se forem disponibilizados.\n\nResumo da Situação Financeira:\nElabore um parágrafo resumindo a situação financeira geral do CPF ou CNPJ.\nUse uma linguagem neutra e clara, apontando os riscos de crédito, quantidade de dívidas ou protestos e qualquer outra informação relevante que possa impactar a análise do perfil financeiro.\n\nObservações Importantes:\nNÃO exiba ou informe nenhum dado de contato, incluindo telefones, endereços ou e-mails.\nNÃO invente dados que não foram explicitamente fornecidos.\nSiga rigorosamente as normas de proteção de dados pessoais (LGPD), respeitando a privacidade do consultado.\n\nSegue abaixo um breve exemplo de resumo\n\"### Resumo da Situação Financeira\nRafael dos Santos Nogueira apresenta um histórico financeiro com múltiplas pendências, incluindo dívidas com instituições educacionais e um protesto registrado. O total das pendências varia, mas a principal dívida se destaca no valor de R$ 1.467,62. Essas ocorrências podem impactar negativamente seu acesso ao crédito. A situação atual sugere um certo risco de inadimplência e é recomendável que Rafael busque regularizar suas pendências para evitar complicações financeiras futuras.\"\n\nFaça um breve resumo com no máximo 700 caracteres de forma simples explicando a situação financeira utilizando todas as informações fornecidas. Não ignore nenhum dado. No resumo você não precisa escrever ou listar todas as pendências. Apenas resumir com um total e quantidade dos titulos abaixo.\nO titulo do resumo precisa ser exatamente \"### RESUMO DA SITUAÇÃO FINANCEIRA\" (EM LETRAS MAIÚSCULAS)\nUma observação. O titulo dos menus estão entre ##\nRetorne apenas os dados a partir de \"## RESUMO DA SITUAÇÃO FINANCEIRA\"\n\nAtenção, todos os dados e informações acima serve exclusivamente como exemplo.\nUtilize somente os dados abaixo para formatar o resumo:",
              "type": "string"
            },
            {
              "id": "ddf0e450-e00e-4d4c-b535-e2017c7b1158",
              "name": "Prompt PDF",
              "value": "=Objetivo: Formatar os dados da consulta de crédito de forma estruturada e organizada, seguindo o modelo de análise de crédito do Serasa, retornando exclusivamente um código HTML.\nInstruções:\n* Retornar apenas o HTML, sem nenhum outro texto no output.\n* Seguir a estrutura de tabelas para organizar os dados.\n* Usar fontes de até 11px para informações dentro das tabelas.\n* Remover o título <h1>, mas adicionar duas quebras de linha (<br><br>) após a logo para espaçamento.\n* Não alterar o campo \"URL-LOGO\", pois ele será substituído dinamicamente.\n* Adicionar \"Resumo através de IA\" no final, com um resumo dos dados recebidos bem básico sem apresentar muitos os valores.\n* Incluir um rodapé com informações de confidencialidade e LGPD, usando fonte de 9px e alinhado à esquerda.\n* Nunca utilizar a expressão \"Dados do Cotista\", apenas \"Dados\".\nFormato esperado:\n* HTML bem estruturado, com seções claras.\n* Uso de <div> para blocos de informações e <table> para dados tabulares.\n* Listas <ul> para e-mails, telefones e parentes.\n* Footer fixo no final do relatório.\n* Caso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\n* É obrigatório que todas as informações fornecidas abaixo conste no HTML.\n* Se tiver \"_Sem pendências registradas._\", \"_Sem pendências._\" ou algo que comece e termine com \"_\", remova o \"_\".\n* Se o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\n* Se não existir nenhum email, não adicione no html Email\n* Se não existir nenhum telefone, não adicione no html Telefone\n* Se não existir nenhum Possíveis Parentes, não adicione no html Possíveis Parentes\n* Se email estiver vazio ou não existir, não crie no html <strong>Email:</strong>\n* Se telefone estiver vazio ou não existir, não crie no html <strong>Telefone:</strong>\n\nAdicione um texto no final com os dados recebidos de \"RESUMO ATRAVÉS DE IA\"\"\n\nAdicione também um rodapé na página com fonte tamanho 9 alinhado a esquerda da página com os seguintes dados:\n\"INFORMAÇÕES IMPORTANTES\nESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO , RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.\n\nMINUTA DE DECLARAÇÃO LGPD\nDECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.\"\n\nHTML DE EXEMPLO 1:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=“URL-LOGO” alt=\"Logo\" class=\"banner\"><br><br>\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Nome:</span> CARLOS LEANDRO DOS SANTOS ARRUDA</p>\n            <p><span class=\"info\">CPF:</span> 51173417400</p>\n            <p><span class=\"info\">Data de Nascimento:</span> 1966-11-15</p>\n            <p><span class=\"info\">Nome da Mãe:</span> MARIA LUCIA DOS SANTOS ARRUDA</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">E-mails</h2>\n            <ul>\n                <li>carlos.leandro@provedor.com</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Possíveis Parentes</h2>\n            <ul>\n                <li>MARIA LUCIA DOS SANTOS ARRUDA - MAE</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Score</h2>\n            <div class=\"score-box\">517</div>\n            <p><span class=\"info\">Tipo Score:</span> SCORE 6 MESES</p>\n            <p><span class=\"info\">Observação:</span> A CHANCE DE UM CONSUMIDOR COM SCORE ENTRE 501 E 600 PAGAR SEUS COMPROMISSOS FINANCEIROS EM 6 MESES É DE 59,25%</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">CADIN</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">SCPC</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Protestos</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>CARLOS LEANDRO DOS SANTOS ARRUDA apresenta um histórico financeiro com apenas um score de crédito de 517, indicando uma chance de 59,25% de pagar compromissos financeiros em 6 meses. Apesar de não ter pendências registradas nos cadastros de inadimplentes (CADIN, SCPC ou PROTESTOS), é importante lembrar que o score de crédito é apenas um indicador da situação financeira. É recomendável que CARLOS LEANDRO BUSQUE MANTER UM HISTÓRICO FINANCEIRO SAUDÁVEL PARA EVITAR COMPILICAÇÕES FUTURAS.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nHTML DE EXEMPLO 2:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 12px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: center; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\">\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Identificação</h2>\n            <p><span class=\"info\">Nome:</span> ANDERSON DOS SANTOS JORGE</p>\n            <p><span class=\"info\">CPF:</span> 326.762.778-80</p>\n            <p><span class=\"info\">Data de Nascimento:</span> 25/06/1983</p>\n            <p><span class=\"info\">Nome da Mãe:</span> MARIA JUSILENE DOS SANTOS JORGE</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Contato</h2>\n            <ul>\n                <li>andersonsjorge@bol.com.br</li>\n                <li>ambientesimoveis@gmail.com</li>\n                <li>at-estevam@bol.com.br</li>\n                <li>contato@ambientesimoveis.com.br</li>\n                <li>andersondjorge@hotmail.com</li>\n            </ul>\n            <h2 class=\"section-header\">Telefones</h2>\n            <ul>\n                <li>5517991921913</li>\n                <li>1732515124</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Possíveis Parentes</h2>\n            <ul>\n                <li>REGIANE DOS SANTOS JORGE - IRMÃ(O)</li>\n                <li>ALEX DOS SANTOS JORGE - IRMÃO(O)</li>\n                <li>MARIA JUSILENE DOS SANTOS JORGE - MÃE</li>\n                <li>CRISTIANE DOS SANTOS COSTA - IRMÃ(O)</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Score</h2>\n            <div class=\"score-box\">535</div>\n            <p><span class=\"info\">Tipo Score:</span> SCORE 6 MESES</p>\n            <p><span class=\"info\">Observação:</span> A chance de um consumidor com score entre 501 e 600 pagar seus compromissos financeiros em 6 meses é de 59,25%.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">CADIN</h2>\n            <p><span class=\"info\">Nome Credor:</span> Tributário Demais Débitos (União)</p>\n            <p><span class=\"info\">Valor Total Devido:</span> R$ 4.048,22</p>\n            <table>\n                <tr>\n                    <th>Inscrição</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>80 1 21 100878-76</td>\n                    <td>R$ 1.954,59</td>\n                </tr>\n                <tr>\n                    <td>80 1 21 100884-14</td>\n                    <td>R$ 2.093,63</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Contrato</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>13/12/2021</td>\n                    <td>0001872649932</td>\n                    <td>R-CRED FINAN</td>\n                    <td>R$3.077,24</td>\n                </tr>\n                <tr>\n                    <td>12/09/2021</td>\n                    <td>015000229668</td>\n                    <td>R-CRED FINAN</td>\n                    <td>R$19.504,00</td>\n                </tr>\n                <tr>\n                    <td>10/12/2023</td>\n                    <td>237106</td>\n                    <td>R-EMPRES CTA</td>\n                    <td>R$156,06</td>\n                </tr>\n                <tr>\n                    <td>14/12/2022</td>\n                    <td>441388001</td>\n                    <td>R-OUTRAS OPE</td>\n                    <td>R$124,94</td>\n                </tr>\n                <tr>\n                    <td>05/03/2022</td>\n                    <td>10327001</td>\n                    <td>R-OUTRAS OPE</td>\n                    <td>R$124,94</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">SCPC</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Cidade</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>10/04/2023</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>BANCO C6 SA</td>\n                    <td>R$ 990,76</td>\n                </tr>\n                <tr>\n                    <td>31/12/2022</td>\n                    <td>UBATUBA</td>\n                    <td>SP-UTB/ESCOLA CRIAR-TE</td>\n                    <td>R$ 7.126,82</td>\n                </tr>\n                <tr>\n                    <td>17/06/2022</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>NU FINANCEIRA S/A</td>\n                    <td>R$ 640,68</td>\n                </tr>\n                <tr>\n                    <td>13/12/2021</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>ITAU UNIBANCO S/A</td>\n                    <td>R$ 3.077,24</td>\n                </tr>\n                <tr>\n                    <td>08/12/2021</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>LOJAS CEM/MATRIZ</td>\n                    <td>R$ 4.038,30</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Protestos</h2>\n            <table>\n                <tr>\n                    <th>Cidade</th>\n                    <th>Data</th>\n                    <th>Cartório</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>24/10/2024</td>\n                    <td>1</td>\n                    <td>R$728,15</td>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>02/04/2024</td>\n                    <td>1</td>\n                    <td>R$1.346,65</td>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>02/04/2024</td>\n                    <td>1</td>\n                    <td>R$846,81</td>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>21/12/2023</td>\n                    <td>1</td>\n                    <td>R$1.889,38</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>ANDERSON DOS SANTOS JORGE não apresenta pendências registradas em CADIN, PENDÊNCIAS, SCPC ou PROTESTOS. Isso indica uma situação financeira sem restrições atuais, comprovando um histórico de crédito sem problemas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nHTML DE EXEMPLO 3:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\"><br><br>\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Nome:</span> CASSIUS ABRAHAN MENDES HADDAD</p>\n            <p><span class=\"info\">CPF:</span> 21991463839</p>\n            <p><span class=\"info\">Data de Nascimento:</span> 1982-06-02</p>\n            <p><span class=\"info\">Nome da Mãe:</span> BERNADETE MENDES HADDAD</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">E-mails</h2>\n            <ul>\n                <li>cassius.abrahan@superig.com.br</li>\n                <li>cahad@terra.com.br</li>\n                <li>carrijocalcados@terra.com.br</li>\n                <li>teletim1@terra.com.br</li>\n                <li>unidosporlimeira@gmail.com</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Possíveis Parentes</h2>\n            <ul>\n                <li>VANESSA HADDAD SCHERRER - IRMA(O)</li>\n                <li>DULCE PINHO MENDES DA SILVA - AVO</li>\n                <li>BERNADETE MENDES HADDAD - MAE</li>\n                <li>ROSANGELA APARECIDA MENDES DA SILVA - TIA(O)</li>\n                <li>LUIZ ROBERTO MENDES DA SILVA - TIA(O)</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Score</h2>\n            <div class=\"score-box\">534</div>\n            <p><span class=\"info\">Tipo Score:</span> SCORE 6 MESES</p>\n            <p><span class=\"info\">Observação:</span> A CHANCE DE UM CONSUMIDOR COM SCORE ENTRE 501 E 600 PAGAR SEUS COMPROMISSOS FINANCEIROS EM 6 MESES É DE 59,25%.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">CADIN</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">SCPC</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Protestos</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>Cassius Abrahan Mendes Haddad apresenta um histórico financeiro com apenas um score de crédito de 534, indicando uma chance de 59,25% de pagar compromissos financeiros em 6 meses. Apesar de não ter pendências registradas nos cadastros de inadimplentes (CADIN, SCPC ou PROTESTOS), é importante lembrar que o score de crédito é apenas um indicador da situação financeira. É recomendável que Cassius busque manter um histórico financeiro saudável para evitar complicações futuras.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nImportante, escreva \"Inicio HTML\" e \"Fim HTML\" no inicio e no final. Somente isso. Não escreva mais nenhum dados fora do código.\nQuando for exatamente começar o código HTML, escreva da seguinte maneira: Inicio HTML\\n<!DOCTYPE html>\\n\nEscreva no código html todas as informações fornecidas. Não ignore nenhum dado.\nUma observação. O titulo dos menus entrão entre <>\nCaso a frase comece e termine com \"_\", pode remover o \"_\"\nSempre formate no html utilizando TODOS os dados fornecidos abaixo como informações, valores, dados, tudo sem exceção.\nVocê vai adicionar na formatação somente os dados existentes e informados abaixo.\nImportante. Se o dados como telefone, email ou parentes não estiver disponível e não for fornecido, você não precisa adicionar a \"div class\" no html.\nAdicione \"Sugestões para Regularização em caso de Débitos\"\nSempre adicione <br> entre uma \"div class\" e outra.\nÉ obrigatório que pendências, scpc, débitos, refin e pefin e protestos sejam sempre em tabela.\nSiga fielmente o layout do exemplo de html acima.\nCaso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\nSe o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\nÉ importante que você adicione no HTML somente os dados fornecidos abaixo que são para formatar. Os dados dos HTML de exemplo servem somente para seguir o layout do HTML (Nunca utilize as informações de exemplo ou invente dados para adicionar no html formatado).\nÉ obrigatório que todas as informações fornecidas abaixo conste no HTML.\nRemova todos os _ do html exceto de email.\nImportante, você vai formatar em pendências, somente o que está em pendências, você vai formatar em scpc, somente o que está em scpc e vai formatar em protestos, somente o que está em protestos. E assim por diante.\nSe durante a formatação formar criar >PENDÊNCIAS< crie com somente a primeira letra maiúscula >Pendências<\n\nAtenção, faça \"Resumo através de IA\" levando em consideração todos os dados financeiros informados abaixo como CADIN, Pendências, SCPC e Protestos.\n\nAtenção, todos os dados e informações acima server exclusivamente como exemplo para você estruturar o HTML.\nAs informações na formatação do HTML precisam estar na mesma ordem dos dados para formatar.\nUtilize somente os dados abaixo para formatar o HTML:",
              "type": "string"
            },
            {
              "id": "5d3be7bc-919f-40e0-a9b2-93e059d428cf",
              "name": "URL-LOGO",
              "value": "=https://i.imgur.com/g0gImpK.jpeg",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "34c90a3d-1787-4b57-85d7-26c8c09d3b47",
      "name": "Dados N8N1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -4800,
        920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bfac3c94-a23c-4008-aa6c-dd5fcb21c8e6",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "a8ed396a-a4bf-42d0-9185-28da804b3145",
              "leftValue": "={{ $json.tipo }}",
              "rightValue": "CPF",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "41d15d52-6433-4855-a560-df92756b3dda",
      "name": "If15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3880,
        920
      ]
    },
    {
      "parameters": {
        "content": "## CPF / CNPJ inválido",
        "height": 876.7623384092028,
        "width": 456.60627452732734,
        "color": 3
      },
      "id": "428f8611-e3c0-45a9-a311-eef27cea2f00",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4140,
        860
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, '');\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false;\n\n    let soma = 0, resto;\n\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, '');\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false;\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o CPF ou CNPJ do próprio JSON da execução\nconst cpf = $json.CPF;\nconst cnpj = $json.CNPJ;\nconst numero = (cpf || cnpj || '').replace(/[^\\d]+/g, '');\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido\n        }\n    }\n];\n"
      },
      "id": "7dc7ab7f-b1d9-4f3e-941f-806f9208af3f",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4080,
        920
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f75676e4-19f6-4e73-b528-708a94625a6a",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -3860,
        1540
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\nAtenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente.\n\nObs: Digite apenas números, sem pontos, traços ou espaços."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "269664d7-d319-4317-814c-a1d46c72d32e",
      "name": "HTTP Request7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4060,
        1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fee5b52e-9416-4f30-9a0f-9f022358cac0",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4060,
        1340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente."
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "Tipo consulta",
              "value": "={{ $('Webhook').item.json.body['Tipo consulta'] }}"
            },
            {
              "name": "Pendências",
              "value": "=Erro"
            },
            {
              "name": "Protestos",
              "value": "=Erro"
            },
            {
              "name": "SCPC",
              "value": "=Erro"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "77b5ce0e-807f-4ab3-97a6-9c8f13c602e4",
      "name": "Erro1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3880,
        1320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "9aa38b0a-df7d-4c62-9987-e3511503b921",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "118358b3-e097-4063-af84-33e9bcd1fae9",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "6216a106-e987-4726-a78e-b2ea12b87fbb",
      "name": "se typebot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4060,
        1140
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "aeb4a74f-0abc-4e0d-9d74-a4f32ddecd1a",
      "name": "typebot",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3720,
        1120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente."
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cacdaa8c-fed3-4731-a47a-957ea2c49279",
      "name": "Resposta Typebot CPF Errado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3880,
        1120
      ],
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.HEADER.INFORMACOES_RETORNO.STATUS_RETORNO.DESCRICAO }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "957ee10c-67f5-43db-a9ce-a31aba951b0e",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        340,
        1140
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Informações",
              "value": "=*SCORE*\n*Tipo score:* _{{ $json.CREDCADASTRAL.SCORES.OCORRENCIAS[0].TIPO_SCORE }}_\n*Score:* _{{ $json.CREDCADASTRAL.SCORES.OCORRENCIAS[0].SCORE }}_\n\n*Obs:* _{{ $json.CREDCADASTRAL.SCORES.OCORRENCIAS[0].TEXTO }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3cbf6d09-3ce2-4254-b2c7-3d5f4df2a6a4",
      "name": "Mapa - Informações",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1400,
        1100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.validocadastro.com.br/json/service.aspx",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"CodigoProduto\": \"629\",\n    \"Versao\": \"20180521\",\n    \"ChaveAcesso\": \"L1m5egI62W5WEg4WH8ihbwZ8xED1JlJeMXOp8kewYEQG8hA6+S/Ysy/E7Yc9Z1m+\",\n    \"Info\": {\n        \"Solicitante\": \"IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)\"\n    },\n    \"Parametros\": {\n        \"TipoPessoa\": \"F\",\n        \"CPFCNPJ\": \"{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}\"\n    },\n    \"WebHook\": {\n        \"UrlCallBack\": \"\"\n    }\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "b65c126b-3023-4dc4-ad2d-4a197404c46c",
      "name": "HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -300,
        1320
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.HEADER.INFORMACOES_RETORNO.STATUS_RETORNO.DESCRICAO }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "79435fad-1b06-4bc9-836e-8c857a97b615",
      "name": "If8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        340,
        1320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.CREDCADASTRAL.SCORES.OCORRENCIAS[0].SCORE }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "f1dd2a7c-f13b-4034-9239-dc71cf393933",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1160,
        1120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.iconsultei.com.br/json/service.aspx",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"CodigoProduto\": \"1360\",\n    \"Versao\": \"20180521\",\n    \"ChaveAcesso\": \"l9Emo7ZpGhgw2Fw6CNjemqAtwSqjnb/MTujpNa8gkWf0OtUilAF1XT4ruhKWP3b1\",\n    \"Info\": {\n        \"Solicitante\": \"IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)\"\n    },\n    \"Parametros\": {\n        \"TipoPessoa\": \"F\",\n        \"CPFCNPJ\": \"{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}\"\n    },\n    \"WebHook\": {\n        \"UrlCallBack\": \"\"\n    }\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "ef57ce1c-69ed-4a73-b8b6-e98b7c2d8921",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -300,
        1140
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dividas-cpf_7-1-1",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "dd882719-cc26-45d3-97b2-191a462265f9",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -4980,
        920
      ],
      "webhookId": "03d4065b-972c-412c-8192-dbb37ced92a2"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6e97ce5e-f81b-49e6-8124-cc586beb59c0",
      "name": "Respond to Webhook7",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        3440,
        2720
      ]
    },
    {
      "parameters": {
        "content": "## CONTINUAÇÃO",
        "height": 251.51571340885795,
        "width": 571.376359106563,
        "color": 6
      },
      "id": "30bd218f-9473-4577-8dd9-b4da0656a794",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3000,
        2660
      ]
    },
    {
      "parameters": {},
      "id": "cae91ac1-eec4-4e3f-b51a-df3902efd92b",
      "name": "Limit4",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        3060,
        2720
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.redequeroimoveis.com/webhook/dividas-cpf_7-1-2",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            },
            {
              "name": "URL_LogoPDF",
              "value": "={{ $('Webhook').item.json.body.URL_LogoPDF }}"
            },
            {
              "name": " Tipo consulta",
              "value": "Completa"
            },
            {
              "name": "Prompt Resumo IA",
              "value": "={{ $('Dados N8N1').item.json['Prompt Resumo IA'] }}"
            },
            {
              "name": "Prompt PDF",
              "value": "={{ $('Dados N8N1').item.json['Prompt PDF'] }}"
            },
            {
              "name": "Informações",
              "value": "={{ $('Limit2').item.json[\"Informações\"] }}"
            },
            {
              "name": "URL-LOGO",
              "value": "={{ $('Dados N8N1').item.json['URL-LOGO'] }}"
            },
            {
              "name": "RequestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "tipo_ehmconsultas",
              "value": "={{ $('Webhook').item.json.body.tipo_ehmconsultas }}"
            },
            {
              "name": "status_ehmconsultas",
              "value": "={{ $('Webhook').item.json.body.status_ehmconsultas }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6e75bf9f-622f-4d47-b887-3e5e035d6511",
      "name": "HTTP Request21",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3260,
        2720
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## SE SITE VERIFICAR CRÉDITO",
        "height": 779,
        "width": 710,
        "color": 4
      },
      "id": "881133a2-6242-436c-8a48-6914f7cf2f77",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2900,
        840
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1635731b-9034-44d9-82f6-428173d4cce8",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -2480,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $json.creditos }}",
              "rightValue": 6,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dd542d1c-6d14-4800-adb2-17269d73bd44",
      "name": "Crédito maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2480,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2ff33748-5c3a-4b99-b806-edd8afa41fc2",
      "name": "Se site / bc1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2820,
        900
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "012305e6-695a-4978-b481-7ded570d4995",
      "name": "Crédito inferior1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2660,
        1200
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "484214d8-dcc0-406f-a694-01b66f0553bf",
      "name": "Respond to Webhook6",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -2480,
        1200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "122c129d-7c79-4f17-a820-29e436761381",
      "name": "Retornar Créditos Site1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2660,
        1000
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "60288151-e6eb-4293-b30b-a838e064013e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "8e872e60-cf70-4a7c-a548-45d277fc7023",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "a6c3a570-b3d9-4944-af8d-580e3728f585",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2660,
        1380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6df976f2-ea4d-452d-b5ae-6872f40a7f02",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        100,
        720
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.DADOS_PESSOAIS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.DADOS_PESSOAIS[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "0fab7232-006a-465f-b000-85d51a60863f",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_NOVO[0].SCORE_SERASA }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1131f8cc-5acb-44c4-8a5d-f517b26b2b35",
      "name": "If51",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        500,
        720
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/dados/cpf/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 20000
        }
      },
      "id": "02b9e099-692f-4324-8ecd-85c51ca111f0",
      "name": "Dados - ehmconsultas2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -280,
        720
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const score = $('Dados - ehmconsultas2').item.json.DATA.SCORE_NOVO[0].SCORE_SERASA;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];\n"
      },
      "id": "c00c2deb-e82a-4931-af01-21b94cfc93c3",
      "name": "Code17",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -100,
        720
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const score = $('minerdapifoda1').item.json.resultado.SCORE[0].CSBA;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];"
      },
      "id": "f291f0f0-b229-4816-95b8-cd3f1dc46064",
      "name": "Code18",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        260
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a71f79c-c28b-4ed8-811a-9c130e7df817",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2959c1ad-b1dd-4400-aadf-ac961681e91f",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        100,
        260
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://typebots.minerdapifoda.xyz:8080/api/cpffull?cpf={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "a64deb0a-ee94-42db-89b0-06285065c305",
      "name": "minerdapifoda1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -280,
        260
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "disabled": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b09abb5c-c1e5-4dd8-b31c-ed46d0d51eeb",
              "leftValue": "={{ $('minerdapifoda1').item.json.resultado.DADOS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "bc6380b3-987c-4253-81da-677bc3e40577",
              "leftValue": "={{ $('minerdapifoda1').item.json.resultado.SCORE[0].CSBA }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6587e40d-5027-430d-a999-c650958ca48b",
      "name": "If6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        500,
        260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d9f7ea42-a280-43e4-b382-f2467172ff85",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1620,
        1100
      ],
      "id": "e380f4a5-e378-4fb8-8b9b-646736cff343",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Informações",
              "value": "={{ $json['Informações'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2d088de8-6e75-4950-8aa3-76cdda759ac2",
      "name": "Mapa - Informações1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1820,
        1080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "992cbfd2-fbbc-4eff-a7df-feccd1176866",
              "leftValue": "={{ $('minerdapifoda1').item.json.resultado.SCORE[0].CSBA }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            },
            {
              "id": "58fee27b-e4df-43e4-b43f-0ebfd1de5c98",
              "leftValue": "={{ $('minerdapifoda1').item.json.resultado.SCORE[0].CSBA }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        300,
        260
      ],
      "id": "8af8346d-0b41-4811-859c-7ef748d9c811",
      "name": "If2"
    },
    {
      "parameters": {
        "jsCode": "const score = $('minerdapifoda1').item.json.resultado.SCORE[0].CSB8;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];\n"
      },
      "id": "d307b418-a1de-4251-8be6-7a4359fda1c4",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        440
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a71f79c-c28b-4ed8-811a-9c130e7df817",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bb7ac600-bc88-40ef-84d5-41b4e65e9c8d",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        100,
        440
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b09abb5c-c1e5-4dd8-b31c-ed46d0d51eeb",
              "leftValue": "={{ $('minerdapifoda1').item.json.resultado.DADOS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "bc6380b3-987c-4253-81da-677bc3e40577",
              "leftValue": "={{ $('minerdapifoda1').item.json.resultado.SCORE[0].CSBA }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ed1b02bc-1663-4590-85d4-43cdc5741b4c",
      "name": "If9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        500,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "992cbfd2-fbbc-4eff-a7df-feccd1176866",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "0",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "4da8ffb2-06dd-4484-afc8-3f5b022a4467",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "10b44483-55d1-42b6-bc53-4f74cfe0a06b",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "1b535619-f854-46df-9bde-fa60793d1274",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "2",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        300,
        720
      ],
      "id": "209edea0-3314-4e95-83b2-8ea6cb93283b",
      "name": "If3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "679337dd-b63e-48e0-ae18-b71232385cf9",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        100,
        900
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.DADOS_PESSOAIS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.DADOS_PESSOAIS[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "0fab7232-006a-465f-b000-85d51a60863f",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_NOVO[0].SCORE_SERASA }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "98da4105-7764-433e-9109-6c6771927320",
      "name": "If52",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        500,
        900
      ]
    },
    {
      "parameters": {
        "jsCode": "const score = $('Dados - ehmconsultas2').item.json.DATA.SCORE_ANTIGO[0].SCORE_SERASA;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];\n"
      },
      "id": "af4101f3-ff8f-4a9a-958f-2618c69ca7a2",
      "name": "Code19",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -100,
        900
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "992cbfd2-fbbc-4eff-a7df-feccd1176866",
              "leftValue": "={{ $('minerdapifoda1').item.json.resultado.SCORE[0].CSB8 }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "6261d30f-7d43-40ff-8c16-2d6dbf07536d",
              "leftValue": "={{ $('minerdapifoda1').item.json.resultado.SCORE[0].CSB8 }}",
              "rightValue": "2",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "c0fa7a8d-b0e5-4aab-91fd-63d23b41f8d4",
              "leftValue": "={{ $('minerdapifoda1').item.json.resultado.SCORE[0].CSB8 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        300,
        440
      ],
      "id": "91829697-8435-4490-b9c5-2e58bd39a587",
      "name": "If4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "66e45b04-cb18-48c5-abd2-d26c45a53280",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "dd53092b-300c-455c-b91f-e359e9de4aba",
      "name": "se typebot3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4280,
        1140
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Informações",
              "stringValue": "=*CPF:* _{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "cd421dbf-0627-436c-ad49-dc77d795c733",
      "name": "Informações",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1680,
        2260
      ]
    },
    {
      "parameters": {
        "jsCode": "// Captura o retorno do JSON\nconst retorno = $json.RETORNO || {};\nconst cadastrais = retorno.CADASTRAIS || {};\nconst telefonesFixo = retorno.TELEFONES_FIXO?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_FIXO.TELEFONE) \n        ? retorno.TELEFONES_FIXO.TELEFONE \n        : [retorno.TELEFONES_FIXO.TELEFONE] \n    : [];\nconst telefonesMovel = retorno.TELEFONES_MOVEL?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_MOVEL.TELEFONE) \n        ? retorno.TELEFONES_MOVEL.TELEFONE \n        : [retorno.TELEFONES_MOVEL.TELEFONE] \n    : [];\nconst emails = retorno.EMAILS?.EMAIL \n    ? Array.isArray(retorno.EMAILS.EMAIL) \n        ? retorno.EMAILS.EMAIL \n        : [retorno.EMAILS.EMAIL] \n    : [];\n// const enderecos = retorno.ENDERECOS?.ENDERECO \n//   ? Array.isArray(retorno.ENDERECOS.ENDERECO) \n//       ? retorno.ENDERECOS.ENDERECO \n//       : [retorno.ENDERECOS.ENDERECO] \n//   : [];\nconst parentes = retorno.POSSIVEIS_PARENTES?.CONTATO \n    ? Array.isArray(retorno.POSSIVEIS_PARENTES.CONTATO) \n        ? retorno.POSSIVEIS_PARENTES.CONTATO \n        : [retorno.POSSIVEIS_PARENTES.CONTATO] \n    : [];\nconst empresas = retorno.EMPRESAS_SOCIO?.EMPRESA_SOCIO \n    ? Array.isArray(retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO) \n        ? retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO \n        : [retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO] \n    : [];\n\n// Função para tratar dados\nfunction formatField(value) {\n    return value && value.trim() !== \"\" && value !== \"undefined\" ? value : null;\n}\n\n// Cria uma lista formatada com limite de itens\nfunction formatList(items, limit) {\n    return items.slice(0, limit).map(item => `- ${item}`).join('\\n');\n}\n\n// Monta o texto formatado\nlet formattedText = `*Nome:* _${formatField(cadastrais.NOME) || \"Não informado\"}_\n*CPF:* _${formatField(cadastrais.CPF) || \"Não informado\"}_\n*Data Nascimento:* _${formatField(cadastrais.NASCTO) || \"Não informado\"}_\n*Idade:* _${formatField(cadastrais.IDADE) || \"Não informado\"}_\\n\\n`;\n\n// Telefones\nconst allTelefones = [\n    ...telefonesFixo.map(tel => tel.NUMERO),\n    ...telefonesMovel.map(tel => tel.NUMERO)\n].filter(num => formatField(num)).slice(0, 5);\n\nif (allTelefones.length > 0) {\n    formattedText += `## *Telefone*\\n${formatList(allTelefones, 5)}\\n\\n`;\n}\n\n// Emails\nif (emails.length > 0) {\n    formattedText += `## *Email*\\n${formatList(emails.filter(email => formatField(email)), 5)}\\n\\n`;\n}\n\n// Endereços\n// if (enderecos.length > 0) {\n//     formattedText += `## *Endereços*\\n`;\n//     enderecos.slice(0, 3).forEach((endereco, index) => {\n//         formattedText += `*${index + 1}.*\\n`;\n//         formattedText += `*Logradouro:* _${formatField(endereco.LOGRADOURO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Número:* _${formatField(endereco.NUMERO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Complemento:* _${formatField(endereco.COMPLEMENTO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Bairro:* _${formatField(endereco.BAIRRO) || \"Não informado\"}_\\n`;\n//         formattedText += `*CEP:* _${formatField(endereco.CEP) || \"Não informado\"}_\\n`;\n//         formattedText += `*Cidade:* _${formatField(endereco.CIDADE) || \"Não informado\"}_\\n`;\n//         formattedText += `*Estado:* _${formatField(endereco.ESTADO) || \"Não informado\"}_\\n\\n`;\n//     });\n// }\n\n// Possíveis Parentes\nif (parentes.length > 0) {\n    const formattedParentes = parentes.slice(0, 5).map(parente => {\n        return `- _${formatField(parente.NOME) || \"Desconhecido\"} - ${formatField(parente.PARENTESCO) || \"Não informado\"}_`;\n    });\n    formattedText += `## *Possíveis Parentes*\\n${formattedParentes.join('\\n')}\\n\\n`;\n}\n\n// Empresas\nif (empresas.length > 0) {\n    formattedText += `## *Empresas*\\n`;\n    empresas.slice(0, 5).forEach((empresa, index) => {\n        formattedText += `*${index + 1}.*\\n`;\n        formattedText += `*Razão Social:* _${formatField(empresa.RAZAO_SOCIAL) || \"Não informado\"}_\\n`;\n        formattedText += `*CNPJ:* _${formatField(empresa.CNPJ) || \"Não informado\"}_\\n`;\n        formattedText += `*Cidade:* _${formatField(empresa.CIDADE) || \"Não informado\"}_\\n`;\n        formattedText += `*Qualificação:* _${formatField(empresa.QUALIFICACAO) || \"Não informado\"}_\\n`;\n        formattedText += `*Data Entrada:* _${formatField(empresa.DATA_ENTRADA) || \"Não informado\"}_\\n\\n`;\n    });\n}\n\n// Resultado\nreturn { formattedText };\n"
      },
      "id": "c2bdaac6-0257-4363-b988-76e00ae0796b",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        500,
        1900
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedText }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b32348d2-b756-4726-83f9-d125baa7e269",
      "name": "Edit Fields13",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        700,
        1900
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set4",
      "type": "n8n-nodes-base.set",
      "position": [
        -100,
        1920
      ],
      "typeVersion": 1,
      "id": "993553e0-83a0-44ba-84d9-259450c98c73",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "attrkey": "$",
          "explicitRoot": true,
          "mergeAttrs": false
        }
      },
      "name": "XML4",
      "type": "n8n-nodes-base.xml",
      "position": [
        80,
        1920
      ],
      "typeVersion": 1,
      "id": "e42b33fc-bffe-47a5-882e-6865abdfd802",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Função para calcular idade com base na data de nascimento\nfunction calcularIdade(dataNasc) {\n    const hoje = new Date();\n    const [dia, mes, ano] = dataNasc.split('/');\n    const nascimento = new Date(`${ano}-${mes}-${dia}`);\n    let idade = hoje.getFullYear() - nascimento.getFullYear();\n    const mesAtual = hoje.getMonth();\n    const diaAtual = hoje.getDate();\n    if (mesAtual < nascimento.getMonth() || \n       (mesAtual === nascimento.getMonth() && diaAtual < nascimento.getDate())) {\n        idade--;\n    }\n    return idade;\n}\n\n// Função para evitar duplicatas\nfunction removerDuplicatas(array) {\n    return array.filter((item, index, self) =>\n        index === self.findIndex((t) => JSON.stringify(t) === JSON.stringify(item))\n    );\n}\n\n// Capturar o JSON retornado\nconst data = $json.resultado;\nconst dados = data.DADOS?.[0] || {};\nconst emails = removerDuplicatas(data.EMAIL || []).slice(0, 5);\nconst telefones = removerDuplicatas(data.HISTORICO_TELEFONES || [])\n    .filter(tel => tel.TELEFONE && tel.TELEFONE !== \"undefined\")\n    .slice(0, 5)\n    .map(tel => `${tel.DDD}${tel.TELEFONE}`);\nconst parentes = removerDuplicatas(data.PARENTES || []).slice(0, 5);\n\n// Início da formatação\nlet resultadoFormatado = \"\";\n\n// Adicionar dados principais\nif (dados.NOME && dados.CPF && dados.NASC) {\n    const idade = calcularIdade(dados.NASC);\n    resultadoFormatado += `*Nome:* _${dados.NOME}_\\n`;\n    resultadoFormatado += `*CPF:* _${dados.CPF}_\\n`;\n    resultadoFormatado += `*Data Nascimento:* _${dados.NASC}_\\n`;\n    resultadoFormatado += `*Idade:* _${idade} anos_\\n\\n`;\n}\n\n// Adicionar telefones\nif (telefones.length) {\n    resultadoFormatado += `## *Telefone*\\n`;\n    telefones.forEach(tel => {\n        resultadoFormatado += `- ${tel}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar emails\nif (emails.length) {\n    resultadoFormatado += `## *Email*\\n`;\n    emails.forEach(email => {\n        resultadoFormatado += `- ${email.EMAIL}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar parentes\nif (parentes.length) {\n    resultadoFormatado += `## *Possíveis Parentes*\\n`;\n    parentes.forEach(parente => {\n        const nome = parente.NOME_VINCULO || \"Não informado\";\n        const vinculo = parente.VINCULO || \"Não informado\";\n        resultadoFormatado += `- _${nome} - ${vinculo}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Retornar resultado formatado\nreturn {\n    json: {\n        resultadoFormatado: resultadoFormatado.trim()\n    }\n};\n"
      },
      "id": "df7723f0-9f55-4087-a570-c6d64a142595",
      "name": "Code15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -100,
        1760
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a71f79c-c28b-4ed8-811a-9c130e7df817",
              "name": "Informações",
              "value": "={{ $json.resultadoFormatado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "91c2fc8b-79c7-4556-8dce-283ddded9813",
      "name": "Edit Fields15",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        80,
        1760
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8e0363a5-1e0a-42f9-a5aa-1488030ed12a",
              "leftValue": "={{ $json.RETORNO.CADASTRAIS.NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f9aa4d82-61bf-4c52-880d-924ccb0fb2fd",
      "name": "If48",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        300,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ecf41257-af94-4d58-84f9-20f62cc90fb7",
      "name": "If49",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        880,
        1900
      ]
    },
    {
      "parameters": {
        "url": "=https://typebots.minerdapifoda.xyz:8080/api/cpffull?cpf={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "5fef7f53-87a1-4da7-b266-d12bf01554ac",
      "name": "minerdapifoda4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -300,
        1760
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "disabled": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "url": "=http://confere.link/api/?acao=CONS_CPF&TK=IGGE-FAO-566021-PUN-4WT4&DADO={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "feeb6429-63ae-41e0-9fba-758536e510e1",
      "name": "confere.link4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -300,
        1920
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8b8095b1-ba11-4306-8602-9e78be3503cd",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "Nome:",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a56f8df8-ba10-43d5-a484-7900949f6294",
      "name": "If17",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        260,
        1760
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "13178332-5679-4827-9704-49125f6d59db",
      "name": "If18",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1240,
        2080
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "281adbfa-f6e3-43b5-b389-7af24aa2f91f",
      "name": "Edit Fields16",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        80,
        2280
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.DADOS_PESSOAIS[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas').item.json.DATA.DADOS_PESSOAIS[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "73440c2f-ec2c-41eb-8fa6-0796aae54861",
      "name": "If50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        260,
        2280
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/dados/cpf/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 20000
        }
      },
      "id": "a7edd9f0-f91b-4e99-8861-b8ab5fc70c51",
      "name": "Dados - ehmconsultas",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -300,
        2280
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "function formatarDados(dados) {\n    if (!dados.DATA || !dados.DATA.DADOS_PESSOAIS || !dados.DATA.DADOS_PESSOAIS.length) {\n        return \"Dados inválidos ou incompletos.\";\n    }\n\n    let pessoa = dados.DATA.DADOS_PESSOAIS[0];\n    let parentes = dados.DATA.PARENTES || [];\n    let emails = dados.DATA.EMAIL_BASE || [];\n    let telefones = dados.DATA.TELEFONES || [];\n\n    let resultado = '';\n\n    // Função para formatar a data no formato dd/mm/yyyy\n    function formatarData(data) {\n        if (!data) return \"N/A\";\n        const date = new Date(data);\n        return date.toLocaleDateString('pt-BR');\n    }\n\n    // Nome e CPF (sempre devem existir, então já são adicionados diretamente)\n    resultado += `*Nome:* _${pessoa.NOME || \"N/A\"}_\\n`;\n    resultado += `CPF: _${pessoa.CPF || \"N/A\"}_\\n`;\n    resultado += `Nascimento: _${formatarData(pessoa.NASCIMENTO)}_\\n`;\n    resultado += `Nome da Mãe: _${pessoa.NOME_MAE || \"N/A\"}_\\n`;\n    resultado += `Nome do Pai: _${pessoa.NOME_PAI || \"N/A\"}_\\n\\n`;\n\n    // Telefones\n    if (telefones.length > 0) {\n        const telefonesSet = new Set();\n        telefones.forEach(tel => telefonesSet.add(tel.TELEFONE)); // Remover duplicatas\n        \n        if (telefonesSet.size > 0) {\n            resultado += \"*Telefones:*\\n\";\n            Array.from(telefonesSet).slice(0, 3).forEach(telefone => {\n                resultado += ` - _${telefone || \"Desconhecido\"}_\\n`;\n            });\n            resultado += \"\\n\";\n        }\n    }\n  \n    // E-mails\n    if (emails.length > 0) {\n        resultado += \"*E-mails:*\\n\";\n        emails.slice(0, 3).forEach(email => {\n            resultado += ` - ${email.EMAIL || \"Desconhecido\"}\\n`;\n        });\n        resultado += \"\\n\";\n    }\n\n    // Parentes\n    if (parentes.length > 0) {\n        resultado += \"*Parentes:*\\n\";\n        parentes.slice(0, 3).forEach(parente => {\n            resultado += ` - _${parente.NOME || \"N/A\"} (${parente.VINCULO || \"N/A\"})_\\n`;\n        });\n    }\n\n    return resultado;\n}\n\n// Pegando os dados do input do n8n\nlet dadosConsulta = items[0].json;\nlet resultadoFormatado = formatarDados(dadosConsulta);\n\n// Retornando os dados no formato correto para o n8n\nreturn [{\n    json: {\n        resultado: resultadoFormatado\n    }\n}];\n"
      },
      "id": "55838cca-45d3-402a-b780-05543a73295d",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -120,
        2280
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Obtendo os dados da array do nó \"Dados - ehmconsultas\"\nlet dados = $('Dados - ehmconsultas3').item.json.Data;\n\nif (!Array.isArray(dados) || dados.length === 0) {\n    return [{\n        json: {\n            resultado: \"Dados inválidos ou incompletos.\"\n        }\n    }];\n}\n\nlet pessoa = dados[0]; // Pegando o primeiro item da lista\n\n// Função para verificar se o valor é válido (não nulo, não vazio, não undefined)\nfunction valorValido(valor) {\n    return valor !== null && valor !== undefined && String(valor).trim() !== '';\n}\n\n// Função para formatar a data no formato dd/mm/yyyy\nfunction formatarData(data) {\n    if (!valorValido(data)) return null;\n    if (/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(data)) return data;\n    const date = new Date(data);\n    if (isNaN(date)) return null;\n    return date.toLocaleDateString('pt-BR');\n}\n\nlet resultado = '';\n\n// Nome\nif (valorValido(pessoa.NOME)) {\n    resultado += `*Nome:* _${pessoa.NOME}_\\n`;\n}\n\n// CPF\nif (valorValido(pessoa.CPF)) {\n    resultado += `CPF: _${pessoa.CPF}_\\n`;\n}\n\n// Data de nascimento\nconst dataNascimento = formatarData(pessoa.DATA_NASCIMENTO);\nif (dataNascimento) {\n    resultado += `Nascimento: _${dataNascimento}_\\n`;\n}\n\n// Nome da Mãe\nif (valorValido(pessoa.NOME_MAE)) {\n    resultado += `Nome da Mãe: _${pessoa.NOME_MAE}_\\n`;\n}\n\n// Nome do Pai\nif (valorValido(pessoa.NOME_PAI)) {\n    resultado += `Nome do Pai: _${pessoa.NOME_PAI}_\\n`;\n}\n\n// Telefones\nlet telefones = [];\nif (valorValido(pessoa.TELEFONE)) telefones.push(pessoa.TELEFONE);\n\nif (telefones.length > 0) {\n    resultado += `\\n*Telefones:*\\n`;\n    Array.from(new Set(telefones)).slice(0, 3).forEach(tel => {\n        resultado += ` - _${tel}_\\n`;\n    });\n}\n\n// E-mails\nlet emails = [];\nif (valorValido(pessoa.EMAIL)) emails.push(pessoa.EMAIL);\nif (valorValido(pessoa.EMAIL2)) emails.push(pessoa.EMAIL2);\n\nif (emails.length > 0) {\n    resultado += `\\n*E-mails:*\\n`;\n    Array.from(new Set(emails)).slice(0, 3).forEach(email => {\n        resultado += ` - ${email}\\n`;\n    });\n}\n\nreturn [{\n    json: {\n        resultado: resultado.trim()\n    }\n}];\n"
      },
      "id": "77d15213-fb79-462b-898e-5d93d520192a",
      "name": "Code10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -120,
        2100
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f4bfa949-5e4f-44b9-b953-b432b16d4920",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        80,
        2100
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "db342294-e22e-4b7b-97a3-0ded83788506",
              "leftValue": "={{ $('Dados - ehmconsultas3').item.json.Data[0].NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "126e3405-3e15-4423-828c-aacf0ffd0188",
              "leftValue": "={{ $('Dados - ehmconsultas3').item.json.Data[0].CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "00694989-1bb8-4bd0-8e6b-b36e74a71d52",
      "name": "If53",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        260,
        2100
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/sus1/cpf/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 20000
        }
      },
      "id": "8fbcd80d-becd-409d-8903-63b688cdcb06",
      "name": "Dados - ehmconsultas3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -300,
        2100
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## SCORE",
        "height": 1600,
        "width": 2460
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -420,
        -100
      ],
      "typeVersion": 1,
      "id": "36151107-ea98-4528-8881-18992599215c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## DADOS",
        "height": 840,
        "width": 2460
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -420,
        1620
      ],
      "typeVersion": 1,
      "id": "f328396b-7a08-44c9-ab19-43a09be6e409",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Informações",
              "stringValue": "={{ $json['Informações'] }}\n---------------------------\n\n{{ $('Limit').item.json[\"Informações\"] }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "4dcfa932-7614-4e23-8351-676651f15bef",
      "name": "Informações1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        1680,
        2080
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2040,
        1080
      ],
      "id": "2cfdd182-2bef-47c3-ad4b-208247a958d8",
      "name": "Limit"
    },
    {
      "parameters": {
        "url": "=http://confere.link/api/?acao=CONS_DEVFED&TK=IGGE-FAO-566021-PUN-4WT4&DADO={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}&TIPO=XML",
        "options": {
          "timeout": 30000
        }
      },
      "id": "fa666b78-d5b1-4067-95de-693dbf19c599",
      "name": "Consulta6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -300,
        2680
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8f20d91e-3234-4c04-a94a-424dde7168f2",
              "leftValue": "={{ $json.nome }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5ab82af7-b053-4220-8bd1-ce148d112b61",
      "name": "If33",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        140,
        2680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b896dba-70e6-4e2a-8a61-e1528323a73f",
              "name": "Informações",
              "value": "=*Valor Total Devido:* _R${{ $json.valorTotalDevido }}_\n\n*Inscrição:* _{{ $json.inscricoes[0].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[0].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[1].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[1].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[2].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[2].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[3].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[3].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[4].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[4].valor }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f5c38259-beb8-404d-b091-174685c102f5",
      "name": "Edit Fields24",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        360,
        2900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "95e2f193-30e9-4d68-a7d8-01ab49ff6d76",
              "leftValue": "={{ $json.inscricoes[4] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a28b26e4-8380-477b-8d4e-3cdbcb1b2fdb",
      "name": "If34",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        2680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0ae6a811-4e5d-44fa-bb03-fbab290cc4fe",
              "name": "Informações",
              "value": "={{ $('Limit1').item.json[\"Informações\"] }}\n\n---------------------------\n\n## *CADIN*\n*Nome Credor:* _{{ $json.naturezaFormatada }}_\n\n{{ $('If39').item.json['Informações'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "61499f9a-c704-4c36-8a7e-f98e23dfdc8b",
      "name": "Edit Fields25",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1780,
        3140
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b896dba-70e6-4e2a-8a61-e1528323a73f",
              "name": "Informações",
              "value": "=*Valor Total Devido:* _R${{ $json.valorTotalDevido }}_\n\n*Inscrição:* _{{ $json.inscricoes[0].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[0].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[1].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[1].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[2].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[2].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[3].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[3].valor }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e52dea91-c321-4c4a-bba3-6b8ca83e4d08",
      "name": "Edit Fields26",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        580,
        2900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "95e2f193-30e9-4d68-a7d8-01ab49ff6d76",
              "leftValue": "={{ $json.inscricoes[3] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5a3887d1-1aa8-4949-b709-7f48681af6f9",
      "name": "If35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        580,
        2680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b896dba-70e6-4e2a-8a61-e1528323a73f",
              "name": "Informações",
              "value": "=*Valor Total Devido:* _R${{ $json.valorTotalDevido }}_\n\n*Inscrição:* _{{ $json.inscricoes[0].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[0].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[1].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[1].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[2].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[2].valor }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "33ef98e0-edb7-4d6d-acb0-3cbf3bb52504",
      "name": "Edit Fields27",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        780,
        2900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "95e2f193-30e9-4d68-a7d8-01ab49ff6d76",
              "leftValue": "={{ $json.inscricoes[2] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eacb1227-8725-41f6-bebb-9875f7fd7512",
      "name": "If36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        780,
        2680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b896dba-70e6-4e2a-8a61-e1528323a73f",
              "name": "Informações",
              "value": "=*Valor Total Devido:* _R${{ $json.valorTotalDevido }}_\n\n*Inscrição:* _{{ $json.inscricoes[0].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[0].valor }}_\n\n*Inscrição:* _{{ $json.inscricoes[1].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[1].valor }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "63028e12-e293-4c8d-8de3-dadfd494370f",
      "name": "Edit Fields28",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        980,
        2900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "95e2f193-30e9-4d68-a7d8-01ab49ff6d76",
              "leftValue": "={{ $json.inscricoes[1] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "be9732bd-4370-4543-aebe-29254ad47249",
      "name": "If37",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        980,
        2680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b896dba-70e6-4e2a-8a61-e1528323a73f",
              "name": "Informações",
              "value": "=*Valor Total Devido:* _R${{ $json.valorTotalDevido }}_\n\n*Inscrição:* _{{ $json.inscricoes[0].inscricao }}_\n*Valor:* _R${{ $json.inscricoes[0].valor }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "635581fb-57e7-4780-a303-f36efb1cada4",
      "name": "Edit Fields29",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1180,
        2900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "95e2f193-30e9-4d68-a7d8-01ab49ff6d76",
              "leftValue": "={{ $json.inscricoes[0] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "884eef07-db16-4ebd-85e8-57db148d1e89",
      "name": "If38",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        2680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "29fbcc12-6ea7-4448-b415-eb649b42fcc4",
              "leftValue": "={{ $('Webhook').item.json.body.CPF }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "e6366a11-e78e-45a8-bd04-4df2edfa663d",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "502d210c-5510-4351-bbf5-c8d7ccecad5e",
      "name": "If39",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1340,
        3160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0ae6a811-4e5d-44fa-bb03-fbab290cc4fe",
              "name": "Informações",
              "value": "={{ $('Limit1').item.json[\"Informações\"] }}\n\n---------------------------\n\n## *CADIN*\n_Sem pendências registradas._",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "604bd3a4-6677-49f2-9a16-4e123f947cff",
      "name": "Edit Fields30",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1780,
        2920
      ]
    },
    {
      "parameters": {
        "jsCode": "// Supondo que seu JSON de entrada esteja na variável $json\nconst data = $json.data;\n\n// Função para limpar tags HTML e capturar dados essenciais\nfunction extractData(html) {\n    const result = {};\n    \n    // Capturar Nome\n    const nomeMatch = html.match(/<strong>Nome:<\\/strong>\\s*(.+?)<\\/p>/);\n    result.nome = nomeMatch ? nomeMatch[1].trim() : null;\n\n    // Capturar CPF/CNPJ\n    const cpfMatch = html.match(/<strong>CPF\\/CNPJ:<\\/strong>\\s*(.+?)<\\/p>/);\n    result.cpfCnpj = cpfMatch ? cpfMatch[1].trim() : null;\n\n    // Capturar Domicílio\n    const domMatch = html.match(/<strong>Domic�lio:<\\/strong>\\s*(.+?)<\\/p>/);\n    result.domicilio = domMatch ? domMatch[1].trim() : null;\n\n    // Capturar Natureza\n    const naturezaMatch = html.match(/<strong>Natureza:<\\/strong>\\s*(.+?)<\\/p>/);\n    result.natureza = naturezaMatch ? naturezaMatch[1].trim() : null;\n\n    // Capturar Valor Total\n    const valorMatch = html.match(/<strong>Valor Total das Naturezas:<\\/strong>\\s*R\\$\\s*(.+?)<\\/p>/);\n    result.valorTotalNaturezas = valorMatch ? valorMatch[1].replace(/[^0-9,.-]/g, '').trim() : null;\n\n    // Capturar Data da Consulta\n    const dataConsultaMatch = html.match(/<strong>Data da Consulta:<\\/strong>\\s*(.+?)<\\/p>/);\n    result.dataConsulta = dataConsultaMatch ? dataConsultaMatch[1].trim() : null;\n\n    // Capturar Valor Total Devido\n    const valorDevidoMatch = html.match(/Valor total devido:\\s*R\\$\\s*(.+?)<\\/div>/);\n    result.valorTotalDevido = valorDevidoMatch ? valorDevidoMatch[1].replace(/[^0-9,.-]/g, '').trim() : null;\n\n    // Capturar Inscrições (ajustado para casos de encoding problemático)\n    const inscricoes = [];\n    const inscricaoMatches = [...html.matchAll(/<div class=\"inscricao-item\">([\\s\\S]*?)<\\/div>/g)];\n    for (const match of inscricaoMatches) {\n        const inscricaoHtml = match[1];\n\n        const inscricaoMatch = inscricaoHtml.match(/<strong>Inscri��o:<\\/strong>\\s*(.+?)<\\/p>/);\n        const valorMatch = inscricaoHtml.match(/<strong>Valor:<\\/strong>\\s*R\\$\\s*(.+?)<\\/p>/);\n\n        if (inscricaoMatch && valorMatch) {\n            inscricoes.push({\n                inscricao: inscricaoMatch[1].trim(),\n                valor: valorMatch[1].replace(/[^0-9,.-]/g, '').trim(),\n            });\n        }\n    }\n    result.inscricoes = inscricoes;\n\n    return result;\n}\n\n// Extrair dados do HTML\nconst extractedData = extractData(data);\n\n// Retornar os dados formatados como JSON\nreturn {\n    json: extractedData,\n};\n"
      },
      "id": "50193d83-37b2-4e45-8869-dd880babc729",
      "name": "Code9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        2680
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Capturando o valor da string retornada\nconst natureza = $('If33').item.json.natureza;\n\n// Substituir caracteres especiais por \"a\"\nconst naturezaFormatada = natureza.replace(/�/g, 'a');\n\n// Retornar o valor formatado\nreturn {\n    naturezaFormatada\n};\n"
      },
      "id": "df5c323d-1c96-4bab-9528-f9d5e60c908c",
      "name": "Code11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        3140
      ]
    },
    {
      "parameters": {
        "content": "## CADIN",
        "height": 840,
        "width": 2460
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -420,
        2600
      ],
      "typeVersion": 1,
      "id": "d8658286-0060-46ff-9198-1a8e8704eade",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e9c26e1c-aad8-429e-bcde-3711549090cc",
      "name": "If19",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2040,
        2120
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2240,
        2100
      ],
      "id": "fa862ee5-6851-434b-876a-a41626d6b44e",
      "name": "Limit1"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f81069d4-edba-4c3d-a426-cadad4e0281f",
      "name": "If20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2020,
        3020
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2220,
        3000
      ],
      "id": "f1e11d8e-ef61-4d79-a1f4-49f8acbc902a",
      "name": "Limit2"
    },
    {
      "parameters": {
        "tableId": "apin8n",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "fieldId": "opcao",
              "fieldValue": "=informacoes"
            },
            {
              "fieldId": "consulta",
              "fieldValue": "informacoes-score-cadin"
            },
            {
              "fieldId": "consulta-informacoes",
              "fieldValue": "={{ $json[\"Informações\"] }}"
            },
            {
              "fieldId": "dado",
              "fieldValue": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2660,
        3020
      ],
      "id": "2a71a5c2-843a-4565-9d67-f9bb3fe6a80f",
      "name": "Salvar Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a2ba1813-65ee-4ce4-a393-8f658c12d43f",
              "leftValue": "={{ $('Edit Fields7').item.json[\"Informações\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2440,
        3000
      ],
      "id": "0de18188-ae18-4248-b1f2-775fe44e2cc1",
      "name": "Se Supabase1",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "apin8n",
        "filters": {
          "conditions": [
            {
              "keyName": "dado",
              "keyValue": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "keyName": "consulta",
              "keyValue": "informacoes-score-cadin"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1700,
        760
      ],
      "id": "a9a82276-0c8e-462d-a1a0-bbf8f518a2ce",
      "name": "Obter Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a2ba1813-65ee-4ce4-a393-8f658c12d43f",
              "leftValue": "={{ $json.dado }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1360,
        760
      ],
      "id": "7f5f13e9-dcbd-4022-9b38-f097b82717fc",
      "name": "Se Supabase"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "91609b3d-6c39-4744-b742-12f57cd2a9c6",
              "name": "=Informações",
              "value": "={{ $json[\"consulta-informacoes\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1100,
        720
      ],
      "id": "8ed1c750-20de-4d17-8d2d-4eddce5a811f",
      "name": "Edit Fields7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "8b8095b1-ba11-4306-8602-9e78be3503cd",
              "leftValue": "={{ $('minerdapifoda2').item.json.DADOS[0].NOME }}",
              "rightValue": "Nome:",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "b09abb5c-c1e5-4dd8-b31c-ed46d0d51eeb",
              "leftValue": "={{ $('minerdapifoda2').item.json.SCORE[0].CSBA }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "b0313358-9483-4ab6-a639-d4cbecb00179",
              "leftValue": "={{ $('minerdapifoda2').item.json.SCORE[0].CSBA }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5e0b0662-0607-4a3c-aaa3-0cd2380b2b83",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        560,
        40
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a3c190a-4b1a-4e2f-bbee-6fa4d37c118f",
              "name": "Informações",
              "value": "={{ $('Code12').item.json.resultadoFormatado }}\n\n---------------------------\n\n{{ $json.resultado }}",
              "type": "string"
            },
            {
              "id": "0244c918-7e2d-431c-bd88-ac995e2835cb",
              "name": "SCORE[0].CSBA",
              "value": "={{ $('minerdapifoda2').item.json.SCORE[0].CSBA }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "23491a62-75ce-49c3-bd78-c2afcd52481f",
      "name": "Edit Fields9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        340,
        40
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://sys.sistemafull.site:3000/api/cpf?token=bbeacb297037b97ca56e43d437ac4620&cpf={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 5000
        }
      },
      "id": "e3ee73f6-8c4c-4e51-a0f4-954e098df35b",
      "name": "minerdapifoda2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -280,
        40
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// Função para calcular idade com base na data de nascimento\nfunction calcularIdade(dataNasc) {\n    const hoje = new Date();\n    const [dia, mes, ano] = dataNasc.split('/');\n    const nascimento = new Date(`${ano}-${mes}-${dia}`);\n    let idade = hoje.getFullYear() - nascimento.getFullYear();\n    const mesAtual = hoje.getMonth();\n    const diaAtual = hoje.getDate();\n    if (mesAtual < nascimento.getMonth() || \n       (mesAtual === nascimento.getMonth() && diaAtual < nascimento.getDate())) {\n        idade--;\n    }\n    return idade;\n}\n\n// Função para evitar duplicatas\nfunction removerDuplicatas(array) {\n    return array.filter((item, index, self) =>\n        index === self.findIndex((t) => JSON.stringify(t) === JSON.stringify(item))\n    );\n}\n\n// Pegar os dados diretamente do nó 'minerdapifoda2'\nconst origem = $('minerdapifoda2').item.json;\n\nconst dados = origem.DADOS?.[0] || {};\nconst emails = removerDuplicatas(origem.EMAIL || []).slice(0, 5);\nconst telefones = removerDuplicatas(origem.HISTORICO_TELEFONES || [])\n    .filter(tel => tel.TELEFONE && tel.TELEFONE !== \"undefined\")\n    .slice(0, 5)\n    .map(tel => `${tel.DDD}${tel.TELEFONE}`);\nconst parentes = removerDuplicatas(origem.PARENTES || []).slice(0, 5);\n\n// Início da formatação\nlet resultadoFormatado = \"\";\n\n// Adicionar dados principais\nif (dados.NOME && dados.CPF && dados.NASC) {\n    const idade = calcularIdade(dados.NASC);\n    resultadoFormatado += `*Nome:* _${dados.NOME}_\\n`;\n    resultadoFormatado += `*CPF:* _${dados.CPF}_\\n`;\n    resultadoFormatado += `*Data Nascimento:* _${dados.NASC}_\\n`;\n    resultadoFormatado += `*Idade:* _${idade} anos_\\n\\n`;\n}\n\n// Adicionar telefones\nif (telefones.length) {\n    resultadoFormatado += `## *Telefone*\\n`;\n    telefones.forEach(tel => {\n        resultadoFormatado += `- ${tel}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar emails\nif (emails.length) {\n    resultadoFormatado += `## *Email*\\n`;\n    emails.forEach(email => {\n        resultadoFormatado += `- ${email.EMAIL}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar parentes\nif (parentes.length) {\n    resultadoFormatado += `## *Possíveis Parentes*\\n`;\n    parentes.forEach(parente => {\n        const nome = parente.NOME_VINCULO || \"Não informado\";\n        const vinculo = parente.VINCULO || \"Não informado\";\n        resultadoFormatado += `- _${nome} - ${vinculo}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Retornar resultado formatado\nreturn {\n    json: {\n        resultadoFormatado: resultadoFormatado.trim()\n    }\n};\n"
      },
      "id": "4cb91c31-20d2-4af9-9f7b-a3b9e233c07f",
      "name": "Code12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        40
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const score = $('minerdapifoda2').item.json.SCORE?.[0]?.CSBA || 0;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        140,
        40
      ],
      "id": "3f71cf73-2deb-464e-b7a7-fecef6590c6d",
      "name": "Code3"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3a810f61-c336-4597-add1-7e0c533387ed",
      "name": "Respond to Webhook2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -3220,
        560
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: estamos realizando algumas atualizações no sistema.\nTente novamente mais tarde."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "75a3c954-2c47-40df-9a40-be028bd01cd5",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3420,
        560
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "Atenção: estamos realizando algumas atualizações no sistema. Tente novamente mais tarde."
            },
            {
              "name": "Nome Menu",
              "value": "={{ $('Dados N8N').item.json['Nome Menu'] }}"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Menu'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "e555dfe2-2e21-4cc5-a769-a5683e3695c6",
      "name": "Consulta ERRO2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3220,
        340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "1ff6c905-3e5b-40db-b0e6-e9819b8478a3",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "b25a9f16-4fef-415f-828c-c90d64c8c4e0",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "api",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "baae07a9-7509-4caa-8c2a-68a3d93581aa",
      "name": "If13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3400,
        180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: estamos realizando algumas atualizações no sistema.\nTente novamente mais tarde.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9a58ecb1-6ba1-409c-8206-d450b661dbcc",
      "name": "Edit Fields10",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3220,
        160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Dados N8N').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3cb3caa5-adc6-415c-92bf-68716a0a0ed2",
      "name": "If10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3400,
        360
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Informações",
              "stringValue": "={{ $('Webhook').item.json.body[\"Informações\"] }}\n\n---------------------------\n\n{{ $('Limit').item.json[\"Informações\"] }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "5232002b-29a2-4e18-b1e7-c077003d4fa0",
      "name": "Informações2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        2220,
        1280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "992cbfd2-fbbc-4eff-a7df-feccd1176866",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "0",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "4da8ffb2-06dd-4484-afc8-3f5b022a4467",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "10b44483-55d1-42b6-bc53-4f74cfe0a06b",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "1b535619-f854-46df-9bde-fa60793d1274",
              "leftValue": "={{ $('Dados - ehmconsultas2').item.json.DATA.SCORE_BASE[0].SCORE_BOA_VISTA }}",
              "rightValue": "2",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -280,
        900
      ],
      "id": "e389db5b-9177-4051-926a-9ce12c6310ef",
      "name": "If11"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "8b8095b1-ba11-4306-8602-9e78be3503cd",
              "leftValue": "={{ $('minerdapifoda').item.json.DADOS[0].NOME }}",
              "rightValue": "Nome:",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "b09abb5c-c1e5-4dd8-b31c-ed46d0d51eeb",
              "leftValue": "={{ $('minerdapifoda').item.json.SCORE[0].CSBA }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "b0313358-9483-4ab6-a639-d4cbecb00179",
              "leftValue": "={{ $('minerdapifoda').item.json.SCORE[0].CSBA }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d9e8f5e7-30e1-4aeb-b6c1-406917b81cc1",
      "name": "If12",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        560,
        -140
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a3c190a-4b1a-4e2f-bbee-6fa4d37c118f",
              "name": "Informações",
              "value": "={{ $('Code14').item.json.resultadoFormatado }}\n\n---------------------------\n\n{{ $json.resultado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "74e51b0b-9570-480c-a500-53b208918e65",
      "name": "Edit Fields11",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        340,
        -140
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=https://nada.sistemafull.site:80/api/cpffull?CPF={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 5000
        }
      },
      "id": "5cb3d265-9895-4042-8b13-c6ee81873229",
      "name": "minerdapifoda",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -280,
        -140
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// Função para calcular idade com base na data de nascimento\nfunction calcularIdade(dataNasc) {\n    const hoje = new Date();\n    const [dia, mes, ano] = dataNasc.split('/');\n    const nascimento = new Date(`${ano}-${mes}-${dia}`);\n    let idade = hoje.getFullYear() - nascimento.getFullYear();\n    const mesAtual = hoje.getMonth();\n    const diaAtual = hoje.getDate();\n    if (mesAtual < nascimento.getMonth() || \n       (mesAtual === nascimento.getMonth() && diaAtual < nascimento.getDate())) {\n        idade--;\n    }\n    return idade;\n}\n\n// Função para evitar duplicatas\nfunction removerDuplicatas(array) {\n    return array.filter((item, index, self) =>\n        index === self.findIndex((t) => JSON.stringify(t) === JSON.stringify(item))\n    );\n}\n\n// Pegar os dados diretamente do nó 'minerdapifoda2'\nconst origem = $('minerdapifoda').item.json;\n\nconst dados = origem.DADOS?.[0] || {};\nconst emails = removerDuplicatas(origem.EMAIL || []).slice(0, 5);\nconst telefones = removerDuplicatas(origem.HISTORICO_TELEFONES || [])\n    .filter(tel => tel.TELEFONE && tel.TELEFONE !== \"undefined\")\n    .slice(0, 5)\n    .map(tel => `${tel.DDD}${tel.TELEFONE}`);\nconst parentes = removerDuplicatas(origem.PARENTES || []).slice(0, 5);\n\n// Início da formatação\nlet resultadoFormatado = \"\";\n\n// Adicionar dados principais\nif (dados.NOME && dados.CPF && dados.NASC) {\n    const idade = calcularIdade(dados.NASC);\n    resultadoFormatado += `*Nome:* _${dados.NOME}_\\n`;\n    resultadoFormatado += `*CPF:* _${dados.CPF}_\\n`;\n    resultadoFormatado += `*Data Nascimento:* _${dados.NASC}_\\n`;\n    resultadoFormatado += `*Idade:* _${idade} anos_\\n\\n`;\n}\n\n// Adicionar telefones\nif (telefones.length) {\n    resultadoFormatado += `## *Telefone*\\n`;\n    telefones.forEach(tel => {\n        resultadoFormatado += `- ${tel}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar emails\nif (emails.length) {\n    resultadoFormatado += `## *Email*\\n`;\n    emails.forEach(email => {\n        resultadoFormatado += `- ${email.EMAIL}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar parentes\nif (parentes.length) {\n    resultadoFormatado += `## *Possíveis Parentes*\\n`;\n    parentes.forEach(parente => {\n        const nome = parente.NOME_VINCULO || \"Não informado\";\n        const vinculo = parente.VINCULO || \"Não informado\";\n        resultadoFormatado += `- _${nome} - ${vinculo}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Retornar resultado formatado\nreturn {\n    json: {\n        resultadoFormatado: resultadoFormatado.trim()\n    }\n};\n"
      },
      "id": "b0a64f98-384e-47fb-92fc-3176fd6901e5",
      "name": "Code14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        -140
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const score = $('minerdapifoda').item.json.SCORE?.[0]?.CSBA || 0;\n\nlet chanceInadimplencia = \"\";\n\nif (score < 200) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 201 && score <= 400) {\n  chanceInadimplencia = \"baixa\";\n} else if (score >= 401 && score <= 600) {\n  chanceInadimplencia = \"média\";\n} else {\n  chanceInadimplencia = \"alta\";\n}\n\nconst resultado = `*SCORE*\n*Score:* _${score}_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE ${score}, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ${chanceInadimplencia.toUpperCase()}._`;\n\nreturn [{ json: { resultado } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        140,
        -140
      ],
      "id": "5e600c2a-76cd-47b7-bf30-5cfd8abae3ad",
      "name": "Code5"
    }
  ],
  "connections": {
    "Dados N8N1": {
      "main": [
        [
          {
            "node": "Dados N8N",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Se site / bc1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Erro1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot": {
      "main": [
        [
          {
            "node": "Resposta Typebot CPF Errado",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot CPF Errado": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Erro1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Mapa - Informações",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados N8N1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados N8N": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit4": {
      "main": [
        [
          {
            "node": "HTTP Request21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request21": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito maior ou igual1": {
      "main": [
        [
          {
            "node": "Obter Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se site / bc1": {
      "main": [
        [
          {
            "node": "Obter Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Site1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito inferior1": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Site1": {
      "main": [
        [
          {
            "node": "Crédito maior ou igual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crédito inferior1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas2": {
      "main": [
        [
          {
            "node": "Code17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code17": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code18": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda1": {
      "main": [
        [
          {
            "node": "Code18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If51": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Mapa - Informações1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "If51",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If52",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code19": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If52": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot3": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "Edit Fields13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields13": {
      "main": [
        [
          {
            "node": "If49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set4": {
      "main": [
        [
          {
            "node": "XML4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML4": {
      "main": [
        [
          {
            "node": "If48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "Edit Fields15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields15": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If48": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If49": {
      "main": [
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda4": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "confere.link4": {
      "main": [
        [
          {
            "node": "Set4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "confere.link4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If18": {
      "main": [
        [
          {
            "node": "Informações1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Informações",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields16": {
      "main": [
        [
          {
            "node": "If50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If50": {
      "main": [
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Informações",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Edit Fields16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "If53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If53": {
      "main": [
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas3": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Informações2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta6": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If33": {
      "main": [
        [
          {
            "node": "If34",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields24": {
      "main": [
        [
          {
            "node": "If39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If34": {
      "main": [
        [
          {
            "node": "Edit Fields24",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields26": {
      "main": [
        [
          {
            "node": "If39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If35": {
      "main": [
        [
          {
            "node": "Edit Fields26",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields27": {
      "main": [
        [
          {
            "node": "If39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If36": {
      "main": [
        [
          {
            "node": "Edit Fields27",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields28": {
      "main": [
        [
          {
            "node": "If39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If37": {
      "main": [
        [
          {
            "node": "Edit Fields28",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields29": {
      "main": [
        [
          {
            "node": "If39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If38": {
      "main": [
        [
          {
            "node": "Edit Fields29",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If39": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "If33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "Edit Fields25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações1": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Consulta6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If20": {
      "main": [
        [
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields30": {
      "main": [
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields25": {
      "main": [
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "Se Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se Supabase1": {
      "main": [
        [
          {
            "node": "Limit4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Salvar Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obter Supabase": {
      "main": [
        [
          {
            "node": "Se Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se Supabase": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "minerdapifoda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salvar Supabase1": {
      "main": [
        [
          {
            "node": "Limit4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda2": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta ERRO2": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields10": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Consulta ERRO2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações2": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Code19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields11": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Edit Fields11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "HTTP Request2": [
      {
        "json": {
          "HEADER": {
            "INFORMACOES_RETORNO": {
              "VERSAO": "20180521",
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "CHAVE_CONSULTA": "2505648",
              "PRODUTO": "1360-SCORE CPF/CNPJ",
              "CLIENTE": "40.126.612/0001-40-Rede Quero Imoveis",
              "DATA_HORA_CONSULTA": "17/05/2025 19:52",
              "TERMINAL": "",
              "SOLICITANTE": "IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)",
              "PDF": "https://api.iconsultei.com.br/tools/generate-pdf.aspx?file_code=Lf%2feju7IwAwmo3VSD8LowDXa2T7upzbGsche3OlBW8w%3d",
              "ENTIDADE": "26",
              "REQUISICAO": "df484aa0d8284215b986802cb9e12fc4/17052025195204",
              "TEMPO_RESPOSTA": {
                "INICIO": "1747522324,45855",
                "FINAL": "1747522330,33356",
                "INTERVALO": "5,875"
              },
              "INFORM_EXTERNO": {
                "REQUISICAO_EXTERNA": "bcbf4221235249fd984ff5384afb6eb3/17052025195206",
                "ENTIDADE_EXTERNA": "42",
                "CHAVE_EXTERNA": "1302225"
              }
            },
            "PARAMETROS": {
              "CPFCNPJ": "32676277880"
            },
            "DADOS_RETORNADOS": {
              "DADOS_RECEITA_FEDERAL": "0",
              "ALERTA_DOCUMENTOS_ROUBADOS": "0",
              "DADOS_AGENCIA_BANCARIA": "0",
              "PROTESTO_SINTETICO": "0",
              "PROTESTO_ANALITICO": "0",
              "ENDERECOS": "0",
              "FALENCIAS_ACOES_RECUPERACOES": "0",
              "INFORMACOES_ELEITORAIS": "0",
              "QUADRO_SOCIETARIO": "0",
              "PARTICIPACAO_EM_EMPRESAS": "0",
              "PENDENCIAS_INTERNAS": "0",
              "PENDENCIAS_FINANCEIRAS": "0",
              "INFORMACOES_DA_EMPRESA": "0",
              "CCF_BACEN": "0",
              "CCF_VAREJO": "0",
              "RECHEQUE_ONLINE": "0",
              "RECHEQUE": "0",
              "CONTUMACIA": "0",
              "ENDERECO_DO_CEP": "0",
              "PASSAGENS_COMERCIAIS": "0",
              "INFORMACOES_ALERTAS_RESTRICOES": "0",
              "SCORE": "1",
              "ADMINISTRADORES_DA_EMPRESA": "0",
              "TITULOS_A_VENCER": "0",
              "HISTORICO_DE_PAGAMENTOS": "0",
              "REFERENCIA_DE_NEGOCIOS": "0",
              "PRINCIPAIS_FORNECEDORES": "0",
              "IDENTIFICACAO_PESSOA_FISICA": "0",
              "OCUPACAO_PESSOA_FISICA": "0",
              "PARTICIPACAO_EM_FALENCIAS": "0",
              "TELEFONE_FIXO": "0",
              "TITULAR_DO_TELEFONE": "0",
              "OUTROS_TELEFONES": "0",
              "TELEFONE_CELULAR": "0",
              "PARENTES": "0",
              "CONTATOS": "0",
              "LOCAIS_TRABALHO": "0",
              "TELEFONE_COMERCIAL": "0",
              "DADOS_GERAIS": "0",
              "VIZINHOS": "0",
              "RESIDENTES": "0",
              "BENEFICIO": "0",
              "EMAILS": "0",
              "INFOBUSCA": "0",
              "VINCULO_MESMO_ENDERECO": "0",
              "SOMENTE_TELEFONE": "0",
              "SOMENTE_ENDERECO": "0",
              "RELATORIO_TEXTO": "0",
              "VEICULOS_POR_DOCUMENTO": "0",
              "CNH": "0",
              "AGREGADOS": "0",
              "BIN_NACIONAL": "0",
              "BIN_ESTADUAL": "0",
              "GRAVAME": "0",
              "LEILAO": "0",
              "CONFERENCIA_MOTOR_E_CHASSI": "0",
              "HISTORICO_PROPRIETARIOS": "0",
              "HISTORICO_ROUBO_FURTO": "0",
              "ROUBO_FURTO": "0",
              "PERDA_TOTAL": "0",
              "ALERTAS": "0",
              "RECALL": "0",
              "DPVAT": "0",
              "DECODIFICADOR_DE_CHASSI": "0",
              "PRECIFICADOR": "0",
              "RENAJUD": "0",
              "RENACH": "0",
              "CRLV": "0",
              "REMARKETING": "0",
              "INDICIO_SINISTRO": "0",
              "PARECER_TECNICO": "0",
              "PENDENCIAS_REFIN": "0",
              "PENDENCIAS_VENCIDAS": "0",
              "LOCALIZADOR_AGREGADOS": "0",
              "CARACTERISTICAS_ADICIONAIS": "0",
              "LAUDO_CAUTELAR": "0",
              "DECISAO": "0",
              "LIMITE_CREDITO": "0",
              "FATURAMENTO_PRESUMIDO": "0",
              "PARTICIPACAO_SOCIO_ADM_OUTRAS_EMPRESAS": "0",
              "PARTICIPACOES_EMPRESAS_CONSULTADAS": "0",
              "HIST_CONSULTAS": "0",
              "ACOES_CIVEIS": "0",
              "FALENCIA_RECUPERACAO_JUDICIAL": "0",
              "ANALISE_KILOMETRAGEM": "0",
              "PONTUALIDADE_PAGTO": "0",
              "PROPRIETARIO_ATUAL_VEICULO": "0",
              "VALIDACAO_PESSOA_FISICA": "0",
              "VALIDACAO_PF_BASICA": "0",
              "VALIDACAO_PF_BIOMETRIA_FACE": "0",
              "VALIDACAO_PF_CNH": "0",
              "VALIDACAO_PF_DOCUMENTO": "0",
              "VALIDACAO_PF_ENDERECO": "0",
              "VALIDACAO_PF_FILIACAO": "0",
              "AUTO_VISTORIA": "0",
              "INDICE_SECURITARIO": "0",
              "CALCULO_VALORIZACAO": "0",
              "ATPVE": "0",
              "CREDITO_CONCEDIDO": "0",
              "RENDA_PRESUMIDA": "0",
              "COMPROMETIMENTO_PAGTO": "0",
              "LEILAO_CONJUGADO": "0",
              "CSV": "0",
              "RENAINF": "0",
              "RELATORIO_ARQUIVO": "0",
              "INDICIO_SINISTRO_CONJUGADO": "0",
              "CONSULTA_GENERICA": "0",
              "BATIDOS": "0",
              "RELATORIO_SCR": "0",
              "CADIN": "0",
              "ACOES_TRABALHISTAS": "0",
              "RELATORIO_SCR_SINTETICO": "0",
              "CPR": "0",
              "FICHA_TECNICA_VEICULAR": "0",
              "CHECK_LIST_VEICULAR": "0",
              "DIVIDA_ATIVA_PESSOA_FISICA": "0",
              "DIVIDA_ATIVA_PESSOA_JURIDICA": "0",
              "PENDENCIAS_ISP": "0",
              "RELATORIO_JURIDICO_EMPRESARIAL": "0",
              "INFORMACOES_CRIMINAIS": "0",
              "PROCURADOS_JUSTICA": "0",
              "RELATORIO_JURIDICO_PESSOA_FISICA": "0",
              "DETALHAMENTO_ACAO_JUDICIAL": "0",
              "RELATORIO_IMOVEIS": "0",
              "DEBITOS_IPVA": "0",
              "DEBITO_DIRETO_AUTORIZADO": "0",
              "CONTROLE_POSITIVO": "0",
              "ALERTA_INDICIO": "0",
              "RELATORIO_CREDITICIO_ARQUIVO": "0",
              "IMAGENS_VEICULO": "0",
              "RELATORIO_SCR_ENCAPSULADO": "0",
              "RESTRICOES_FINANCEIRAS": "0",
              "ALERTA_VEICULAR_PROPRIEDADE": "0",
              "MOTOR_CREDITO": "0",
              "ALTERACAO_CARACTERISTICAS": "0",
              "DEBITOS_VEICULARES": "0"
            },
            "CONTROLE": {
              "QUANTIDADE_OCORRENCIAS": "1",
              "OCORRENCIAS": [
                {
                  "CONTEUDO": "378",
                  "FONTE": "136",
                  "STATUS": "1"
                }
              ]
            }
          },
          "CREDCADASTRAL": {
            "SCORES": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "QUANTIDADE_OCORRENCIAS": "1",
              "OCORRENCIAS": [
                {
                  "LAYOUT": "SCSIMPLE2020",
                  "TIPO_SCORE": "SCORE 6 MESES",
                  "SCORE": "576",
                  "EXECUCAO": "NULO",
                  "DESCR_PLANO": "NULO",
                  "DESCR_SCORE": "SCORE 6 MESES",
                  "CLASSIF_NRO": "NULO",
                  "CLASSIF_ABC": "NULO",
                  "PROBABILIDADE_INADIMPLENCIA": "41,75%",
                  "TEXTO": "A CHANCE DE UM CONSUMIDOR, COM SCORE ENTRE 501 E 600, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES E DE 59,25%",
                  "RISCO": "A CHANCE DE UM CONSUMIDOR, COM SCORE ENTRE 501 E 600, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES E DE 59,25%",
                  "MODELO_SCORE": "",
                  "INFORMANTE": "BASE I"
                }
              ]
            }
          },
          "VEICULAR": {}
        }
      }
    ],
    "Dados - ehmconsultas2": [
      {
        "json": {
          "DATA": {
            "Version": "1.0",
            "Status": 200,
            "DADOS_PESSOAIS": [
              {
                "CPF": "48174328882",
                "NOME": "ANA KAROLINE MONTEIRO DOS SANTOS",
                "SEXO": "F",
                "NASCIMENTO": "2002-01-15 00:00:00.000",
                "NOME_CIVIL": "Sem informação",
                "NOME_MAE": "Sem informação",
                "NOME_PAI": "Sem informação",
                "ESTADO_CIVIL": "Sem informação",
                "RG": "Sem informação",
                "ORGAO_EMISSOR": "Sem informação",
                "UF_EMISSAO": "Sem informação",
                "NACIONALIDADE": "Sem informação",
                "CPF_CONJUGE": "Sem informação",
                "SEXO_RETRATADO": "Sem informação",
                "OB_UNB": "Sem informação",
                "DATA_OBTO": "Sem informação",
                "CBO": "Sem informação",
                "ID_CBO": "Sem informação",
                "CODIGO_MOSAIC": "Sem informação",
                "RENDA": "225.84",
                "TITULO_ELEITOR": "Sem informação",
                "CODIGO_MOSAIC_NOVO": "C08",
                "CODIGO_MOSAIC_SECUNDARIO": "Sem informação"
              }
            ],
            "PARENTES": [
              "Sem Informação"
            ],
            "PIS": [
              "Sem Informação"
            ],
            "NIS": [
              "Sem Informação"
            ],
            "CNS": [
              "Sem Informação"
            ],
            "DADOS_ELEITORAIS": [
              "Sem Informação"
            ],
            "SCORE_BASE": [
              {
                "SCORE_SERASA": "719",
                "SCORE_SERASA_FAIXA": "BAIXISSIMO RISCO",
                "SCORE_BOA_VISTA": "0",
                "SCORE_BOA_VISTA_FAIXA": "Sem informação"
              }
            ],
            "SCORE_NOVO": [
              {
                "SCORE_SERASA": "0"
              }
            ],
            "SCORE_ANTIGO": [
              {
                "SCORE_SERASA": "719",
                "SCORE_SERASA_FAIXA": "BAIXISSIMO RISCO",
                "SCORE_BOA_VISTA": "0",
                "SCORE_BOA_VISTA_FAIXA": "Sem informação"
              }
            ],
            "IRPF": [
              "Sem Informação"
            ],
            "PODER_AQUISITIVO": [
              {
                "PODER_AQUISITIVO": "MUITO BAIXO",
                "RENDA_PODER_AQUISITIVO": "225.843215930784",
                "FX_PODER_AQUISITIVO": "De R$ 112 até R$ 630"
              }
            ],
            "CLASSE_SOCIAL": [
              {
                "CLASSE_SOCIAL": "D",
                "SUB_CLASSE_SOCIAL": "D"
              },
              {
                "CLASSE_SOCIAL": "D",
                "SUB_CLASSE_SOCIAL": "D"
              }
            ],
            "PROFISSAO": [
              "Sem Informação"
            ],
            "PRODUTOR_RURAL": [
              "Sem Informação"
            ],
            "QUADRO_SOCIETARIO": [
              "Sem Informação"
            ],
            "BOLSA_FAMILIA": [
              "Sem Informação"
            ],
            "FGTS": [
              "Sem Informação"
            ],
            "ESCOLARIDADE": [
              "Sem Informação"
            ],
            "UNIVERSIDADE": [
              "Sem Informação"
            ],
            "SERVIDOR_PUBLICO": [
              "Sem Informação"
            ],
            "MINHA_CASA_MINHA_VIDA": [
              "Sem Informação"
            ],
            "ENDERECOS": [
              "Sem Informação"
            ],
            "EMAIL_BASE": [
              "Sem Informação"
            ],
            "EMAIL_NEW": [
              "Sem Informação"
            ],
            "EMAIL_NOVO": [
              "Sem Informação"
            ],
            "TELEFONES": [
              {
                "TELEFONE": "11969785011",
                "CLASSIFICACAO": "A0"
              },
              {
                "TELEFONE": "11969785011",
                "CLASSIFICACAO": "A0"
              }
            ]
          }
        }
      }
    ],
    "minerdapifoda1": [
      {
        "json": {
          "status": 200,
          "resultado": {
            "DADOS": [
              {
                "CPF": "07603275130",
                "NOME": "CINTHYA VALADARES DIAS",
                "SEXO": "F",
                "NASC": "08/12/2002",
                "NOME_MAE": "",
                "NOME_PAI": "",
                "ESTCIV": "",
                "NACIONALID": "",
                "RG": "",
                "ORGAO_EMISSOR": "",
                "UF_EMISSAO": "",
                "DT_OB": "",
                "RENDA": "225,84",
                "DT_INFORMACAO": "18/02/2017",
                "TITULO_ELEITOR": ""
              }
            ],
            "EMAIL": [],
            "HISTORICO_TELEFONES": [],
            "PARENTES": [],
            "PODER_AQUISITIVO": [
              {
                "COD_PODER_AQUISITIVO": 1,
                "PODER_AQUISITIVO": "MUITO BAIXO",
                "RENDA_PODER_AQUISITIVO": "De R$ 225.00",
                "FX_PODER_AQUISITIVO": "De R$ 112 até� R$ 630"
              }
            ],
            "ENDERECOS": [],
            "PIS": [],
            "UNIVERSITARIO": [],
            "SCORE": [
              {
                "CSB8": null,
                "CSB8_FAIXA": null,
                "CSBA": 0,
                "CSBA_FAIXA": null
              }
            ],
            "IRPF": [],
            "TSE": []
          }
        }
      }
    ],
    "confere.link4": [
      {
        "json": {
          "data": "<?xml version='1.0' encoding='ISO-8859-1'?><RETORNO>\r\n<CADASTRAIS>\r\n<CPF>7603275130</CPF>\r\n<NOME>CINTHYA VALADARES DIAS</NOME>\r\n<NOME_MAE></NOME_MAE>\r\n<NASCTO>08/12/2002</NASCTO>\r\n<IDADE>22 anos</IDADE>\r\n<SEXO>Feminino</SEXO>\r\n\r\n<RG></RG>\r\n<ORGAO_EMISSOR></ORGAO_EMISSOR>\r\n<UF_EMISSAO></UF_EMISSAO>\r\n<TITULO_ELEITOR></TITULO_ELEITOR>\r\n<NIT></NIT>\r\n<ESCOLARIDADE> </ESCOLARIDADE>\r\n<NACIONALIDADE></NACIONALIDADE>\r\n<PROFISSAO></PROFISSAO>\r\n<SALARIO></SALARIO>\r\n<CLASSE_ECONOMICA></CLASSE_ECONOMICA>\r\n<CONSTA_OBITO></CONSTA_OBITO>\r\n\r\n</CADASTRAIS>\r\n<INSS>\r\n\r\n</INSS><TELEFONES_FIXO></TELEFONES_FIXO><TELEFONES_MOVEL><TELEFONE><NUMERO>61995269802</NUMERO><OPERADORA>CLARO S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>61993654842</NUMERO><OPERADORA>CLARO S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>61995580725</NUMERO><OPERADORA>CLARO S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>61991662342</NUMERO><OPERADORA>CLARO S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>61994096709</NUMERO><OPERADORA>CLARO S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE></TELEFONES_MOVEL><EMAILS><EMAIL>diascinthya7@gmail.com</EMAIL>\r\n</EMAILS><ENDERECOS><ENDERECO><LOGRADOURO>QUADRA 15</LOGRADOURO><NUMERO>1</NUMERO><COMPLEMENTO>LT B C 1</COMPLEMENTO><BAIRRO>PRQ INDUST MINGONE</BAIRRO><CEP>72855015</CEP><CIDADE>LUZIANIA</CIDADE><ESTADO>GO</ESTADO></ENDERECO></ENDERECOS><POSSIVEIS_PARENTES></POSSIVEIS_PARENTES><POSSIVEIS_CONTATOS></POSSIVEIS_CONTATOS><REFERENCIA_PROFISSIONAL></REFERENCIA_PROFISSIONAL><EMPRESAS_SOCIO></EMPRESAS_SOCIO></RETORNO>"
        }
      }
    ],
    "Consulta6": [
      {
        "json": {
          "data": "<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Detalhamento</title>\r\n    <style>\r\n        body {\r\n            font-family: Arial, sans-serif;\r\n            margin: 0;\r\n            padding: 0;\r\n            background-color: #f4f4f4;\r\n        }\r\n        .container {\r\n            max-width: 700px;\r\n            margin: 20px auto;\r\n            background: white;\r\n            border-radius: 8px;\r\n            overflow: hidden;\r\n            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n        }\r\n        .header {\r\n            background-color: #e6e6e6;\r\n            padding: 20px;\r\n            border-bottom: 1px solid #ddd;\r\n        }\r\n        .header h2 {\r\n            margin: 0;\r\n            font-size: 18px;\r\n        }\r\n        .info {\r\n            padding: 20px;\r\n            background-color: #e0e8f0;\r\n        }\r\n        .info p {\r\n            margin: 5px 0;\r\n        }\r\n        .total-debt {\r\n            padding: 20px;\r\n            font-size: 18px;\r\n            font-weight: bold;\r\n            color: green;\r\n        }\r\n        .debt-item {\r\n            padding: 15px 20px;\r\n            border-top: 1px solid #ddd;\r\n        }\r\n        .debt-header {\r\n            font-weight: bold;\r\n            margin-bottom: 10px;\r\n        }\r\n        .inscricao-item {\r\n            display: flex;\r\n            padding: 10px;\r\n            margin-top: 10px;\r\n            border-left: 2px solid #ccc;\r\n            align-items: center;\r\n            gap: 20px;\r\n        }\r\n        .inscricao-item p {\r\n            margin: 0;\r\n            flex: 1;\r\n        }\r\n        .footer {\r\n            padding: 10px;\r\n            text-align: center;\r\n            background-color: #e6e6e6;\r\n            font-size: 14px;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n\r\n<div id=\"app\">\r\n        <div class=\"container\">\r\n        <div class=\"header\">\r\n            <h2>Detalhamento</h2>\r\n        </div>\r\n        <div class=\"info\">\r\n            <p><strong>CPF/CNPJ:</strong> 07603275130</p>\r\n            <p><strong>Data da Consulta:</strong> 03/06/2025 09:35:44</p>\r\n        </div>\r\n        <div class=\"total-debt\">\r\n            Valor total devido: Nenhum valor devido\r\n        </div>\r\n        <div class=\"debt-item\">\r\n            <p class=\"debt-header\">Nenhuma d�vida registrada.</p>\r\n        </div>\r\n        <div class=\"footer\">\r\n            <p>REGULARIZE - Acesse aqui o portal digital de servi�os da PGFN para regularizar ou questionar a d�vida.</p>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n</body>\r\n</html>\r\n"
        }
      }
    ],
    "Salvar Supabase1": [
      {
        "json": {
          "id": 18087,
          "telefone": "553799781110",
          "dado": "07603275130",
          "data": null,
          "opcao": "informacoes",
          "HEADER": null,
          "CREDCADASTRAL": null,
          "consulta": "informacoes-score-cadin",
          "data_consulta": null,
          "hora_consulta": null,
          "Consulta": null,
          "consulta-informacoes": "*Nome:* _CINTHYA VALADARES DIAS_\n*CPF:* _7603275130_\n*Data Nascimento:* _08/12/2002_\n*Idade:* _22 anos_\n\n## *Telefone*\n- 61995269802\n- 61993654842\n- 61995580725\n- 61991662342\n- 61994096709\n\n## *Email*\n- diascinthya7@gmail.com\n\n\n\n---------------------------\n\n*SCORE*\n*Score:* _719_\n*Tipo score:* _SCORE 6 MESES_\n\n*Obs:* _A CHANCE DE UM CONSUMIDOR, COM SCORE 719, PAGAR SEUS COMPROMISSOS FINANCEIROS EM 06 MESES É ALTA._\n\n---------------------------\n\n## *CADIN*\n_Sem pendências registradas._\n "
        }
      }
    ],
    "minerdapifoda2": [
      {
        "json": {
          "DADOS": [
            {
              "CPF": "11383223696",
              "NOME": "ARTHUR BALDIOTTI MENDONCA ALVARES",
              "SEXO": "M",
              "NASC": "03/04/1993",
              "NOME_MAE": "MARIA LUIZA BALDIOTTI MENDONCA",
              "NOME_PAI": "",
              "ESTCIV": "",
              "NACIONALID": "",
              "RG": "",
              "ORGAO_EMISSOR": "",
              "UF_EMISSAO": "",
              "DT_OB": "",
              "RENDA": "994,76",
              "DT_INFORMACAO": null,
              "TITULO_ELEITOR": ""
            }
          ],
          "EMAIL": [
            {
              "EMAIL": "tiosam_importados@hotmail.com"
            },
            {
              "EMAIL": "arthurbaldiotti@hotmail.com"
            }
          ],
          "HISTORICO_TELEFONES": [
            {
              "DDD": "37",
              "TELEFONE": "999781110",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "20/07/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "A0"
            },
            {
              "DDD": "31",
              "TELEFONE": "33344803",
              "TIPO_TELEFONE": "1",
              "DT_INCLUSAO": "27/07/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "A2"
            },
            {
              "DDD": "31",
              "TELEFONE": "975122221",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "27/07/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "A2"
            },
            {
              "DDD": "31",
              "TELEFONE": "997781110",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "08/11/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "D"
            },
            {
              "DDD": "37",
              "TELEFONE": "999493378",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "08/11/2017",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "D"
            }
          ],
          "PARENTES": [
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 57629030606,
              "NOME_VINCULO": "RITA DE CASSIA CARVALHO BALDIOTTI"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 52162486687,
              "NOME_VINCULO": "MARCIA APARECIDA CARVALHO BALDIOTTI PONCE"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 18081223649,
              "NOME_VINCULO": "LUIZ MIGUEL CARVALHO BALDIOTTI"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 31243916672,
              "NOME_VINCULO": "REGINA AUXILIADORA CARVALHO BALDIOTTI VENCATO"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 7769001617,
              "NOME_VINCULO": "MARCELA BALDIOTTI PONCE"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 10191111600,
              "NOME_VINCULO": "VICTOR BALDIOTTI VENCATO"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 10219297606,
              "NOME_VINCULO": "LIVIA BALDIOTTI RIBEIRO"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 10191110620,
              "NOME_VINCULO": "BIANCA BALDIOTTI VENCATO"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 28911458600,
              "NOME_VINCULO": "FERNANDO ANTONIO CARVALHO BALDIOTTI"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 27914232653,
              "NOME_VINCULO": "ANGELICA DE FATIMA CARVALHO BALDIOTTI FERREIRA"
            },
            {
              "VINCULO": "MAE",
              "CPF_VINCULO": 43315763615,
              "NOME_VINCULO": "MARIA LUIZA BALDIOTTI MENDONCA"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 10602393612,
              "NOME_VINCULO": "JULIA BALDIOTTI RIBEIRO"
            },
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 11628911654,
              "NOME_VINCULO": "AUGUSTO BALDIOTTI MENDONCA ALVARES"
            },
            {
              "VINCULO": "AVO",
              "CPF_VINCULO": 7600355639,
              "NOME_VINCULO": "ZENIRA CARVALHO BALDIOTTI"
            },
            {
              "VINCULO": "TIA(O)",
              "CPF_VINCULO": 50132105691,
              "NOME_VINCULO": "LUCIA HELENA CARVALHO BALDIOTTI RIBEIRO"
            },
            {
              "VINCULO": "PRIMA(O)",
              "CPF_VINCULO": 5128883612,
              "NOME_VINCULO": "PATRICIA BALDIOTTI FREITAS ARAUJO"
            }
          ],
          "PODER_AQUISITIVO": [
            {
              "COD_PODER_AQUISITIVO": 2,
              "PODER_AQUISITIVO": "BAIXO",
              "RENDA_PODER_AQUISITIVO": "De R$ 994.00",
              "FX_PODER_AQUISITIVO": "De R$ 630 até� R$ 1018"
            }
          ],
          "ENDERECOS": [
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "FRANCISCO SALES",
              "LOGR_NUMERO": "129",
              "LOGR_COMPLEMENTO": "AP 602",
              "BAIRRO": "CENTRO",
              "CIDADE": "PARA DE MINAS",
              "UF": "MG",
              "CEP": "35660017",
              "DT_ATUALIZACAO": "29/07/2019"
            }
          ],
          "PIS": [],
          "UNIVERSITARIO": [],
          "SCORE": [
            {
              "CSB8": "606",
              "CSB8_FAIXA": "BAIXO",
              "CSBA": 288,
              "CSBA_FAIXA": "ALTO"
            }
          ],
          "IRPF": [
            {
              "DocNumber": 11383223696,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "0000",
              "Lote": "0",
              "Sit_Receita_Federal": "SALDO INEXISTENTE DE IMPOSTO A PAGAR OU A RESTITUIR",
              "CADASTRO_ID": 3963,
              "CPF": 11383223696,
              "CONTATOS_ID": 333399180
            }
          ],
          "TSE": [],
          "INTERESSES": [
            {
              "cpf": 11383223696,
              "creditoPessoalPreAprovado": 1,
              "creditoImobiliarioPreAprovado": 0,
              "financiamentoDeVeiculoPreAprovado": 1,
              "classeMedia": 0,
              "debitoAutmatico": 1,
              "possuiLuxo": 1,
              "possuiInvestimentos": 1,
              "possuiCartaoDeCredito": 1,
              "possuiMultiplosCartoes": 1,
              "possuiContaAltoPadrao": 0,
              "possuiCartaoBlack": 0,
              "possuiCartaoPrime": 0,
              "possuiCelularPrePago": 1,
              "possuiCelularPosPago": 1,
              "possuiMilhasAcumuladas": 1,
              "possuiCasaPropria": 1,
              "possuiDescontos": 1,
              "possuiContasCorrentes": 1,
              "possuiSeguroAutomotivo": 1,
              "possuiPrevidenciaPrivada": 1,
              "possuiInternetBanking": 1,
              "possuiTokenInstalado": 1,
              "realizouViagens": 1,
              "creditoPessoal": 68,
              "financiamentoVeiculo": 92,
              "compraInternet": 34,
              "multiplosCartoes": 56,
              "cartaoPrime": 35,
              "tvCabo": 54,
              "bandaLarga": 67,
              "casaPropria": 77,
              "celularPrePago": 54,
              "celularPosPago": 57,
              "creditoMobiliario": 0,
              "seguroAutomotivo": 62,
              "seguroSaude": 49,
              "seguroVida": 27,
              "seguroResidencial": 52,
              "investimentos": 67,
              "consignado": 0,
              "previdenciaPrivada": 76,
              "resgateMilhas": 70,
              "cacadorDescontos": 50,
              "fitness": 56,
              "turismo": 63,
              "luxo": 53,
              "cinefilo": 60,
              "transportePublico": 45,
              "jogosOnline": 69,
              "videoGame": 68,
              "earlyAdopters": 56
            }
          ]
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "n8n.redequeroimoveis.com",
            "content-length": "853",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "content-type": "application/json",
            "user-agent": "axios/1.8.2",
            "accept-encoding": "gzip, compress, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "CPF": "32676277880",
            "Telefone": "+553799781110",
            "Webhook": "https://new-backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/DsGiAmvzvQWf/",
            "URL_LogoPDF": "semlogo",
            " Tipo consulta": "Completa",
            "Informações": "*Nome:* _ANDERSON DOS SANTOS JORGE_\n*CPF:* _32676277880_\n*Data Nascimento:* _25/06/1983_\n*Idade:* _41 anos_\n\n## *Telefone*\n- 1238420788\n- 12997122929\n- 1238422303\n- 1238422288\n- 12997318985\n\n## *Email*\n- andersonsjorge@bol.com.br\n- ambientesimoveis@gmail.com\n- at-estevam@bol.com.br\n- contato@ambientesimoveis.com.br\n- andersondjorge@hotmail.com\n\n## *Possíveis Parentes*\n- _REGIANE DOS SANTOS JORGE - IRMA(O)_\n- _ALEX DOS SANTOS JORGE - IRMA(O)_\n- _MARIA JUSILENE DOS SANTOS JORGE - MAE_\n- _CRISTIANE DOS SANTOS COSTA - IRMA(O)_",
            "RequestToken": null,
            "tipo_ehmconsultas": "cpf_pros",
            "status_ehmconsultas": "on"
          },
          "webhookUrl": "http://localhost:5678/webhook-test/dividas-cpf_7-1-1",
          "executionMode": "test"
        }
      }
    ],
    "minerdapifoda": [
      {
        "json": {
          "DADOS": [
            {
              "CPF": "32676277880",
              "NOME": "ANDERSON DOS SANTOS JORGE",
              "SEXO": "M",
              "NASC": "25/06/1983",
              "NOME_MAE": "MARIA JUSILENE DOS SANTOS JORGE",
              "NOME_PAI": "MANOEL VICENTE JORGE",
              "ESTCIV": "",
              "NACIONALID": "",
              "RG": "",
              "ORGAO_EMISSOR": "",
              "UF_EMISSAO": "",
              "DT_OB": "",
              "RENDA": "",
              "DT_INFORMACAO": "14/06/2008",
              "TITULO_ELEITOR": "314848160191"
            }
          ],
          "EMAIL": [
            {
              "EMAIL": "andersonsjorge@bol.com.br"
            },
            {
              "EMAIL": "ambientesimoveis@gmail.com"
            },
            {
              "EMAIL": "at-estevam@bol.com.br"
            },
            {
              "EMAIL": "contato@ambientesimoveis.com.br"
            },
            {
              "EMAIL": "andersondjorge@hotmail.com"
            }
          ],
          "HISTORICO_TELEFONES": [
            {
              "DDD": "12",
              "TELEFONE": "38420788",
              "TIPO_TELEFONE": "1",
              "DT_INCLUSAO": "06/01/2012",
              "DT_INFORMACAO": "24/10/2011",
              "SIGILO": "",
              "NSU": "000000549681564",
              "CLASSIFICACAO": "D"
            },
            {
              "DDD": "12",
              "TELEFONE": "997122929",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "18/07/2013",
              "DT_INFORMACAO": "06/07/2019",
              "SIGILO": "",
              "NSU": "000000829688412",
              "CLASSIFICACAO": "A0"
            },
            {
              "DDD": "12",
              "TELEFONE": "38422303",
              "TIPO_TELEFONE": "1",
              "DT_INCLUSAO": "17/11/2014",
              "DT_INFORMACAO": "10/11/2014",
              "SIGILO": "",
              "NSU": "000000572485181",
              "CLASSIFICACAO": "A0"
            },
            {
              "DDD": "12",
              "TELEFONE": "38422288",
              "TIPO_TELEFONE": "2",
              "DT_INCLUSAO": "28/05/2015",
              "DT_INFORMACAO": "08/08/2015",
              "SIGILO": "",
              "NSU": "000000756253886",
              "CLASSIFICACAO": "D"
            },
            {
              "DDD": "12",
              "TELEFONE": "997318985",
              "TIPO_TELEFONE": "3",
              "DT_INCLUSAO": "23/08/2016",
              "DT_INFORMACAO": null,
              "SIGILO": "",
              "NSU": "",
              "CLASSIFICACAO": "D"
            }
          ],
          "PARENTES": [
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 28430412875,
              "NOME_VINCULO": "REGIANE DOS SANTOS JORGE"
            },
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 33061066829,
              "NOME_VINCULO": "ALEX DOS SANTOS JORGE"
            },
            {
              "VINCULO": "MAE",
              "CPF_VINCULO": 13501071825,
              "NOME_VINCULO": "MARIA JUSILENE DOS SANTOS JORGE"
            },
            {
              "VINCULO": "IRMA(O)",
              "CPF_VINCULO": 28198843850,
              "NOME_VINCULO": "CRISTIANE DOS SANTOS COSTA"
            }
          ],
          "PODER_AQUISITIVO": [],
          "ENDERECOS": [
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "CONCEICAO",
              "LOGR_NUMERO": "120",
              "LOGR_COMPLEMENTO": "LJ 16 AUS PR SHOP",
              "BAIRRO": "NULL",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": null
            },
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "GOMIDE",
              "LOGR_NUMERO": "47",
              "LOGR_COMPLEMENTO": null,
              "BAIRRO": "NULL",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": "07/03/2018"
            },
            {
              "LOGR_TIPO": "NULL",
              "LOGR_NOME": "DOS TRINTA REIS",
              "LOGR_NUMERO": "5",
              "LOGR_COMPLEMENTO": "C 3",
              "BAIRRO": "NULL",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": null
            },
            {
              "LOGR_TIPO": "R",
              "LOGR_NOME": "GOIS",
              "LOGR_NUMERO": "21",
              "LOGR_COMPLEMENTO": "C",
              "BAIRRO": "PEREQUE MIRIM",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": "12/12/2014"
            },
            {
              "LOGR_TIPO": "NULL",
              "LOGR_NOME": "VEL TRINTA REIS",
              "LOGR_NUMERO": "5",
              "LOGR_COMPLEMENTO": "C 3",
              "BAIRRO": "ENSEADA",
              "CIDADE": "UBATUBA",
              "UF": "SP",
              "CEP": "11680000",
              "DT_ATUALIZACAO": "28/10/2019"
            }
          ],
          "PIS": [
            {
              "PIS": 19028510799
            }
          ],
          "UNIVERSITARIO": [],
          "SCORE": [
            {
              "CSB8": "31",
              "CSB8_FAIXA": "ALTISSIMO",
              "CSBA": 46,
              "CSBA_FAIXA": "ALTISSIMO"
            }
          ],
          "IRPF": [
            {
              "DocNumber": 32676277880,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "",
              "Lote": "",
              "Sit_Receita_Federal": "SUA DECLARACAO NAO CONSTA NA BASE DE DADOS DA RECEITA FEDERAL ",
              "CADASTRO_ID": 3963,
              "CPF": 32676277880,
              "CONTATOS_ID": 20857024
            },
            {
              "DocNumber": 32676277880,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "",
              "Lote": "",
              "Sit_Receita_Federal": "SALDO INEXISTENTE DE IMPOSTO A PAGAR OU A RESTITUIR.",
              "CADASTRO_ID": 4079,
              "CPF": 32676277880,
              "CONTATOS_ID": 20857024
            },
            {
              "DocNumber": 32676277880,
              "Instituicao_Bancaria": "",
              "Cod_Agencia": "",
              "Lote": "",
              "Sit_Receita_Federal": "IMPOSTO A PAGAR",
              "CADASTRO_ID": 3963,
              "CPF": 32676277880,
              "CONTATOS_ID": 20857024
            }
          ],
          "TSE": [],
          "INTERESSES": [
            {
              "cpf": 32676277880,
              "creditoPessoalPreAprovado": 1,
              "creditoImobiliarioPreAprovado": 0,
              "financiamentoDeVeiculoPreAprovado": 1,
              "classeMedia": 0,
              "debitoAutmatico": 1,
              "possuiLuxo": 1,
              "possuiInvestimentos": 1,
              "possuiCartaoDeCredito": 1,
              "possuiMultiplosCartoes": 0,
              "possuiContaAltoPadrao": 0,
              "possuiCartaoBlack": 0,
              "possuiCartaoPrime": 0,
              "possuiCelularPrePago": 0,
              "possuiCelularPosPago": 0,
              "possuiMilhasAcumuladas": 1,
              "possuiCasaPropria": 1,
              "possuiDescontos": 1,
              "possuiContasCorrentes": 1,
              "possuiSeguroAutomotivo": 1,
              "possuiPrevidenciaPrivada": 1,
              "possuiInternetBanking": 1,
              "possuiTokenInstalado": 1,
              "realizouViagens": 1,
              "creditoPessoal": 79,
              "financiamentoVeiculo": 88,
              "compraInternet": 51,
              "multiplosCartoes": 42,
              "cartaoPrime": 49,
              "tvCabo": 58,
              "bandaLarga": 70,
              "casaPropria": 49,
              "celularPrePago": 48,
              "celularPosPago": 42,
              "creditoMobiliario": 44,
              "seguroAutomotivo": 73,
              "seguroSaude": 53,
              "seguroVida": 75,
              "seguroResidencial": 56,
              "investimentos": 73,
              "consignado": 53,
              "previdenciaPrivada": 74,
              "resgateMilhas": 66,
              "cacadorDescontos": 55,
              "fitness": 67,
              "turismo": 65,
              "luxo": 5,
              "cinefilo": 72,
              "transportePublico": 31,
              "jogosOnline": 52,
              "videoGame": 60,
              "earlyAdopters": 60
            }
          ]
        }
      }
    ]
  },
  "versionId": "cd64bdbe-67b2-4611-a89d-5fcb152ea009",
  "triggerCount": 1,
  "tags": []
}