{
  "createdAt": "2025-07-24T23:29:26.365Z",
  "updatedAt": "2025-07-24T23:31:19.000Z",
  "id": "pFyIFYuoi6MUjUe8",
  "name": "Dividas CPF 3-1-2 (ehmconsultas - dividas/multi /cpf) JSON",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b9fceadd-0e68-49ef-91f6-a7c1a02ccc24",
              "leftValue": "={{ $json.data.Nome }}",
              "rightValue": "200",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "1fcc84cf-06c3-4ab7-8a22-48251ba20709",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "5240831c-88c9-4fad-99cf-cb943848363a",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4540,
        1080
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "Consulta",
        "options": {}
      },
      "id": "8159f29f-43fe-4e81-9aaa-20cb29f381c8",
      "name": "Aggregate6",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1520,
        3280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4c4b8b4-ac50-4977-b5b7-22b2d88b5eed",
              "name": "Créditos a retirar",
              "value": "={{ $('Dados N8N').item.json['Credito consulta'] }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "e44425dd-e95e-4d96-adf4-af17796318a9",
      "name": "Créditos a retirar1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        6500,
        2700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "6611ca4d-c98b-4930-bf78-78785d12378b",
              "leftValue": "={{ $('Retornar Créditos1').item.json.creditos }}",
              "rightValue": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "20f6f670-b159-4a5f-b700-d978749438bd",
      "name": "Maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6880,
        2680
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "89039c0a-6ac9-42de-ba99-e67203b704f8",
      "name": "Verificar saldo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7280,
        2660
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "62cd4dad-d18a-4af1-a9a6-28adad4b7620",
      "name": "Retornar Créditos1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6320,
        2700
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Retornar Créditos1').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5b459a9a-dd27-45d0-86ce-5ae260b5a640",
      "name": "Se crédito existe1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6680,
        2700
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8b078b57-ae93-4783-82c8-c566f19db3f7",
      "name": "Retirar Créditos1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7080,
        2660
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad9c09c1-3aaf-4c42-ab43-9f8f30a12e99",
              "leftValue": "={{ $('Retornar Créditos1').item.json.creditos }}",
              "rightValue": "={{ $json.creditos }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "355f3edf-196d-49ea-8f4f-6a7293e7324c",
      "name": "If20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        7460,
        2660
      ]
    },
    {
      "parameters": {
        "content": "## Retirar Créditos",
        "height": 312,
        "width": 1453
      },
      "id": "46c8ea83-f8dc-4e7e-95b9-e24d86dd5d1d",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6240,
        2580
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Nome Consulta",
              "value": "={{ $json['Tipo Consulta'] }}",
              "type": "string"
            },
            {
              "id": "ac5a7a11-a016-4827-a7ae-88a6490e25ec",
              "name": "URL Consulta Padrão",
              "value": "-",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": "={{ $json['Credito consulta'] }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "1319421f-b674-4397-862d-d530bea65ca4",
      "name": "Dados N8N",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -9300,
        800
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            },
            {
              "name": "Informações",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/_ /g, '_') }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "Tipo consulta",
              "value": "={{ $('Webhook').item.json.body['Tipo consulta'] }}"
            },
            {
              "name": "Pendências",
              "value": "={{ $('Aggregate6').item.json.Consulta[1].Pendencias.replace(/_ /g, '_') }}"
            },
            {
              "name": "Protestos",
              "value": "={{ $('Aggregate6').item.json.Consulta[3].Protesto.replace(/_ /g, '_') }}"
            },
            {
              "name": "SCPC",
              "value": "={{ $('Aggregate6').item.json.Consulta[2].SCPC.replace(/_ /g, '_').replace(/Cr\\uFFFDdito/g, 'Crédito') }}"
            },
            {
              "name": "URL PDF",
              "value": "=### PDF\n{{ $('IF PDF').item.json.FileUrl }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6b5cba54-e9fe-4f2d-8493-0b7d5e68d64a",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5200,
        2680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5e944630-9f07-40da-915e-bb4cfdeda30c",
              "name": "api",
              "value": "={{ $('Webhook').item.json.body.tipo_ehmconsultas }}",
              "type": "string"
            },
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Tipo Consulta",
              "value": "Consulta Serasa + SCPC Boa Vista + Protestos + Dados + Resumo IA (3 créditos)",
              "type": "string"
            },
            {
              "id": "ac5a7a11-a016-4827-a7ae-88a6490e25ec",
              "name": "URL Consulta Padrão",
              "value": "-",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": 3,
              "type": "number"
            },
            {
              "id": "c73091bc-7366-4591-a659-e5f3c90fc3e5",
              "name": "Prompt Resumo IA",
              "value": "=Você receberá dados financeiros e de pendências relacionadas a um CPF ou CNPJ, incluindo informações como dívidas, protestos, status de crédito e score. Sua tarefa é organizar essas informações de maneira clara e objetiva, estruturando-as em seções e terminando com um breve resumo da situação financeira da pessoa física ou jurídica.\n\nInstruções para a Estrutura e Redação:\nEstrutura dos Dados:\nInicie apresentando as principais informações do CPF ou CNPJ, como nome, data de nascimento, nome da mãe e situação na Receita Federal, se disponível.\nCrie uma seção que apresente, de forma resumida, todas as pendências financeiras, dívidas e protestos identificados.\nApresente o score de crédito e a probabilidade de inadimplência, se forem disponibilizados.\n\nResumo da Situação Financeira:\nElabore um parágrafo resumindo a situação financeira geral do CPF ou CNPJ.\nUse uma linguagem neutra e clara, apontando os riscos de crédito, quantidade de dívidas ou protestos e qualquer outra informação relevante que possa impactar a análise do perfil financeiro.\n\nObservações Importantes:\nNÃO exiba ou informe nenhum dado de contato, incluindo telefones, endereços ou e-mails.\nNÃO invente dados que não foram explicitamente fornecidos.\nSiga rigorosamente as normas de proteção de dados pessoais (LGPD), respeitando a privacidade do consultado.\n\nSegue abaixo um breve exemplo de resumo\n\"### Resumo da Situação Financeira\nRafael dos Santos Nogueira apresenta um histórico financeiro com múltiplas pendências, incluindo dívidas com instituições educacionais e um protesto registrado. O total das pendências varia, mas a principal dívida se destaca no valor de R$ 1.467,62. Essas ocorrências podem impactar negativamente seu acesso ao crédito. A situação atual sugere um certo risco de inadimplência e é recomendável que Rafael busque regularizar suas pendências para evitar complicações financeiras futuras.\"\n\nFaça um breve resumo com no máximo 700 caracteres de forma simples explicando a situação financeira utilizando todas as informações fornecidas. Não ignore nenhum dado. No resumo você não precisa escrever ou listar todas as pendências. Apenas resumir com um total e quantidade dos titulos abaixo.\nO titulo do resumo precisa ser exatamente \"### RESUMO DA SITUAÇÃO FINANCEIRA\" (EM LETRAS MAIÚSCULAS)\nUma observação. O titulo dos menus estão entre ##\nRetorne apenas os dados a partir de \"## RESUMO DA SITUAÇÃO FINANCEIRA\"\n\nAtenção, todos os dados e informações acima serve exclusivamente como exemplo.\nUtilize somente os dados abaixo para formatar o resumo:",
              "type": "string"
            },
            {
              "id": "7d6071af-8961-4ac5-8057-a43cc10be521",
              "name": "Prompt PDF",
              "value": "=Objetivo: Formatar os dados da consulta de crédito de forma estruturada e organizada, seguindo o modelo de análise de crédito do Serasa, retornando exclusivamente um código HTML.\nInstruções:\n* Retornar apenas o HTML, sem nenhum outro texto no output.\n* Seguir a estrutura de tabelas para organizar os dados.\n* Usar fontes de até 11px para informações dentro das tabelas.\n* Remover o título <h1>, mas adicionar duas quebras de linha (<br><br>) após a logo para espaçamento.\n* Não alterar o campo \"URL-LOGO\", pois ele será substituído dinamicamente.\n* Adicionar \"Resumo através de IA\" no final, com um resumo dos dados recebidos bem básico sem apresentar muitos os valores.\n* Incluir um rodapé com informações de confidencialidade e LGPD, usando fonte de 9px e alinhado à esquerda.\n* Nunca utilizar a expressão \"Dados do Cotista\", apenas \"Dados\".\nFormato esperado:\n* HTML bem estruturado, com seções claras.\n* Uso de <div> para blocos de informações e <table> para dados tabulares.\n* Listas <ul> para e-mails, telefones e parentes.\n* Footer fixo no final do relatório.\n* Caso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\n* É obrigatório que todas as informações fornecidas abaixo conste no HTML.\n* Se tiver \"_Sem pendências registradas._\", \"_Sem pendências._\" ou algo que comece e termine com \"_\", remova o \"_\".\n* Se o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\n* Se não existir nenhum email, não adicione no html Email\n* Se não existir nenhum telefone, não adicione no html Telefone\n* Se não existir nenhum Possíveis Parentes, não adicione no html Possíveis Parentes\n* Se email estiver vazio ou não existir, não crie no html <strong>Email:</strong>\n* Se telefone estiver vazio ou não existir, não crie no html <strong>Telefone:</strong>\n\nAdicione um texto no final com os dados recebidos de \"RESUMO ATRAVÉS DE IA\"\"\n\nAdicione também um rodapé na página com fonte tamanho 9 alinhado a esquerda da página com os seguintes dados:\n\"INFORMAÇÕES IMPORTANTES\nESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO , RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.\n\nMINUTA DE DECLARAÇÃO LGPD\nDECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.\"\n\nHTML DE EXEMPLO 1:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 12px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: center; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\">\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Identificação</h2>\n            <p><span class=\"info\">Nome:</span> ANDERSON DOS SANTOS JORGE</p>\n            <p><span class=\"info\">CPF:</span> 326.762.778-80</p>\n            <p><span class=\"info\">Data de Nascimento:</span> 25/06/1983</p>\n            <p><span class=\"info\">Nome da Mãe:</span> MARIA JUSILENE DOS SANTOS JORGE</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Contato</h2>\n            <ul>\n                <li>andersonsjorge@bol.com.br</li>\n                <li>ambientesimoveis@gmail.com</li>\n                <li>at-estevam@bol.com.br</li>\n                <li>contato@ambientesimoveis.com.br</li>\n                <li>andersondjorge@hotmail.com</li>\n            </ul>\n            <h2 class=\"section-header\">Telefones</h2>\n            <ul>\n                <li>5517991921913</li>\n                <li>1732515124</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Possíveis Parentes</h2>\n            <ul>\n                <li>REGIANE DOS SANTOS JORGE - IRMÃ(O)</li>\n                <li>ALEX DOS SANTOS JORGE - IRMÃO(O)</li>\n                <li>MARIA JUSILENE DOS SANTOS JORGE - MÃE</li>\n                <li>CRISTIANE DOS SANTOS COSTA - IRMÃ(O)</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Contrato</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>13/12/2021</td>\n                    <td>0001872649932</td>\n                    <td>R-CRED FINAN</td>\n                    <td>R$3.077,24</td>\n                </tr>\n                <tr>\n                    <td>12/09/2021</td>\n                    <td>015000229668</td>\n                    <td>R-CRED FINAN</td>\n                    <td>R$19.504,00</td>\n                </tr>\n                <tr>\n                    <td>10/12/2023</td>\n                    <td>237106</td>\n                    <td>R-EMPRES CTA</td>\n                    <td>R$156,06</td>\n                </tr>\n                <tr>\n                    <td>14/12/2022</td>\n                    <td>441388001</td>\n                    <td>R-OUTRAS OPE</td>\n                    <td>R$124,94</td>\n                </tr>\n                <tr>\n                    <td>05/03/2022</td>\n                    <td>10327001</td>\n                    <td>R-OUTRAS OPE</td>\n                    <td>R$124,94</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">SCPC</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Cidade</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>10/04/2023</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>BANCO C6 SA</td>\n                    <td>R$ 990,76</td>\n                </tr>\n                <tr>\n                    <td>31/12/2022</td>\n                    <td>UBATUBA</td>\n                    <td>SP-UTB/ESCOLA CRIAR-TE</td>\n                    <td>R$ 7.126,82</td>\n                </tr>\n                <tr>\n                    <td>17/06/2022</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>NU FINANCEIRA S/A</td>\n                    <td>R$ 640,68</td>\n                </tr>\n                <tr>\n                    <td>13/12/2021</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>ITAU UNIBANCO S/A</td>\n                    <td>R$ 3.077,24</td>\n                </tr>\n                <tr>\n                    <td>08/12/2021</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>LOJAS CEM/MATRIZ</td>\n                    <td>R$ 4.038,30</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Protestos</h2>\n            <table>\n                <tr>\n                    <th>Cidade</th>\n                    <th>Data</th>\n                    <th>Cartório</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>24/10/2024</td>\n                    <td>1</td>\n                    <td>R$728,15</td>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>02/04/2024</td>\n                    <td>1</td>\n                    <td>R$1.346,65</td>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>02/04/2024</td>\n                    <td>1</td>\n                    <td>R$846,81</td>\n                </tr>\n                <tr>\n                    <td>UBATUBA - SP</td>\n                    <td>21/12/2023</td>\n                    <td>1</td>\n                    <td>R$1.889,38</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>ANDERSON DOS SANTOS JORGE não apresenta pendências registradas em PENDÊNCIAS, SCPC ou PROTESTOS. Isso indica uma situação financeira sem restrições atuais, comprovando um histórico de crédito sem problemas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nHTML DE EXEMPLO 2:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 12px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\"><br><br>\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Nome:</span> CASSIUS ABRAHAN MENDES HADDAD</p>\n            <p><span class=\"info\">CPF:</span> 21991463839</p>\n            <p><span class=\"info\">Data de Nascimento:</span> 1982-06-02</p>\n            <p><span class=\"info\">Nome da Mãe:</span> BERNADETE MENDES HADDAD</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">E-mails</h2>\n            <ul>\n                <li>cassius.abrahan@superig.com.br</li>\n                <li>cahad@terra.com.br</li>\n                <li>carrijocalcados@terra.com.br</li>\n                <li>teletim1@terra.com.br</li>\n                <li>unidosporlimeira@gmail.com</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Possíveis Parentes</h2>\n            <ul>\n                <li>VANESSA HADDAD SCHERRER - IRMA(O)</li>\n                <li>DULCE PINHO MENDES DA SILVA - AVO</li>\n                <li>BERNADETE MENDES HADDAD - MAE</li>\n                <li>ROSANGELA APARECIDA MENDES DA SILVA - TIA(O)</li>\n                <li>LUIZ ROBERTO MENDES DA SILVA - TIA(O)</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">SCPC</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Protestos</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>Cassius Abrahan Mendes Haddad apresenta um histórico financeiro com apenas um score de crédito de 534, indicando uma chance de 59,25% de pagar compromissos financeiros em 6 meses. Apesar de não ter pendências registradas nos cadastros de inadimplentes (SCPC ou PROTESTOS), é importante lembrar que o score de crédito é apenas um indicador da situação financeira. É recomendável que Cassius busque manter um histórico financeiro saudável para evitar complicações futuras.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nHTML DE EXEMPLO 3:\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #eef2f7; }\n        .container { max-width: 900px; margin: auto; background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }\n        .banner { width: 100%; height: auto; display: block; margin-bottom: 20px; }\n        .section { margin-bottom: 20px; padding: 20px; border-radius: 8px; background: #f9f9f9; border-left: 5px solid #181d3e; }\n        .section-header { font-size: 18px; font-weight: bold; color: #181d3e; margin-bottom: 15px; }\n        p, ul { margin: 5px 0; line-height: 1.6; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; }\n        th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }\n        th { background-color: #181d3e; color: #fff; }\n        .highlight { font-weight: bold; color: #dc3545; }\n        .info { font-weight: bold; color: #495057; }\n        .score-box { text-align: center; padding: 20px; background: #e9ecef; border-radius: 8px; font-size: 20px; font-weight: bold; color: #28a745; }\n        .footer { font-size: 9px; padding: 10px; background: #f1f1f1; border-radius: 8px; text-align: left; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\"><br><br>\n        \n        <div class=\"section\">\n            <h2 class=\"section-header\">Dados</h2>\n            <p><span class=\"info\">Nome:</span> ILIELSON DE LIMA PONTES FILHO</p>\n            <p><span class=\"info\">CPF:</span> 02401717218</p>\n            <p><span class=\"info\">Data de Nascimento:</span> 1993-01-21</p>\n            <p><span class=\"info\">Nome da Mãe:</span> ELZANIRA DA SILVA TENORIO</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">E-mails</h2>\n            <ul>\n                <li>ilielson220@hotmail.com</li>\n                <li>ilielson210@gmail.com</li>\n            </ul>\n            <h2 class=\"section-header\">Telefones</h2>\n            <ul>\n                <li>5517991921913</li>\n                <li>1732515124</li>\n            </ul>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Pendências</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Cidade</th>\n                    <th>Origem</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>08/01/2025</td>\n                    <td>SCPC SAO PAULO</td>\n                    <td>NU FINANCEIRA S/A</td>\n                    <td>R$ 135,31</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">SCPC</h2>\n            <table>\n                <tr>\n                    <th>Data</th>\n                    <th>Informante</th>\n                    <th>Valor</th>\n                </tr>\n                <tr>\n                    <td>08/01/2025</td>\n                    <td>NU FINANCEIRA S/A</td>\n                    <td>R$ 135,31</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Protestos</h2>\n            <p>Sem pendências registradas.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Resumo através de IA</h2>\n            <p>ILIELSON DE LIMA PONTES FILHO apresenta um histórico financeiro com uma pendência registrada, com um total de R$ 135,31. Embora não existam protestos, a presença de uma dívida pode impactar negativamente seu acesso ao crédito. Além disso, o score de crédito de 2 indica que há uma probabilidade de 99 em 100 de que o consumidor apresente débitos nos próximos 6 meses. É recomendável que Ilieelson busque regularizar suas pendências para evitar complicações financeiras futuras.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2 class=\"section-header\">Sugestões para Regularização em caso de Débitos</h2>\n            <ul>\n                <li>📞 <strong>Negociar débitos:</strong> Contate os credores para verificar opções de parcelamento.</li>\n                <li>🔍 <strong>Acompanhar o CPF:</strong> Mantenha um monitoramento constante para evitar novas restrições.</li>\n                <li>📑 <strong>Remover protestos quitados:</strong> Após o pagamento, solicite a retirada do registro.</li>\n                <li>📝 <strong>Realizar pagamentos:</strong> Aumente a frequência e os valores dos pagamentos para reduzir a dívida.</li>\n            </ul>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>INFORMAÇÕES IMPORTANTES:</strong> ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br></p>\n            <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong> DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.</p>\n        </div>\n        \n        <div class=\"footer-link\" style=\"font-size: 9px; margin-top: 5px; text-align: center;\">\n            <a href=\"https://app.unisistemas.tech/Inicio\" target=\"_blank\">Acesse sua consulta em https://app.unisistemas.tech/Inicio</a>\n        </div>\n    </div>\n</body>\n</html>\n\nImportante, escreva \"Inicio HTML\" e \"Fim HTML\" no inicio e no final. Somente isso. Não escreva mais nenhum dados fora do código.\nQuando for exatamente começar o código HTML, escreva da seguinte maneira: Inicio HTML\\n<!DOCTYPE html>\\n\nEscreva no código html todas as informações fornecidas. Não ignore nenhum dado.\nUma observação. O titulo dos menus entrão entre <>\nCaso a frase comece e termine com \"_\", pode remover o \"_\"\nSempre formate no html utilizando TODOS os dados fornecidos abaixo como informações, valores, dados, tudo sem exceção.\nVocê vai adicionar na formatação somente os dados existentes e informados abaixo.\nImportante. Se o dados como telefone, email ou parentes não estiver disponível e não for fornecido, você não precisa adicionar a \"div class\" no html.\nAdicione \"Sugestões para Regularização em caso de Débitos\"\nSempre adicione <br> entre uma \"div class\" e outra.\nÉ obrigatório que pendências, scpc, débitos, refin e pefin e protestos sejam sempre em tabela.\nSiga fielmente o layout do exemplo de html acima.\nCaso a frase inicie e termine com _ pode remover. Ex: _Sem pendências registradas._ fica Sem pendências registradas.\nSe o dados como telefone, email ou parentes não existir nos dados para serem formatados, não crie a div class=\"section\". Você vai criar somente se existir informações.\nÉ importante que você adicione no HTML somente os dados fornecidos abaixo que são para formatar. Os dados dos HTML de exemplo servem somente para seguir o layout do HTML (Nunca utilize as informações de exemplo ou invente dados para adicionar no html formatado).\nÉ obrigatório que todas as informações fornecidas abaixo conste no HTML.\nRemova todos os _ do html exceto de email.\nImportante, você vai formatar em pendências, somente o que está em pendências, você vai formatar em scpc, somente o que está em scpc e vai formatar em protestos, somente o que está em protestos. E assim por diante.\nSe durante a formatação formar criar >PENDÊNCIAS< crie com somente a primeira letra maiúscula >Pendências<\n\nAtenção, faça \"Resumo através de IA\" levando em consideração todos os dados financeiros informados abaixo como Pendências, SCPC e Protestos.\n\nAtenção, todos os dados e informações acima server exclusivamente como exemplo para você estruturar o HTML.\nAs informações na formatação do HTML precisam estar na ordem dos dados para formatar.\nUtilize somente os dados abaixo para formatar o HTML:",
              "type": "string"
            },
            {
              "id": "b57420b6-0cfc-48dc-a086-e7387e7d3fcf",
              "name": "URL-LOGO",
              "value": "=https://i.imgur.com/g0gImpK.jpeg",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cf7c8a7b-9214-4bde-a3a7-5435b0e93e8d",
      "name": "Dados N8N1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -9500,
        800
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f18fead7-0dcd-4c83-8d7e-ac56fd3f604d",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -3320,
        1580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bfac3c94-a23c-4008-aa6c-dd5fcb21c8e6",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "dbe1076e-9565-4795-8cc1-a69bb27e0b0c",
              "leftValue": "={{ $json.tipo }}",
              "rightValue": "CPF",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e799cf10-6190-4510-9d72-63bccd5b872d",
      "name": "If15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -8640,
        800
      ]
    },
    {
      "parameters": {
        "content": "## CPF / CNPJ inválido",
        "height": 876.7623384092028,
        "width": 456.60627452732734,
        "color": 3
      },
      "id": "728c7033-0dab-4dc2-b175-9e605cf4c8d5",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8900,
        740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false; // Verifica se possui 11 dígitos e não é uma sequência repetida\n\n    let soma = 0, resto;\n\n    // Validação do primeiro dígito verificador\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    // Validação do segundo dígito verificador\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false; // Verifica se possui 14 dígitos e não é uma sequência repetida\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o CPF ou CNPJ diretamente do campo 'body.CPF' ou 'body.CNPJ' dentro do 'Webhook'\nconst numero = ($('Webhook').item.json.body.CPF || $('Webhook').item.json.body.CNPJ).replace(/[^\\d]+/g, '');\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido // Retorna true ou false\n        }\n    }\n];\n"
      },
      "id": "6978c3a2-9bab-48f9-bc64-5e2b8e55cf3d",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -8840,
        800
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ee09ad09-90ed-481e-891a-4307b8b33a4d",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -8620,
        1420
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\nAtenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente.\n\nObs: Digite apenas números, sem pontos, traços ou espaços."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "c413ff99-b0de-406d-8154-15de284a01c0",
      "name": "HTTP Request7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -8820,
        1420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "be8a47c2-3e82-4246-94f6-f3a387152eee",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -8820,
        1220
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente."
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "Tipo consulta",
              "value": "={{ $('Webhook').item.json.body['Tipo consulta'] }}"
            },
            {
              "name": "Pendências",
              "value": "=Erro"
            },
            {
              "name": "Protestos",
              "value": "=Erro"
            },
            {
              "name": "SCPC",
              "value": "=Erro"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "b1f012e4-9c59-402d-8d92-8be89e1d1154",
      "name": "Erro1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -8640,
        1200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\n\n## PDF\n{{ $('IF PDF').item.json.FileUrl }}\n\n\n______________________________________________________________\n\n\n\n{{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            },
            {
              "name": "URL PDF",
              "value": "="
            }
          ]
        },
        "options": {}
      },
      "id": "a3d5632f-2a15-4ff9-b999-c020389d77b2",
      "name": "HTTP Request5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5200,
        2960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "42898e4b-29f3-4d2c-adc0-369fbc7f2648",
      "name": "If16",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5000,
        2700
      ]
    },
    {
      "parameters": {
        "content": "## BASE 44",
        "height": 222,
        "width": 635,
        "color": 2
      },
      "id": "1bf08226-e4b5-430c-94e0-1c302bf88e74",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4800,
        2120
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "727881d3-5c77-4e83-935c-898ef7340f5a",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        5600,
        2700
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.redequeroimoveis.com/webhook/dividas-cpf_3-2",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "CPF",
              "value": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            },
            {
              "name": "URL_LogoPDF",
              "value": "={{ $('Webhook').item.json.body.URL_LogoPDF }}"
            },
            {
              "name": " Tipo consulta",
              "value": "Completa"
            },
            {
              "name": "Prompt Resumo IA",
              "value": "={{ $('Dados N8N1').item.json['Prompt Resumo IA'] }}"
            },
            {
              "name": "Prompt PDF",
              "value": "={{ $('Dados N8N1').item.json['Prompt PDF'] }}"
            },
            {
              "name": "URL-LOGO",
              "value": "={{ $('Dados N8N1').item.json['URL-LOGO'] }}"
            },
            {
              "name": "RequestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "Informações",
              "value": "={{ $('Webhook').item.json.body[\"Informações\"] }}"
            }
          ]
        },
        "options": {
          "timeout": 360000
        }
      },
      "id": "839cff91-f6b5-4ded-ad3e-37df8f54183f",
      "name": "HTTP Request19",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -3480,
        1580
      ],
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## CONTINUAÇÃO",
        "height": 251.51571340885795,
        "width": 571.376359106563,
        "color": 6
      },
      "id": "1ea9aa00-5ee2-4d0c-8c63-e1b794f5138a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3740,
        1520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "6c35d14f-6ff2-4330-aa1d-abed7cdcb3b5",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "806adf22-a761-4b1e-a79e-61701115d3b1",
      "name": "If9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1740,
        3280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "ecb5fcf0-39ab-494a-ac37-59cd15ab4d68",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c0994972-0b58-46b9-b7dc-42c98a813004",
      "name": "se typebot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -8820,
        1020
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "75148531-e203-46c4-9942-9f532207c1d8",
      "name": "typebot",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -8460,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c61c8f94-b0eb-4831-8453-692b4c07afec",
      "name": "se typebot1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4860,
        2460
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Informações",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "Tipo consulta",
              "value": "={{ $('Webhook').item.json.body['Tipo consulta'] }}"
            },
            {
              "name": "Pendências",
              "value": "=Erro"
            },
            {
              "name": "Protestos",
              "value": "=Erro"
            },
            {
              "name": "SCPC",
              "value": "=Erro"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            },
            {
              "name": "Cadin",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "fd886239-d11b-49bf-8f5c-05641d7a05b6",
      "name": "Erro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7440,
        2780
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "280cae31-ace3-4e06-9e87-7014907e069d",
      "name": "HTTP Request6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7660,
        2960
      ]
    },
    {
      "parameters": {
        "content": "## ERRO CONSULTA",
        "height": 647.1423012728503,
        "width": 455.90538040659635,
        "color": 3
      },
      "id": "c95e7509-960e-4164-8e45-6ac96131bd17",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -7720,
        2500
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8bce571f-1427-47ee-aec4-ff24dc7bed76",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -7640,
        1920
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtém a data e hora do campo\nconst currentDate = new Date($('Date & Time1').item.json.currentDate);\n\n// Converte para o horário de São Paulo (GMT-3)\nconst options = { timeZone: 'America/Sao_Paulo', hour12: false };\nconst brazilianTime = new Date(currentDate.toLocaleString('en-US', options));\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado) e a hora\nconst dayOfWeek = brazilianTime.getDay(); // 0=Domingo, 1=Segunda, ..., 6=Sábado\nconst hour = brazilianTime.getHours();\n\n// Verifica se a hora está entre 08:00 e 18:00 e se o dia é útil (segunda a sexta)\nif (hour >= 9 && hour < 18 && dayOfWeek >= 1 && dayOfWeek <= 5) {\n    return {\n        json: {\n            status: 'Horário funcionamento'\n        }\n    };\n} else {\n    return {\n        json: {\n            status: 'Fora do horário'\n        }\n    };\n}\n"
      },
      "id": "f2ccec0e-2cab-46b8-89bb-9aeeb0e35168",
      "name": "Code Horário funcionamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7460,
        1920
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "=⚠️ Erro no retorno do provedor\n\nAtenção, tente novamente através de outra opção disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f59f481c-4116-4d02-ba29-97ba93ba4e0b",
      "name": "Horário funcionamento1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -7460,
        2080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "8ec90439-29cc-4f7e-9318-906539cd9a2d",
              "leftValue": "={{ $('If10').item.json.status }}",
              "rightValue": "dentro",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f17969b4-c5de-4e26-8e17-53120b401434",
      "name": "Verificar Horário funcionamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -7640,
        2080
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "=⚠️ Opção fora do horário de funcionamento.\nEsta opção está disponível apenas das 08h00 às 18h00.\nEnquanto isso, você pode utilizar uma das outras opções disponíveis no sistema.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "16bffbce-b532-4534-b84c-1defa89e2cdb",
      "name": "Fora do horário",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -7640,
        2220
      ]
    },
    {
      "parameters": {
        "content": "## Horário funcionamento",
        "height": 578.2747827033502,
        "width": 397.97803245596407,
        "color": 3
      },
      "id": "7c91ea2f-7da6-4d5a-908b-a4e333c1d400",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -7700,
        1840
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "10febb97-ccb4-42a5-99ad-d145d0bf7dbf",
      "name": "Respond to Webhook4",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -7440,
        2960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b0ec88c0-ac14-4d34-973a-0c959b5977a4",
      "name": "If21",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -7660,
        2800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ae16c52d-8a0d-4204-ae93-cd970099d58b",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "14234c56-5983-4a98-9a7c-387b0e66d6dc",
      "name": "se typebot2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -7700,
        2500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "={{ $('se typebot2').item.json['Consulta erro'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "72381a12-9ac0-46db-858e-48edcad7e931",
      "name": "typebot2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -7280,
        2580
      ]
    },
    {
      "parameters": {},
      "id": "e1b33378-7549-4658-ae75-0833082ebae9",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -3660,
        1580
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "49e85b80-0532-46a3-8a58-2528501bf09e",
              "name": "CONSULTA _ TEXTO",
              "value": "=## INFORMAÇÕES\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/_ /g, '_') }}\n\n--------------------------------------------------------------\n\n## PENDÊNCIAS\n{{ $('Aggregate6').item.json.Consulta[1].Pendencias.replace(/_ /g, '_') }}\n--------------------------------------------------------------\n\n## SCPC\n{{ $('Aggregate6').item.json.Consulta[2].SCPC.replace(/_ /g, '_') }}\n--------------------------------------------------------------\n\n## PROTESTOS\n{{ $('Aggregate6').item.json.Consulta[3].Protesto.replace(/_ /g, '_') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3d53d3b0-ce5b-4096-afdb-bd8c25ab12f4",
      "name": "CONSULTA _ TEXTO",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2020,
        3260
      ]
    },
    {
      "parameters": {},
      "id": "118b2deb-e79d-47ca-bb4c-0b5bc539f974",
      "name": "Limit3",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        3540,
        3480
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/dividas/multi/{{ $('Dados N8N1').item.json.api }}/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "40af16fd-fe72-411a-8dcc-8fbcd259474b",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -5840,
        1040
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "3b63b747-7ef5-42f8-bc10-4158797079a2",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1360,
        1280
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "divida-cpf_1",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "ee129e31-fdb1-4d1a-8b58-eee7127be8e8",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -9720,
        800
      ],
      "webhookId": "2de5a504-c710-4d24-a385-8dc4af32c47f"
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/dividas/multi/cpf_pro/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 80000
        }
      },
      "id": "3eb8769c-34df-4a26-94ba-12296ad15657",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -5560,
        1220
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b9fceadd-0e68-49ef-91f6-a7c1a02ccc24",
              "leftValue": "={{ $json.data.Nome }}",
              "rightValue": "200",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "1fcc84cf-06c3-4ab7-8a22-48251ba20709",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "101c8311-bbf8-466a-8d98-25a0d7346c07",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -5020,
        1040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b9fceadd-0e68-49ef-91f6-a7c1a02ccc24",
              "leftValue": "={{ $json.data.Nome }}",
              "rightValue": "200",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "1fcc84cf-06c3-4ab7-8a22-48251ba20709",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2a206f05-233d-476c-9275-be450dd4c252",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -5020,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c154cada-a3ee-4a35-aedd-3cc3c7aefe37",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "timeout",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "b00ef0b3-03d2-456b-818a-518906598c18",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "501",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "f680a240-dea5-4feb-97be-56488eada75c",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "connect ETIMEDOUT",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5360,
        1040
      ],
      "id": "3c5a519b-7203-415a-a083-6d0f284a22a5",
      "name": "If2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c154cada-a3ee-4a35-aedd-3cc3c7aefe37",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "timeout",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "b00ef0b3-03d2-456b-818a-518906598c18",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "501",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5240,
        1220
      ],
      "id": "f3bced23-6cce-44b1-9fca-4f03810798af",
      "name": "If7"
    },
    {
      "parameters": {},
      "id": "9fc33b0e-f8c1-4c0a-80ee-e38a3bc18659",
      "name": "Merge60",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1340,
        2000
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "SCPC",
              "stringValue": "=_Sem pendências registradas._\n"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "f04f96bf-1539-40de-8337-4195a32a3cea",
      "name": "SCPC - 49",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        300,
        1780
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "SCPC",
              "value": "={{ $('If').item.json.data.SCPC }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "578b3826-01ad-485a-a8ad-24094547804b",
      "name": "Mapa - SCPC2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -500,
        1780
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "=_Sem pendências registradas._\n"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "8b34d674-56e5-41a0-ae2a-977829bd121a",
      "name": "Protesto - 49",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        340,
        2580
      ]
    },
    {
      "parameters": {},
      "id": "c0a77ac7-0ac5-4b0d-9400-19bf3f5e7304",
      "name": "Merge78",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1320,
        2820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Protesto }}",
              "rightValue": "Data",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "89b02bf0-756c-4bde-9c6f-0f8a8ce36dd3",
      "name": "SE Protesto - 50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        100,
        2580
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Protesto",
              "stringValue": "={{ $json.Protesto }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "d0b425f7-384e-4d51-82ae-2d9775d4f10a",
      "name": "Protesto - 52",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        100,
        2820
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dcebe609-25a3-4e5d-82e6-62075b92af61",
              "name": "Protesto",
              "value": "={{ $('If').item.json.data.Protesto }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "48030a44-b97f-4d77-ba80-ac25b8c0fcef",
      "name": "Mapa - Protesto2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -500,
        2580
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "SCPC",
              "stringValue": "={{ $json.SCPC }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "5217d4f0-ad5d-490a-9922-3143aae44a86",
      "name": "SCPC - 53",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        100,
        2020
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.SCPC }}",
              "rightValue": "Data",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a1606331-02c1-4cfa-82d8-e04e4f34e41a",
      "name": "SE SCPC - 50",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        100,
        1780
      ]
    },
    {
      "parameters": {
        "jsCode": "// Captura os dados do SCPC\nconst scpc = $('If').item.json.data['SCPC'];\n\n// Limita a 15 ocorrências\nconst scpcLimitado = scpc.slice(0, 15);\n\n// Formata os dados no formato desejado\nconst resultado = scpcLimitado.map(item => {\n  return `*Data:* _${item['Dt Ocorr']}_\\n*Cidade:* _${item['Cidade']}_\\n*Origem:* _${item['Nome']}_\\n*Valor:* _${item['Vr Dívida']}_\\n`;\n});\n\n// Junta todas as ocorrências formatadas em uma única string\nconst textoFinal = resultado.join('\\n');\n\n// Retorna o texto como parte do objeto json dentro de um array\nreturn [{ json: { texto: textoFinal } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -300,
        1780
      ],
      "id": "790c9cff-f4ef-4256-81fe-645634598e7f",
      "name": "Code5",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "60bc819d-3591-4bdb-bd62-300cc7e6a05b",
              "name": "SCPC",
              "value": "={{ $json.texto }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -100,
        1780
      ],
      "id": "2906196c-fc67-4ca8-abd5-4221d15c0770",
      "name": "Edit Fields2",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Captura os dados do Protesto\nconst protestos = $('If').item.json.data['Protesto'];\n\n// Limita a 15 protestos\nconst protestosLimitados = protestos.slice(0, 15);\n\n// Formata os protestos no formato desejado\nconst resultado = protestosLimitados.map(protesto => {\n  return `*Cidade:* _${protesto['Cidade']} - ${protesto['UF']}_\\n*Data:* _${protesto['Data']}_\\n*Cartório:* _${protesto['Cartório']}_\\n*Valor:* _R$${protesto['Valor Protesto']}_\\n`;\n});\n\n// Junta todos os protestos formatados em uma única string\nconst textoFinal = resultado.join('\\n');\n\n// Retorna o texto como parte do objeto json dentro de um array\nreturn [{ json: { texto: textoFinal } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -300,
        2580
      ],
      "id": "ad17c9c4-955a-4f93-8b09-0c6cab673602",
      "name": "Code6",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "60bc819d-3591-4bdb-bd62-300cc7e6a05b",
              "name": "Protesto",
              "value": "={{ $json.texto }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -100,
        2580
      ],
      "id": "db4a568e-b17c-4ea0-bad8-1f88754d2808",
      "name": "Edit Fields3",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3dc1efe0-4397-4b12-89e3-b97c36914b36",
              "name": "Pendencias",
              "value": "={{ $json.data['REFIN/PEFIN'] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "b98c3172-603d-43ff-ac93-b3ea3b6e8222",
      "name": "Mapa - Pendencias2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -860,
        1100
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias",
              "stringValue": "=_Sem pendências registradas._\n"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "6c785c42-76ed-401e-8f02-b9ceeb3adac8",
      "name": "Pendencias - 83",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        300,
        1280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "7eef6126-408a-479b-8d38-716485b8898f",
              "leftValue": "={{ $json.Pendencias }}",
              "rightValue": "Data",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6e9d5a26-6a3a-4011-9cf8-b51f0d186bb2",
      "name": "SE Pendencias - 82",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        100,
        1280
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Pendencias",
              "stringValue": "={{ $json.Pendencias }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "bffbac6b-495d-420d-87e6-2dd59dd4c6ff",
      "name": "Pendencias - 87",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.1,
      "position": [
        100,
        1520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "60bc819d-3591-4bdb-bd62-300cc7e6a05b",
              "name": "Pendencias",
              "value": "={{ $json.texto }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -100,
        1280
      ],
      "id": "deca183e-8d62-458e-b066-ea10f01f1245",
      "name": "Edit Fields1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Captura os dados das pendências\nconst pendencias = $('Mapa - Pendencias2').item.json.Pendencias;\n\n// Verifica se há pendências antes de continuar\nif (!pendencias || pendencias.length === 0) {\n  return [{ json: { texto: \"Nenhuma pendência encontrada.\" } }];\n}\n\n// Limita a 15 pendências\nconst pendenciasLimitadas = pendencias.slice(0, 15);\n\n// Formata as pendências no formato desejado\nconst resultado = pendenciasLimitadas.map(pendencia => {\n  return `*Data:* _${pendencia['Dt Ocorr']}_\\n*Contrato:* _${pendencia['Contrato']}_\\n*Origem:* _${pendencia['RazaoSocial']}_\\n*Valor:* _R$${pendencia['Vr Dívida'].replace('.', ',')}_\\n`;\n});\n\n// Junta todas as pendências formatadas em uma única string\nconst textoFinal = resultado.join('\\n');\n\n// Retorna o texto como parte do objeto json dentro de um array\nreturn [{ json: { texto: textoFinal } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -300,
        1280
      ],
      "id": "a8618f96-e9c7-4f1c-a87b-84eeb89eaf0a",
      "name": "Code7",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8e5d1e6-feda-4373-8e50-936f54a48786",
              "name": "Créditos",
              "value": "=3",
              "type": "string"
            },
            {
              "id": "e83c4952-cefe-4e2e-accf-865e014c5c20",
              "name": "Opção Consulta",
              "value": "CPF 3",
              "type": "string"
            },
            {
              "id": "b465d432-f3ad-4b56-8e49-81a06ca7db1a",
              "name": "Tipo Consulta",
              "value": "Dividas CPF 3-1 (ehmconsultas - dividas/multi/cpf)",
              "type": "string"
            },
            {
              "id": "ccbdfb0b-45f1-40b2-b095-fcfefa698376",
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}",
              "type": "string"
            },
            {
              "id": "41bac44d-098a-4889-ad47-0138194c7d6b",
              "name": "Dado consultado",
              "value": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
              "type": "string"
            },
            {
              "id": "5f0eaada-894e-45cf-8c51-3f1a65fb785e",
              "name": "Data",
              "value": "={{ $('Code4').item.json.data }}",
              "type": "string"
            },
            {
              "id": "f34f0ad5-5beb-4941-a1be-d63c2f099f22",
              "name": "Hora",
              "value": "={{ $('Code4').item.json.hora }}",
              "type": "string"
            },
            {
              "id": "80f689ee-d4ec-4b52-ad1d-e1e710f72420",
              "name": "=URL PDF",
              "value": "={{ $('IF PDF').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "7c7fe4c7-5f91-4a5c-af93-3104c80aab4c",
              "name": "Origem Consulta",
              "value": "={{ $('Webhook').item.json.body.Webhook }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4680,
        3660
      ],
      "id": "3cacbe6c-756f-484c-acd7-8a75783a6fcb",
      "name": "Dados Histórico"
    },
    {
      "parameters": {
        "jsCode": "const agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [dataStrRaw, horaStr] = agora.split(' ');\nconst dataStr = dataStrRaw.replace(',', '');\n\n// Extrai dia, mês e ano\nconst [dia, mes, ano] = dataStr.split('/');\nconst dataFormatada = `${dia}/${mes}/${ano}`;\n\n// Novo formato ISO (YYYY-MM-DD)\nconst dataISO = `${ano}-${mes}-${dia}`;\n\n// Monta a URL da execução\nconst executionId = $execution.id;\nconst workflowId = $workflow.id;\nconst baseUrl = \"https://n8n.redequeroimoveis.com\";\nconst executionUrl = `${baseUrl}/workflow/${workflowId}/executions/${executionId}`;\n\n// Retorna tudo em um único objeto\nreturn [{\n  json: {\n    data: dataFormatada,\n    data_iso: dataISO,\n    hora: horaStr,\n    executionUrl: executionUrl\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4460,
        3660
      ],
      "id": "b21363eb-eb72-46dc-87a0-51ff5514262a",
      "name": "Code4"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/16ZEGTsJfXnCWLrypSVLdrLZ_TqGsIDSUaiazS1J6yJk/edit?gid=963807679#gid=963807679",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 963807679,
          "mode": "list",
          "cachedResultName": "Consultas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16ZEGTsJfXnCWLrypSVLdrLZ_TqGsIDSUaiazS1J6yJk/edit#gid=963807679"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Telefone": "={{ $json.Telefone }}",
            "Dado Consultado": "={{ $json[\"Dado consultado\"] }}",
            "Tipo Consulta": "={{ $json['Tipo Consulta'] }}",
            "Créditos": "={{ $json['Créditos'] }}",
            "Data": "={{ $json.Data }}",
            "Hora": "={{ $json.Hora }}",
            "URL PDF": "={{ $json['URL PDF'] }}",
            "Origem Consulta": "={{ $json['Origem Consulta'] }}",
            "Opção Consulta": "={{ $json['Opção Consulta'] }}",
            "exec": "={{ $('Code4').item.json.executionUrl }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Telefone",
              "displayName": "Telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Dado Consultado",
              "displayName": "Dado Consultado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tipo Consulta",
              "displayName": "Tipo Consulta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Créditos",
              "displayName": "Créditos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data",
              "displayName": "Data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Hora",
              "displayName": "Hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "URL PDF",
              "displayName": "URL PDF",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Origem Consulta",
              "displayName": "Origem Consulta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Opção Consulta",
              "displayName": "Opção Consulta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "exec",
              "displayName": "exec",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": " Valor ",
              "displayName": " Valor ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4880,
        3840
      ],
      "id": "98c49d1c-80c9-4d2b-98aa-5f11e20fba34",
      "name": "Google Sheets1",
      "retryOnFail": true,
      "maxTries": 5,
      "disabled": true
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/info/dados/cpf/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "1516339d-0b0f-47e9-9664-9c5c2deb454a",
      "name": "Dados - ehmconsultas1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -4840,
        2260
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const dataNascimentoStr = $('Dados - ehmconsultas1').item.json.DATA.DADOS_PESSOAIS[0].NASCIMENTO;\n\n// Converte a string de data para um objeto Date\nconst dataNascimento = new Date(dataNascimentoStr);\n\n// Obtém a data atual\nconst hoje = new Date();\n\n// Calcula a idade\nlet idade = hoje.getFullYear() - dataNascimento.getFullYear();\nconst mesAtual = hoje.getMonth() + 1;\nconst diaAtual = hoje.getDate();\n\n// Ajusta a idade se ainda não fez aniversário este ano\nif (mesAtual < (dataNascimento.getMonth() + 1) || \n   (mesAtual === (dataNascimento.getMonth() + 1) && diaAtual < dataNascimento.getDate())) {\n    idade--;\n}\n\n// Define se é maior ou menor de idade\nconst status = idade >= 18 ? \"Maior de idade\" : \"Menor de idade\";\n\n// Retorna o resultado no formato do n8n\nreturn [{ idade, status }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4260,
        2260
      ],
      "id": "28930cb4-6919-44d7-8f47-9135e1692474",
      "name": "Code8"
    },
    {
      "parameters": {
        "url": "=https://typebots.minerdapifoda.xyz:8080/api/cpffull?cpf={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 180000
        }
      },
      "id": "74691d74-2987-44fc-9c99-f40b49d4fd6c",
      "name": "minerdapifoda",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -4840,
        2100
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "disabled": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const dataNascimentoStr = $('minerdapifoda').item.json.resultado.DADOS[0].NASC;\n\n// Converte a string de data (DD/MM/YYYY) para um objeto Date\nconst [dia, mes, ano] = dataNascimentoStr.split('/').map(Number);\nconst dataNascimento = new Date(ano, mes - 1, dia);\n\n// Obtém a data atual\nconst hoje = new Date();\n\n// Calcula a idade\nlet idade = hoje.getFullYear() - dataNascimento.getFullYear();\nconst mesAtual = hoje.getMonth() + 1;\nconst diaAtual = hoje.getDate();\n\n// Ajusta a idade se ainda não fez aniversário este ano\nif (mesAtual < mes || (mesAtual === mes && diaAtual < dia)) {\n    idade--;\n}\n\n// Define se é maior ou menor de idade\nconst status = idade >= 18 ? \"Maior de idade\" : \"Menor de idade\";\n\n// Retorna o resultado no formato do n8n\nreturn [{ idade, status }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4260,
        2100
      ],
      "id": "bcd1284c-d2bf-4b4c-a11a-0e8b296fc966",
      "name": "Code11"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "position": [
        -4640,
        2420
      ],
      "typeVersion": 1,
      "id": "c34ca6c3-43af-46b7-adee-ae83874fc457",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "attrkey": "$",
          "explicitRoot": true,
          "mergeAttrs": false
        }
      },
      "name": "XML",
      "type": "n8n-nodes-base.xml",
      "position": [
        -4460,
        2420
      ],
      "typeVersion": 1,
      "id": "7127fe5c-4ae8-43d2-a707-25590b6787df",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=http://confere.link/api/?acao=CONS_CPF&TK=IGGE-FAO-566021-PUN-4WT4&DADO={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 180000
        }
      },
      "id": "44d96652-78b4-4111-848b-f94e2f94affe",
      "name": "confere.link",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -4840,
        2420
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Informações",
              "value": "=🚨 Alerta! O sistema identificou que o CPF pertence a um menor de idade. Devido às restrições dos birôs, a consulta não pode ser concluída."
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Nome Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Nome Consulta'] }} - Online"
            },
            {
              "name": "Tipo consulta",
              "value": "={{ $('Webhook').item.json.body['Tipo consulta'] }}"
            },
            {
              "name": "Pendências",
              "value": "=Erro"
            },
            {
              "name": "Protestos",
              "value": "=Erro"
            },
            {
              "name": "SCPC",
              "value": "=Erro"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            },
            {
              "name": "Resumo IA",
              "value": "Erro"
            },
            {
              "name": "Cadin",
              "value": "Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "910e77b8-4812-445d-8a46-82c70a85ed10",
      "name": "Erro2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3580,
        2280
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=🚨 Alerta! O sistema identificou que o CPF pertence a um menor de idade. Devido às restrições dos birôs, a consulta não pode ser concluída."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "ac7ec77c-8b70-4464-ab3d-26894fc23e10",
      "name": "HTTP Request9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3800,
        2460
      ]
    },
    {
      "parameters": {
        "content": "## MENOR DE IDADE",
        "height": 647,
        "width": 1976,
        "color": 3
      },
      "id": "3b117cab-0dc4-4c8b-844c-933f0ded79de",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5160,
        2000
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4e2b8c95-1afb-4532-9d23-3c5549ec6f35",
      "name": "Respond to Webhook5",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -3580,
        2460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "72338a16-7791-4fa7-bd08-cd0515542b1d",
      "name": "If23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3800,
        2280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "79bf95bd-99f2-47c6-baf0-5d71d75a41d2",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "47db738e-c6c3-46fb-89d2-09931a4ec63d",
      "name": "se typebot3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3800,
        2100
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "={{ $json['Consulta erro'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2923fd71-3495-456b-bb39-2d290c6f6beb",
      "name": "typebot3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3400,
        2080
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=🚨 Alerta! O sistema identificou que o CPF pertence a um menor de idade. Devido às restrições dos birôs, a consulta não pode ser concluída."
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ddd6d3bd-fbeb-4397-a40f-ca63628c0ec9",
      "name": "Resposta Typebot Erro1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3580,
        2080
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "befef930-c478-44fd-8bf4-9dad8ecece6a",
              "leftValue": "={{ $json.error.message }}",
              "rightValue": "501",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5020,
        2100
      ],
      "id": "36a6f66b-075f-45e3-99de-81942b1d3b41",
      "name": "If19"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "033b76e7-851b-48a5-8b05-e48e66b0e168",
              "leftValue": "={{ $json.DATA.DADOS_PESSOAIS[0].NASCIMENTO }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4620,
        2260
      ],
      "id": "da98ab95-95ef-4ba3-94dd-bf60d9faeda8",
      "name": "If24",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c52177c4-74b3-4017-92a5-b78bc220c645",
              "leftValue": "={{ $json.resultado.DADOS[0].NASC }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4640,
        2100
      ],
      "id": "8b554069-348c-4798-8929-e9c55c11cf77",
      "name": "If25"
    },
    {
      "parameters": {
        "jsCode": "const dataNascimentoStr = $('XML').item.json.RETORNO.CADASTRAIS.NASCTO;\n\n// Verifica se a string está preenchida corretamente\nif (!dataNascimentoStr || !/\\d{2}\\/\\d{2}\\/\\d{4}/.test(dataNascimentoStr)) {\n    return [{ erro: \"Formato de data inválido ou campo vazio\" }];\n}\n\n// Converte a string de data (DD/MM/YYYY) para um objeto Date\nconst [dia, mes, ano] = dataNascimentoStr.split('/').map(Number);\nconst dataNascimento = new Date(ano, mes - 1, dia);\n\n// Obtém a data atual\nconst hoje = new Date();\n\n// Calcula a idade\nlet idade = hoje.getFullYear() - dataNascimento.getFullYear();\nconst mesAtual = hoje.getMonth() + 1;\nconst diaAtual = hoje.getDate();\n\n// Ajusta a idade se ainda não fez aniversário este ano\nif (mesAtual < mes || (mesAtual === mes && diaAtual < dia)) {\n    idade--;\n}\n\n// Define se é maior ou menor de idade\nconst status = idade >= 18 ? \"Maior de idade\" : \"Menor de idade\";\n\n// Retorna o resultado no formato do n8n\nreturn [{ idade, status }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4260,
        2420
      ],
      "id": "9b69ec0e-0d7b-4e9e-924d-871e3234ab16",
      "name": "Code9",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "25563179-b378-4c4b-9f45-0ba8a26b819a",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Maior de idade",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4060,
        2100
      ],
      "id": "224ee0e8-dd25-477c-bb55-77859da1fac9",
      "name": "If26"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "249f3f38-a24b-4497-ad2d-827e70e38961",
              "name": "Pendencias",
              "value": "={{ $('If').item.json.data['REFIN/PEFIN'] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -580,
        1100
      ],
      "id": "e97ec913-78ae-45b9-a4ff-12a1d54f98cb",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "21931f42-9dfd-4f8d-80c7-b37b12e2a18b",
              "name": "Pendencias",
              "value": "={{ $('Mapa - Pendencias2').item.json.Pendencias }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -360,
        1100
      ],
      "id": "c2a0fce5-9265-43c7-bbde-afda1865e1de",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7b52555c-b107-4584-9dbf-73ae78835e00",
      "name": "Se base44",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4860,
        2180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64530896-b254-4c99-991f-167b429c9304",
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If27').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N1').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}",
              "type": "string"
            },
            {
              "id": "842b2f23-b0c2-4713-a419-890e04377971",
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "774d16d2-47c6-411a-8c78-78812c161e93",
              "name": "resposta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6d5f935c-cef5-42c5-9d26-c72309b2d6bb",
      "name": "resposta-base44",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5260,
        2160
      ]
    },
    {
      "parameters": {
        "content": "## SE SITE VERIFICAR CRÉDITO",
        "height": 779,
        "width": 710,
        "color": 4
      },
      "id": "bb214ff1-ca80-4a0e-b911-b78656f999d4",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -7660,
        720
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "478bb3b8-8217-4540-8fc6-dfac37a84704",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -7160,
        1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $json.creditos }}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a992053d-38df-4146-bc84-2c96de260632",
      "name": "Crédito maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -7240,
        880
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "19deb8d5-f028-476d-9af2-c16da97853a1",
      "name": "Se site / bc1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -7580,
        780
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "e279de88-8312-4ca0-a98e-c233c3fa5ad3",
      "name": "Crédito inferior1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7420,
        1080
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f5c8ad33-72a9-4b2b-9aec-89d16ddefbd6",
      "name": "Retornar Créditos Site1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7420,
        880
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "73c495c9-0331-4b95-a578-41909026f9b7",
      "name": "Respond to Webhook7",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -7240,
        1080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "60288151-e6eb-4293-b30b-a838e064013e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "2087f14e-d83f-474e-bcba-3f9274e4afc3",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -7540,
        1260
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "apin8n",
        "filters": {
          "conditions": [
            {
              "keyName": "dado",
              "keyValue": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "keyName": "consulta",
              "keyValue": "ehmconsultas"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -6120,
        760
      ],
      "id": "e32fef84-ff32-496b-b31f-1104db41642d",
      "name": "Obter Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a2ba1813-65ee-4ce4-a393-8f658c12d43f",
              "leftValue": "={{ $json.dado }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5660,
        760
      ],
      "id": "ee2e5aee-82e5-473f-a5de-d1600073734f",
      "name": "Se Supabase",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "tableId": "historico",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "Telefone",
              "fieldValue": "={{ $json.Telefone }}"
            },
            {
              "fieldId": "Dado Consultado",
              "fieldValue": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "fieldId": "Tipo Consulta",
              "fieldValue": "={{ $json[\"Tipo Consulta\"] }}"
            },
            {
              "fieldId": "Créditos",
              "fieldValue": "={{ $json[\"Créditos\"] }}"
            },
            {
              "fieldId": "Data",
              "fieldValue": "={{ $json.Data }}"
            },
            {
              "fieldId": "Hora",
              "fieldValue": "={{ $json.Hora }}"
            },
            {
              "fieldId": "URL PDF",
              "fieldValue": "={{ $json[\"URL PDF\"] }}"
            },
            {
              "fieldId": "Origem Consulta",
              "fieldValue": "={{ $json[\"Origem Consulta\"] }}"
            },
            {
              "fieldId": "Opção Consulta",
              "fieldValue": "={{ $json[\"Opção Consulta\"] }}"
            },
            {
              "fieldId": "exec",
              "fieldValue": "={{ $('Code4').item.json.executionUrl }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4880,
        3660
      ],
      "id": "d87edb16-c160-4880-8e65-f9c09ca3029e",
      "name": "Histórico Supabse",
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Typebot",
        "height": 222,
        "width": 635,
        "color": 2
      },
      "id": "b1000756-ba59-43e4-8c2c-fdc04bd000ac",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4800,
        2380
      ]
    },
    {
      "parameters": {
        "content": "## Whatsapp (Botconversa)",
        "height": 222,
        "width": 635,
        "color": 2
      },
      "id": "1e6d6163-f43a-45dc-acde-f561d3f20c77",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4800,
        2640
      ]
    },
    {
      "parameters": {
        "content": "## Site",
        "height": 222,
        "width": 635,
        "color": 2
      },
      "id": "4b7efc5b-f883-4b47-8b04-638211a513aa",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4800,
        2900
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6819f5703086936c581632c2/entities/Historico",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "tipo_consulta",
              "value": "={{ $json['Tipo Consulta'] }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json['Créditos'] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            },
            {
              "name": "url_pdf",
              "value": "={{ $json['URL PDF'] }}"
            },
            {
              "name": "origem",
              "value": "={{ $json['Origem Consulta'] }}"
            },
            {
              "name": "opcao",
              "value": "={{ $json['Opção Consulta'] }}"
            },
            {
              "name": "exec",
              "value": "={{ $('Code4').item.json.executionUrl }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4880,
        3300
      ],
      "id": "359bc0fa-72dc-4941-9176-72fcb188e5bd",
      "name": "Base44 API - Histórico"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If27').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N1').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5060,
        2160
      ],
      "id": "73c46b86-2068-4129-b909-18ea6ccabb68",
      "name": "Base44 API - RetornoConsulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/UltimaConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ \n  (() => {\n    const html = $('Code Formatar HTML').item.json.htmlContent;\n    const urlImg = $('If27').item.json['URL PDF Imagem'];\n    const urlFallback = $('Dados N8N1').item.json['URL-LOGO'];\n    const url = urlImg && urlImg.trim() !== '' ? urlImg : urlFallback;\n    return html.replace(/LOGOARTHUR/g, url).replace(/URL-LOGO/g, url);\n  })()\n    .replace(/```html|```|Inicio HTML|Início HTML|Fim HTML/g, '')\n}}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO'].replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            },
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4880,
        3480
      ],
      "id": "dbe3e2c0-94f6-4ca8-a244-c6664df76678",
      "name": "Base44 API - Última Consulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [dataStrRaw, horaStr] = agora.split(' ');\nconst dataStr = dataStrRaw.replace(',', '');\n\n// Extrai dia, mês e ano\nconst [dia, mes, ano] = dataStr.split('/');\n\n// Retorna a hora formatada\nreturn [{\n  json: {\n    hora_inicio: horaStr\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -9100,
        800
      ],
      "id": "a00d3138-4a59-439c-b57c-270e6f3268f1",
      "name": "hora_inicio"
    },
    {
      "parameters": {
        "jsCode": "const horaInicioStr = $node[\"hora_inicio\"].json[\"hora_inicio\"];\n\nif (!horaInicioStr) {\n  return [{ json: { resultado: \"Hora início não encontrada\", timeDifference: null } }];\n}\n\nconst agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [, horaStr] = agora.split(' ');\n\n// Converte as horas para objetos Date\nconst [horaInicio, minInicio, segInicio] = horaInicioStr.split(':').map(Number);\nconst [horaAtual, minAtual, segAtual] = horaStr.split(':').map(Number);\n\n// Cria objetos Date para ambos\nconst dataAtual = new Date();\nconst dataInicio = new Date();\n\ndataInicio.setHours(horaInicio, minInicio, segInicio);\ndataAtual.setHours(horaAtual, minAtual, segAtual);\n\n// Calcula a diferença em segundos\nconst timeDifference = (dataAtual - dataInicio) / 1000;\n\n// Verifica a condição\nconst resultado = timeDifference > 50 ? \"maior\" : \"menor\";\n\nreturn [{\n  json: {\n    resultado: resultado,\n    timeDifference: timeDifference\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5980,
        1220
      ],
      "id": "a75cef01-3822-4d46-a08d-b442a421ef28",
      "name": "verificar-tempo"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a019c0ba-95fa-48ef-80ce-38a16068e20a",
              "leftValue": "={{ $json.resultado }}",
              "rightValue": "menor",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5780,
        1220
      ],
      "id": "826f3023-f845-4c3a-9c94-fd18ed38892a",
      "name": "If11"
    },
    {
      "parameters": {
        "jsCode": "const horaInicioStr = $node[\"hora_inicio\"].json[\"hora_inicio\"];\n\nif (!horaInicioStr) {\n  return [{ json: { resultado: \"Hora início não encontrada\", timeDifference: null } }];\n}\n\nconst agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [, horaStr] = agora.split(' ');\n\n// Converte as horas para objetos Date\nconst [horaInicio, minInicio, segInicio] = horaInicioStr.split(':').map(Number);\nconst [horaAtual, minAtual, segAtual] = horaStr.split(':').map(Number);\n\n// Cria objetos Date para ambos\nconst dataAtual = new Date();\nconst dataInicio = new Date();\n\ndataInicio.setHours(horaInicio, minInicio, segInicio);\ndataAtual.setHours(horaAtual, minAtual, segAtual);\n\n// Calcula a diferença em segundos\nconst timeDifference = (dataAtual - dataInicio) / 1000;\n\n// Verifica a condição\nconst resultado = timeDifference > 90 ? \"maior\" : \"menor\";\n\nreturn [{\n  json: {\n    resultado: resultado,\n    timeDifference: timeDifference\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5900,
        2700
      ],
      "id": "465c9b27-01ae-4092-a8a0-075fbeeab96c",
      "name": "verificar-tempo3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Retornar Créditos1').item.json.creditos }}"
            }
          ]
        },
        "options": {}
      },
      "id": "67ee7126-b16f-4dec-964e-44516efd65bc",
      "name": "Retirar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7080,
        2820
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "apin8n",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "fieldId": "dado",
              "fieldValue": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "fieldId": "data",
              "fieldValue": "={{ $('If').item.json.data }}"
            },
            {
              "fieldId": "opcao",
              "fieldValue": "=CPF 3-1"
            },
            {
              "fieldId": "consulta",
              "fieldValue": "ehmconsultas"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4020,
        880
      ],
      "id": "8b92342d-5a4e-4fac-b541-221e43b05979",
      "name": "Salvar Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "sdFa9K80QsELWsD1",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a2ba1813-65ee-4ce4-a393-8f658c12d43f",
              "leftValue": "={{ $json.dado }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4200,
        860
      ],
      "id": "5b17cba7-5130-4866-b387-a77396a0330b",
      "name": "Se Supabase1",
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -4420,
        860
      ],
      "id": "1b83519a-9f80-49af-b9d5-6ebf64561e3d",
      "name": "Limit2"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "5530a640-fc0d-47c5-9365-320e17f13450",
      "name": "Respond to Webhook2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -5580,
        2160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.redequeroimoveis.com/webhook/dividas-cpf_3-3",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "CPF",
              "value": "={{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}"
            },
            {
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            },
            {
              "name": "URL_LogoPDF",
              "value": "={{ $('Webhook').item.json.body.URL_LogoPDF }}"
            },
            {
              "name": " Tipo consulta",
              "value": "Completa"
            },
            {
              "name": "Prompt Resumo IA",
              "value": "={{ $('Dados N8N1').item.json['Prompt Resumo IA'] }}"
            },
            {
              "name": "Prompt PDF",
              "value": "={{ $('Dados N8N1').item.json['Prompt PDF'] }}"
            },
            {
              "name": "URL-LOGO",
              "value": "={{ $('Dados N8N1').item.json['URL-LOGO'] }}"
            },
            {
              "name": "RequestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "Informações",
              "value": "={{ $('Webhook').item.json.body[\"Informações\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8f771c35-256d-4f2d-acd5-18d5ff6f3c4f",
      "name": "HTTP Request20",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -5740,
        2160
      ],
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## CONTINUAÇÃO",
        "height": 251.51571340885795,
        "width": 571.376359106563,
        "color": 6
      },
      "id": "d6d60bfd-5fd1-4315-a8cd-7fed069c9e27",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6000,
        2100
      ]
    },
    {
      "parameters": {},
      "id": "ffdfdca6-9e62-4a61-82ac-6221b8060c7e",
      "name": "Limit4",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -5920,
        2160
      ]
    },
    {
      "parameters": {
        "jsCode": "const horaInicioStr = $node[\"hora_inicio\"].json[\"hora_inicio\"];\n\nif (!horaInicioStr) {\n  return [{ json: { resultado: \"Hora início não encontrada\", timeDifference: null } }];\n}\n\nconst agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [, horaStr] = agora.split(' ');\n\n// Converte as horas para objetos Date\nconst [horaInicio, minInicio, segInicio] = horaInicioStr.split(':').map(Number);\nconst [horaAtual, minAtual, segAtual] = horaStr.split(':').map(Number);\n\n// Cria objetos Date para ambos\nconst dataAtual = new Date();\nconst dataInicio = new Date();\n\ndataInicio.setHours(horaInicio, minInicio, segInicio);\ndataAtual.setHours(horaAtual, minAtual, segAtual);\n\n// Calcula a diferença em segundos\nconst timeDifference = (dataAtual - dataInicio) / 1000;\n\n// Verifica a condição\nconst resultado = timeDifference > 90 ? \"maior\" : \"menor\";\n\nreturn [{\n  json: {\n    resultado: resultado,\n    timeDifference: timeDifference\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5380,
        2160
      ],
      "id": "050db962-bf6e-4639-8d0e-724944dca3bd",
      "name": "verificar-tempo5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('se typebot2').item.json['Consulta erro'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7500,
        2400
      ],
      "id": "2c3a37e5-ca44-4b15-81e6-c0d20908666d",
      "name": "Base44 API - Erro Consulta",
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://base44.app/api/apps/683dfc7e7fea1b7c332ed0d5/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "retorno",
              "value": "=ok"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4880,
        3140
      ],
      "id": "a41c2932-bc9f-4fd0-a710-e832db26e62e",
      "name": "Base44 API - Status Sistema",
      "retryOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0ae6a811-4e5d-44fa-bb03-fbab290cc4fe",
              "name": "Informações",
              "value": "={{ $('Webhook').item.json.body[\"Informações\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dabddd9f-e944-4f27-ab94-7bac54f37fad",
      "name": "Edit Fields31",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3220,
        620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://base44.app/api/apps/683dfc7e7fea1b7c332ed0d5/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "retorno",
              "value": "=erro"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7220,
        2960
      ],
      "id": "2a6fe22c-d4b3-4fdd-8e61-754d4672b593",
      "name": "Base44 API - Status Sistema1",
      "retryOnFail": true
    },
    {
      "parameters": {},
      "id": "a6bc2348-0663-4276-9e56-72f26835e99e",
      "name": "Limit5",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -4800,
        1520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b5f20516-445e-4296-95b1-b74d6b1fce70",
              "leftValue": "={{ $('Webhook').item.json.body.status_ehmconsultas }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6080,
        1040
      ],
      "id": "0a01c529-ac2d-4121-872a-1e1dbbcdfcfc",
      "name": "status_ehmconsultas"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: O CPF informado é inválido. 🚨\nVerifique os números e digite corretamente."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -8640,
        1000
      ],
      "id": "209a8961-8c52-4a5f-972c-5a5116db619f",
      "name": "EvolutionAPI - CPF Invalido",
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7360,
        1260
      ],
      "id": "fc343c72-66a4-4ac5-89d6-0316f0ec2733",
      "name": "EvolutionAPI - Sem credito",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "={{ $('se typebot4').item.json['Consulta erro'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7500,
        2580
      ],
      "id": "38c313d9-9b51-45e1-a7c5-5cd49ea073dc",
      "name": "EvolutionAPI - Erro",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37111169-e67b-43ee-856e-7deb5fa193ab",
              "name": "resposta",
              "value": "=*UniConsultas*\nTodas as consultas em um só lugar!\n\n------- / / -------\n\n## Consulta Financeira CPF\n\n{{ $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO']}}",
              "type": "string"
            },
            {
              "id": "e298fd1f-2f1c-4140-bf94-7c782ced4329",
              "name": "urlpdf",
              "value": "={{ $('IF PDF').item.json.FileUrl }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5120,
        2440
      ],
      "id": "f2f52446-67df-4881-93cf-184e4ba7d8a0",
      "name": "resposta typebot"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8cc86a13-85cf-4301-a6ce-34881ad480c6",
              "leftValue": "={{ $('If5').item.json.urlpdf }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6840,
        3240
      ],
      "id": "438e28ba-ddb9-4f64-8fad-0d04d775d90c",
      "name": "Se URLPDF"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=Atenção: O link para download do PDF estará disponível por apenas 1 minuto. Após esse período, ele será deletado automaticamente.\n\n### PDF\n{{ $('If5').item.json.urlpdf }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7020,
        3220
      ],
      "id": "da68f7b6-5f73-406f-99e1-ee1f0ee05349",
      "name": "EvolutionAPI - Resposta2",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "={{ $json.resposta\n  .replace(/_ /g, '_')\n  .replace(/-----------+/g, '------- / / -------') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6660,
        3240
      ],
      "id": "b9f8a241-856a-41aa-bc67-f5abd188773c",
      "name": "EvolutionAPI - Resposta3",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a4ea19e9-6167-473d-ad80-c739ad364aa5",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6320,
        3260
      ],
      "id": "6fbcb726-5771-4c9f-9c4f-e434a8e58a8f",
      "name": "If5"
    },
    {
      "parameters": {
        "content": "## Resposta Typebot",
        "height": 260,
        "width": 940,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6260,
        3160
      ],
      "typeVersion": 1,
      "id": "0f3fcf80-aede-4909-8526-1f2af2bb88f8",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        6500,
        3240
      ],
      "id": "46777f2e-0870-4b38-ba95-4b188c197549",
      "name": "Limit7"
    },
    {
      "parameters": {
        "keyName": "status-ehmconsultas",
        "valueString": "={{ $json.resultado }}\n{{ (() => {\n  const getSafe = (fn) => {\n    try {\n      const value = fn();\n      return value !== undefined && value !== null && value !== '' ? value : null;\n    } catch {\n      return null;\n    }\n  };\n\n  const status1 = getSafe(() => $('HTTP Request1').item.json.data.Status);\n  const status2 = getSafe(() => $('HTTP Request2').item.json.data.Status);\n\n  if (status1) {\n    const tipo = getSafe(() => $('Webhook').item.json.body.tipo_ehmconsultas) || 'tipo_desconhecido';\n    const consulta = getSafe(() => $('CONSULTA _ TEXTO').item.json['CONSULTA _ TEXTO']) ? 'on' : 'off';\n    return `${tipo}-${consulta}`;\n  }\n\n  if (status2) {\n    return 'cpf_pro-on';\n  }\n\n  return 'cpf_pro-off';\n})() }}"
      },
      "type": "n8n-nodes-datastore.datastore",
      "typeVersion": 1,
      "position": [
        6480,
        3620
      ],
      "id": "45b4d0b0-1a1d-4bee-832a-a0e41cb27651",
      "name": "Datastore"
    },
    {
      "parameters": {
        "operation": "get",
        "keyName": "status-ehmconsultas"
      },
      "type": "n8n-nodes-datastore.datastore",
      "typeVersion": 1,
      "position": [
        6120,
        3620
      ],
      "id": "eddb728d-9b4d-45c3-884f-d99b6670e171",
      "name": "Datastore1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cf1fc1f3-1ff1-4479-af73-0b7f198703e9",
              "name": "retorno",
              "value": "={{ $json.value }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6300,
        3620
      ],
      "id": "7a132cbe-a99b-4a36-9f7e-7109c773fccd",
      "name": "retorno"
    },
    {
      "parameters": {
        "operation": "get",
        "keyName": "status-ehmconsultas"
      },
      "type": "n8n-nodes-datastore.datastore",
      "typeVersion": 1,
      "position": [
        6480,
        3800
      ],
      "id": "648c8053-a2b3-48bd-a8c4-51fc75d71807",
      "name": "Datastore2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5042728-71cb-4256-81c2-c0740e8995e3",
              "leftValue": "={{ $('Datastore2').item.json.value }}",
              "rightValue": "=cpf_pros-off\ncpf_pros-off\ncpf_pros-off\ncpf_pros-off\ncpf_pros-off",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6660,
        3620
      ],
      "id": "bfcea482-a53b-4122-bf37-d0c62b333233",
      "name": "se PROS off"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5042728-71cb-4256-81c2-c0740e8995e3",
              "leftValue": "={{ $('Datastore2').item.json.value }}",
              "rightValue": "=cpf_pro-off\ncpf_pro-off\ncpf_pro-off\ncpf_pro-off\ncpf_pro-off",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6660,
        3800
      ],
      "id": "1e4142f9-03b4-49ee-ad2a-8031416e0e1f",
      "name": "se PRO off"
    },
    {
      "parameters": {
        "keyName": "ehmconsultas",
        "valueString": "=ehmconsultas_status: true\nehmconsultas_opcao: cpf_pro\niconsultei_status: true\nconsultpositivo_status: true\nvalidocadastro_status: true\nacessopositivo_status: true"
      },
      "type": "n8n-nodes-datastore.datastore",
      "typeVersion": 1,
      "position": [
        6860,
        3620
      ],
      "id": "4aee5854-84f2-4388-8acf-f5138e7f5bb4",
      "name": "status_ehmconsultas CPF_PROS"
    },
    {
      "parameters": {
        "keyName": "ehmconsultas",
        "valueString": "=ehmconsultas_status: false\nehmconsultas_opcao: cpf_pro\niconsultei_status: true\nconsultpositivo_status: true\nvalidocadastro_status: true\nacessopositivo_status: true"
      },
      "type": "n8n-nodes-datastore.datastore",
      "typeVersion": 1,
      "position": [
        6860,
        3800
      ],
      "id": "0e56acb2-dbb0-4225-92de-c282811a3ab1",
      "name": "status_ehmconsultas CPF_PRO"
    },
    {
      "parameters": {
        "jsCode": "// Obtém o texto original da variável retorno\nconst textoOriginal = $('retorno').item.json.retorno || '';\n\n// Divide o texto em linhas\nconst linhas = textoOriginal.split('\\n');\n\n// Remove a primeira linha\nlinhas.shift();\n\n// Junta novamente as linhas restantes com quebras de linha\nconst resultado = linhas.join('\\n');\n\n// Retorna o resultado\nreturn {\n  json: {\n    resultado\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6300,
        3800
      ],
      "id": "e4280515-b301-4209-8565-338eeb05aae6",
      "name": "Code12"
    },
    {
      "parameters": {
        "content": "## Mudança status_ehmconsultas",
        "height": 440,
        "width": 960
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6080,
        3540
      ],
      "typeVersion": 1,
      "id": "bfea3cbe-5ded-4b73-afed-edce90afd49e",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "40a755fd-b9fb-4a97-b9ad-330c8da43e27",
      "name": "se typebot4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -7700,
        2640
      ]
    },
    {
      "parameters": {
        "url": "=http://api.ehmconsultas.com:8880/dividas/multi/{{ $('Dados N8N1').item.json.api === 'cpf_pros' ? 'cpf_pro' : ($('Dados N8N1').item.json.api === 'cpf_pro' ? 'cpf_pros' : $('Dados N8N1').item.json.api) }}/{{ $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "user_token",
              "value": "29447aaaa3ad93d43d3a0bf5f5eaf19185547be7c0875eab126a229003b0c4e6ab266631"
            },
            {
              "name": "token",
              "value": "KiDXU8psYtx08RrwMbhqQN3X1tDLEcS5J8nznoQZDy2PmSO7XnCtQ5kFZX7x"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          },
          "timeout": 50000
        }
      },
      "id": "793754c5-0b08-4516-8c48-44a67a43ad4d",
      "name": "HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -5300,
        1420
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5042728-71cb-4256-81c2-c0740e8995e3",
              "leftValue": "={{ $('Datastore2').item.json.value }}",
              "rightValue": "=cpf_pro-on\ncpf_pro-on\ncpf_pro-on\ncpf_pro-on\ncpf_pro-on",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6660,
        3960
      ],
      "id": "85755e23-5afd-4dd8-8a9c-3d65206e90dd",
      "name": "se PRO on"
    },
    {
      "parameters": {
        "keyName": "ehmconsultas",
        "valueString": "=ehmconsultas_status: false\nehmconsultas_opcao: cpf_pro\niconsultei_status: true\nconsultpositivo_status: true\nvalidocadastro_status: true\nacessopositivo_status: true"
      },
      "type": "n8n-nodes-datastore.datastore",
      "typeVersion": 1,
      "position": [
        6860,
        3960
      ],
      "id": "d9084052-373d-4693-9646-47027a0ba91f",
      "name": "status_ehmconsultas CPF_PRO1"
    },
    {
      "parameters": {
        "jsCode": "// Captura o conteúdo da string de pendências\nconst data = $('Aggregate6').item.json.Consulta[1].Pendencias;\n\n// Função para extrair pendências usando regex\nconst pendenciasMatches = [...data.matchAll(/\\*Data:\\* _?(.+?)_?\\n\\*Contrato:\\* _?(.+?)_?\\n\\*Origem:\\* _?(.+?)_?\\n\\*Valor:\\* _?R\\$\\s?(.+?)_/g)];\n\nconst pendencias = pendenciasMatches.map(m => ({\n    data: m[1].trim(),\n    contrato: m[2].trim(),\n    origem: m[3].trim(),\n    valor: `R$ ${m[4].trim()}`\n}));\n\nreturn {\n    pendencias\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4720,
        1960
      ],
      "id": "78b3296b-ec02-4172-a2ae-5e5c255b8277",
      "name": "json pendencias"
    },
    {
      "parameters": {
        "jsCode": "// Captura o conteúdo da string SCPC\nconst data = $('Aggregate6').item.json.Consulta[2].SCPC;\n\n// Expressão regular para extrair os blocos de dados\nconst scpcMatches = [...data.matchAll(/\\*Data:\\* _?(.+?)_?\\n\\*Cidade:\\* _?(.+?)_?\\n\\*Origem:\\* _?(.+?)_?\\n\\*Valor:\\* _?R\\$\\s?(.+?)_/g)];\n\nconst scpc = scpcMatches.map(m => ({\n    data: m[1].trim(),\n    cidade: m[2].trim(),\n    origem: m[3].trim(),\n    valor: `R$ ${m[4].trim()}`\n}));\n\nreturn {\n    scpc\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4940,
        1960
      ],
      "id": "949b03d5-a227-4805-b140-cc085ee292b0",
      "name": "json scpc"
    },
    {
      "parameters": {
        "jsCode": "// Captura o conteúdo da string Protesto\nconst data = $('Aggregate6').item.json.Consulta[3].Protesto;\n\n// Expressão regular para extrair os blocos de dados\nconst protestoMatches = [...data.matchAll(/\\*Cidade:\\* _?(.+?)_?\\n\\*Data:\\* _?(.+?)_?\\n\\*Cartório:\\* _?(.+?)_?\\n\\*Valor:\\* _?R\\$\\s?(.+?)_/g)];\n\nconst protesto = protestoMatches.map(m => ({\n    cidade: m[1].trim(),\n    data: m[2].trim(),\n    cartorio: m[3].trim(),\n    valor: `R$ ${m[4].trim()}`\n}));\n\nreturn {\n    protesto\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5160,
        1960
      ],
      "id": "fcf345be-1627-472f-84e5-dda682dd95ea",
      "name": "json protesto"
    },
    {
      "parameters": {
        "jsCode": "const pendencias = $('json pendencias').item.json.pendencias || [];\nconst scpc = $('json scpc').item.json.scpc || [];\nconst protesto = $('json protesto').item.json.protesto || [];\nconst dado = $('If15').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '');\n\nreturn [\n  {\n    json: {\n      consulta: {\n        dado,         // Primeiro campo\n        pendencias,\n        scpc,\n        protesto\n      }\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5400,
        1960
      ],
      "id": "4a38973e-b2f0-43e8-a294-2ac4cbc3bb29",
      "name": "retorno json"
    }
  ],
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Mapa - Pendencias2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mapa - SCPC2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mapa - Protesto2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Créditos a retirar1": {
      "main": [
        [
          {
            "node": "Se crédito existe1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Maior ou igual1": {
      "main": [
        [
          {
            "node": "Retirar Créditos1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retirar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar saldo": {
      "main": [
        [
          {
            "node": "If20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos1": {
      "main": [
        [
          {
            "node": "Créditos a retirar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe1": {
      "main": [
        [
          {
            "node": "Maior ou igual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos1": {
      "main": [
        [
          {
            "node": "Verificar saldo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If20": {
      "main": [
        [
          {
            "node": "Retornar Créditos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados N8N": {
      "main": [
        [
          {
            "node": "hora_inicio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate6": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados N8N1": {
      "main": [
        [
          {
            "node": "Dados N8N",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "Se site / bc1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Erro1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook3": {
      "main": [
        [
          {
            "node": "verificar-tempo3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request19": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot": {
      "main": [
        [
          {
            "node": "EvolutionAPI - CPF Invalido",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot1": {
      "main": [
        [
          {
            "node": "resposta typebot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Erro": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request6": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Code Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Horário funcionamento": {
      "main": [
        [
          {
            "node": "Verificar Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Horário funcionamento1": {
      "main": [
        [
          {
            "node": "se typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Horário funcionamento": {
      "main": [
        [
          {
            "node": "Horário funcionamento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fora do horário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fora do horário": {
      "main": [
        [
          {
            "node": "se typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If21": {
      "main": [
        [
          {
            "node": "Erro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot2": {
      "main": [
        [
          {
            "node": "Base44 API - Erro Consulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot2": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "HTTP Request19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "CONSULTA _ TEXTO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CONSULTA _ TEXTO": {
      "main": [
        [
          {
            "node": "Limit3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          },
          {
            "node": "json pendencias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Erro1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge60",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados N8N1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge60": {
      "main": [
        [
          {
            "node": "Merge78",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SCPC - 49": {
      "main": [
        [
          {
            "node": "Merge60",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Mapa - SCPC2": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 49": {
      "main": [
        [
          {
            "node": "Merge78",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE Protesto - 50": {
      "main": [
        [
          {
            "node": "Protesto - 52",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Protesto - 49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Protesto - 52": {
      "main": [
        [
          {
            "node": "Merge78",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Mapa - Protesto2": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SCPC - 53": {
      "main": [
        [
          {
            "node": "Merge60",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE SCPC - 50": {
      "main": [
        [
          {
            "node": "SCPC - 53",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SCPC - 49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "SE SCPC - 50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "SE Protesto - 50",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Pendencias2": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pendencias - 83": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "SE Pendencias - 82": {
      "main": [
        [
          {
            "node": "Pendencias - 87",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pendencias - 83",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pendencias - 87": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "SE Pendencias - 82",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge78": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados Histórico": {
      "main": [
        [
          {
            "node": "Histórico Supabse",
            "type": "main",
            "index": 0
          },
          {
            "node": "Base44 API - Histórico",
            "type": "main",
            "index": 0
          },
          {
            "node": "Base44 API - Última Consulta",
            "type": "main",
            "index": 0
          },
          {
            "node": "Base44 API - Status Sistema",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Dados Histórico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados - ehmconsultas1": {
      "main": [
        [
          {
            "node": "If24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda": {
      "main": [
        [
          {
            "node": "If25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "confere.link": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Erro2": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request9": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If23": {
      "main": [
        [
          {
            "node": "Erro2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot3": {
      "main": [
        [
          {
            "node": "Resposta Typebot Erro1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot3": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot Erro1": {
      "main": [
        [
          {
            "node": "typebot3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "minerdapifoda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If24": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "confere.link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If25": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados - ehmconsultas1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If26": {
      "main": [
        [],
        [
          {
            "node": "se typebot3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se base44": {
      "main": [
        [
          {
            "node": "Base44 API - RetornoConsulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta-base44": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito maior ou igual1": {
      "main": [
        [
          {
            "node": "Obter Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se site / bc1": {
      "main": [
        [
          {
            "node": "Obter Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Site1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito inferior1": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Site1": {
      "main": [
        [
          {
            "node": "Crédito maior ou igual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Sem credito",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crédito inferior1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obter Supabase": {
      "main": [
        [
          {
            "node": "Se Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se Supabase": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "status_ehmconsultas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - RetornoConsulta": {
      "main": [
        [
          {
            "node": "resposta-base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "hora_inicio": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "verificar-tempo": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "verificar-tempo3": {
      "main": [
        [
          {
            "node": "Retornar Créditos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos": {
      "main": [
        [
          {
            "node": "Verificar saldo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salvar Supabase1": {
      "main": [
        [
          {
            "node": "Edit Fields31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se Supabase1": {
      "main": [
        [
          {
            "node": "Edit Fields31",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Salvar Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "Se Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook2": {
      "main": [
        [
          {
            "node": "verificar-tempo5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request20": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit4": {
      "main": [
        [
          {
            "node": "HTTP Request20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - Erro Consulta": {
      "main": [
        [
          {
            "node": "typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields31": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook4": {
      "main": [
        [
          {
            "node": "Base44 API - Status Sistema1",
            "type": "main",
            "index": 0
          },
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit5": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "status_ehmconsultas": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - CPF Invalido": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Sem credito": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Erro": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se URLPDF": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Resposta2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Resposta3": {
      "main": [
        [
          {
            "node": "Se URLPDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Limit7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit7": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Resposta3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook7": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Datastore": {
      "main": [
        [
          {
            "node": "Datastore2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Datastore1": {
      "main": [
        [
          {
            "node": "retorno",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "retorno": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Datastore2": {
      "main": [
        [
          {
            "node": "se PROS off",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se PROS off": {
      "main": [
        [
          {
            "node": "status_ehmconsultas CPF_PROS",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se PRO off",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se PRO off": {
      "main": [
        [
          {
            "node": "status_ehmconsultas CPF_PRO",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se PRO on",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Datastore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot4": {
      "main": [
        [
          {
            "node": "typebot2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se PRO on": {
      "main": [
        [
          {
            "node": "status_ehmconsultas CPF_PRO1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "json pendencias": {
      "main": [
        [
          {
            "node": "json scpc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "json scpc": {
      "main": [
        [
          {
            "node": "json protesto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "json protesto": {
      "main": [
        [
          {
            "node": "retorno json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "retorno json": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "HTTP Request2": [
      {
        "json": {
          "data": {
            "Version": "1.0",
            "Status": 200,
            "SCPC": [
              {
                "Dt Ocorr": "10/04/2023",
                "Tp Devedor": "T",
                "Nome": "BANCO C6 SA",
                "Vr Dívida": "R$ 990,76",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "MANCC32676277880",
                "Dt Disp": "10/05/2023"
              },
              {
                "Dt Ocorr": "31/12/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/ESCOLA CRIAR-TE",
                "Vr Dívida": "R$ 7.126,82",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "2020061",
                "Dt Disp": "30/01/2023"
              },
              {
                "Dt Ocorr": "09/01/2022",
                "Tp Devedor": "T",
                "Nome": "ITAU UNIBANCO HOLDING SA",
                "Vr Dívida": "R$ 939,86",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "002781068160000",
                "Dt Disp": "08/02/2022"
              },
              {
                "Dt Ocorr": "13/12/2021",
                "Tp Devedor": "T",
                "Nome": "ITAU UNIBANCO S/A",
                "Vr Dívida": "R$ 3.077,24",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "000001872649932",
                "Dt Disp": "12/01/2022"
              },
              {
                "Dt Ocorr": "08/12/2021",
                "Tp Devedor": "T",
                "Nome": "LOJAS CEM/MATRIZ",
                "Vr Dívida": "R$ 4.038,30",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "UP=0;96;28613282",
                "Dt Disp": "07/01/2022"
              },
              {
                "Dt Ocorr": "11/10/2021",
                "Tp Devedor": "T",
                "Nome": "SP-CGT/LOJA OUSADIA",
                "Vr Dívida": "R$ 170,00",
                "Cidade": "CARAGUATATUBA",
                "UF": "SP",
                "Contrato": "139869/4",
                "Dt Disp": "10/11/2021"
              },
              {
                "Dt Ocorr": "07/09/2021",
                "Tp Devedor": "T",
                "Nome": "DMCARD PROC DE DADOS E C DE A LTDA",
                "Vr Dívida": "R$ 512,37",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "32676277880-0002896083",
                "Dt Disp": "07/10/2021"
              },
              {
                "Dt Ocorr": "02/04/2024",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 846,81",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "02/05/2024"
              },
              {
                "Dt Ocorr": "02/04/2024",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.346,65",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "02/05/2024"
              },
              {
                "Dt Ocorr": "21/12/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.889,38",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "20/01/2024"
              },
              {
                "Dt Ocorr": "26/07/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 351,41",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "25/08/2023"
              },
              {
                "Dt Ocorr": "26/07/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 390,19",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "25/08/2023"
              },
              {
                "Dt Ocorr": "26/07/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 675,17",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "25/08/2023"
              },
              {
                "Dt Ocorr": "28/03/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 7.126,82",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DS/",
                "Dt Disp": "27/04/2023"
              },
              {
                "Dt Ocorr": "15/02/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 258,32",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "17/03/2023"
              },
              {
                "Dt Ocorr": "10/02/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 464,54",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "12/03/2023"
              },
              {
                "Dt Ocorr": "02/09/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 523,29",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "02/10/2022"
              },
              {
                "Dt Ocorr": "12/04/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.630,45",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "12/05/2022"
              },
              {
                "Dt Ocorr": "12/04/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.698,00",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "12/05/2022"
              },
              {
                "Dt Ocorr": "24/11/2021",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 3.816,30",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/NP/",
                "Dt Disp": "24/12/2021"
              }
            ],
            "Protesto": [
              {
                "Data": "24/11/2021",
                "Valor Protesto": "R$ 3.816,30",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "12/04/2022",
                "Valor Protesto": "R$ 1.698,00",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "12/04/2022",
                "Valor Protesto": "R$ 1.630,45",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "02/09/2022",
                "Valor Protesto": "R$ 523,29",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "31/01/2023",
                "Valor Protesto": "R$ 3.624,80",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "10/02/2023",
                "Valor Protesto": "R$ 464,54",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "15/02/2023",
                "Valor Protesto": "R$ 258,32",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "28/03/2023",
                "Valor Protesto": "R$ 7.126,82",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/07/2023",
                "Valor Protesto": "R$ 351,41",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/07/2023",
                "Valor Protesto": "R$ 675,17",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/07/2023",
                "Valor Protesto": "R$ 390,19",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "21/12/2023",
                "Valor Protesto": "R$ 1.889,38",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "02/04/2024",
                "Valor Protesto": "R$ 1.346,65",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "02/04/2024",
                "Valor Protesto": "R$ 846,81",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "24/10/2024",
                "Valor Protesto": "R$ 728,15",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/12/2024",
                "Valor Protesto": "R$ 763,28",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "10/01/2025",
                "Valor Protesto": "R$ 2.604,14",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "25/02/2025",
                "Valor Protesto": "R$ 768,83",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              }
            ],
            "REFIN/PEFIN": [],
            "SERASA": {
              "Dados Gerais": [
                {
                  "Data Primeira Ocorrência": "",
                  "Data Última Ocorrência": "",
                  "Quantidade Ocorrências": 60
                }
              ]
            },
            "CADIN": [],
            "SICCF": [],
            "Cheque sem Fundos": [],
            "Pendências REFIN/PEFIN": [
              {
                "Dt Ocorr": "09/01/2022",
                "Tipo": "R-CART CREDI",
                "Avalista": "N",
                "Vr Dívida": "939,86",
                "Contrato": "2781068160000",
                "Instituição": "060872504000123"
              },
              {
                "Dt Ocorr": "13/12/2021",
                "Tipo": "R-CRED FINAN",
                "Avalista": "N",
                "Vr Dívida": "3.077,24",
                "Contrato": "0001872649932",
                "Instituição": "060701190000104"
              },
              {
                "Dt Ocorr": "12/09/2021",
                "Tipo": "R-CRED FINAN",
                "Avalista": "N",
                "Vr Dívida": "19.504,00",
                "Contrato": "015000229668",
                "Instituição": "059588111000103"
              },
              {
                "Dt Ocorr": "10/12/2023",
                "Tipo": "R-EMPRES CTA",
                "Avalista": "N",
                "Vr Dívida": "156,06",
                "Contrato": "237106",
                "Instituição": "008561701000101"
              },
              {
                "Dt Ocorr": "14/12/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "441388001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/03/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "10327001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "10/02/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "53829001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "19/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "00315001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "19/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "00313001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "14/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "70635001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "84906001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "250,00",
                "Contrato": "52516001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "01/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "15.108,73",
                "Contrato": "92228001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/12/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "81725001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "26/11/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "52588001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "08/11/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "89876001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "10/10/2021",
                "Tipo": "R-CRED FINAN",
                "Avalista": "N",
                "Vr Dívida": "108,94",
                "Contrato": "149250882",
                "Instituição": "004088208000165"
              },
              {
                "Dt Ocorr": "07/10/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "09396001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/10/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "36061001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "25/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "845,20",
                "Contrato": "70266001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "25/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "70268001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "24/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "69134001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "24/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "69133001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "14/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "96017001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "14/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "96021001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "46992001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "16389001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "16/08/2021",
                "Tipo": "P-CONS VEICU",
                "Avalista": "N",
                "Vr Dívida": "1.715,71",
                "Contrato": "399/735-37",
                "Instituição": "045441789000154"
              },
              {
                "Dt Ocorr": "07/08/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "23482001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "17/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "44376001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "09/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "86370001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "37187001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "56549001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "30/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "28301001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "09/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "09383001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "09/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "09384001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "53327001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/05/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "63707001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "23/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "03354001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "18/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "78283001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "18/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "78285001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "99602001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "89881001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "04/03/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "281,74",
                "Contrato": "62600001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/03/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "34878001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/02/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "84506001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/01/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "83691001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "17/12/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "22071001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/12/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "44318001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "11/11/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "281,74",
                "Contrato": "92311001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "11/11/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "92312001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/11/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "50136001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "13/10/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "48584001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/10/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "01955001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/09/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "64544001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "12/08/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "68619001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/08/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "23600001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/07/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "899,00",
                "Contrato": "75679001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/05/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "899,00",
                "Contrato": "40321001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "23/04/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "845,20",
                "Contrato": "09941001",
                "Instituição": "010215988000160"
              }
            ],
            "Nome": "ANDERSON DOS SANTOS JORGE"
          }
        }
      }
    ],
    "Dados - ehmconsultas1": [
      {
        "json": {
          "DATA": {
            "Version": "1.0",
            "Status": 200,
            "DADOS_PESSOAIS": [
              {
                "CPF": "14675482600",
                "NOME": "MARCELLA APARECIDA BORGES",
                "SEXO": "F",
                "NASCIMENTO": "2009-08-28 00:00:00",
                "NOME_CIVIL": "Sem Informação",
                "NOME_MAE": "Sem Informação",
                "NOME_PAI": "Sem Informação",
                "ESTADO_CIVIL": "Sem Informação",
                "RG": "Sem Informação",
                "ORGAO_EMISSOR": "Sem Informação",
                "UF_EMISSAO": "Sem Informação",
                "NACIONALIDADE": "Sem Informação",
                "CPF_CONJUGE": "Sem Informação",
                "SEXO_RETRATADO": "Sem Informação",
                "OB_UNB": "Sem Informação",
                "DATA_OBTO": "Sem Informação",
                "CBO": "Sem Informação",
                "ID_CBO": "Sem Informação",
                "CODIGO_MOSAIC": "Sem Informação",
                "RENDA": "225",
                "TITULO_ELEITOR": "Sem Informação",
                "CODIGO_MOSAIC_NOVO": "Sem Informação",
                "CODIGO_MOSAIC_SECUNDARIO": "C08"
              }
            ],
            "PARENTES": [
              "Sem Informação"
            ],
            "PIS": [
              "Sem Informação"
            ],
            "NIS": [
              "Sem Informação"
            ],
            "CNS": [
              "Sem Informação"
            ],
            "DADOS_ELEITORAIS": [
              "Sem Informação"
            ],
            "SCORE_BASE": [
              {
                "SCORE_SERASA": "1",
                "SCORE_SERASA_FAIXA": "ALTISSIMO",
                "SCORE_BOA_VISTA": "1",
                "SCORE_BOA_VISTA_FAIXA": "Sem informação"
              }
            ],
            "SCORE_NOVO": [
              {
                "SCORE_SERASA": "1"
              }
            ],
            "SCORE_ANTIGO": [
              {
                "SCORE_SERASA": "1",
                "SCORE_SERASA_FAIXA": "ALTISSIMO",
                "SCORE_BOA_VISTA": "1",
                "SCORE_BOA_VISTA_FAIXA": "Sem informação"
              }
            ],
            "IRPF": [
              "Sem Informação"
            ],
            "PODER_AQUISITIVO": [
              {
                "PODER_AQUISITIVO": "MUITO BAIXO",
                "RENDA_PODER_AQUISITIVO": "225.843215930784",
                "FX_PODER_AQUISITIVO": "De R$ 112 até R$ 630"
              }
            ],
            "CLASSE_SOCIAL": [
              {
                "CLASSE_SOCIAL": "E",
                "SUB_CLASSE_SOCIAL": "E"
              },
              {
                "CLASSE_SOCIAL": "E",
                "SUB_CLASSE_SOCIAL": "E"
              }
            ],
            "PROFISSAO": [
              "Sem Informação"
            ],
            "PRODUTOR_RURAL": [
              "Sem Informação"
            ],
            "QUADRO_SOCIETARIO": [
              "Sem Informação"
            ],
            "BOLSA_FAMILIA": [
              "Sem Informação"
            ],
            "FGTS": [
              "Sem Informação"
            ],
            "ESCOLARIDADE": [
              "Sem Informação"
            ],
            "UNIVERSIDADE": [
              "Sem Informação"
            ],
            "SERVIDOR_PUBLICO": [
              "Sem Informação"
            ],
            "MINHA_CASA_MINHA_VIDA": [
              "Sem Informação"
            ],
            "ENDERECOS": [
              "Sem Informação"
            ],
            "EMAIL_BASE": [
              "Sem Informação"
            ],
            "EMAIL_NEW": [
              "Sem Informação"
            ],
            "EMAIL_NOVO": [
              "Sem Informação"
            ],
            "TELEFONES": [
              "Sem Informação"
            ]
          }
        }
      }
    ],
    "minerdapifoda": [
      {
        "json": {
          "status": 200,
          "resultado": {
            "DADOS": [
              {
                "CPF": "14675482600",
                "NOME": "MARCELLA APARECIDA BORGES",
                "SEXO": "F",
                "NASC": "28/08/2009",
                "NOME_MAE": "",
                "NOME_PAI": "",
                "ESTCIV": "",
                "NACIONALID": "",
                "RG": "",
                "ORGAO_EMISSOR": "",
                "UF_EMISSAO": "",
                "DT_OB": "",
                "RENDA": "225,84",
                "DT_INFORMACAO": null,
                "TITULO_ELEITOR": ""
              }
            ],
            "EMAIL": [],
            "HISTORICO_TELEFONES": [],
            "PARENTES": [],
            "PODER_AQUISITIVO": [
              {
                "COD_PODER_AQUISITIVO": 1,
                "PODER_AQUISITIVO": "MUITO BAIXO",
                "RENDA_PODER_AQUISITIVO": "De R$ 225.00",
                "FX_PODER_AQUISITIVO": "De R$ 112 até� R$ 630"
              }
            ],
            "ENDERECOS": [],
            "PIS": [],
            "UNIVERSITARIO": [],
            "SCORE": [
              {
                "CSB8": "1",
                "CSB8_FAIXA": "ALTISSIMO",
                "CSBA": 1,
                "CSBA_FAIXA": null
              }
            ],
            "IRPF": [],
            "TSE": []
          }
        }
      }
    ],
    "HTTP Request1": [
      {
        "json": {
          "data": {
            "Version": "2.0",
            "Status": 200,
            "SCPC": [
              {
                "Dt Ocorr": "25/11/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/PRIMEIRO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 175,02",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "25/12/2024"
              },
              {
                "Dt Ocorr": "25/11/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/PRIMEIRO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 403,11",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "25/12/2024"
              },
              {
                "Dt Ocorr": "25/11/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/TERCEIRO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 175,02",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "25/12/2024"
              },
              {
                "Dt Ocorr": "25/11/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/TERCEIRO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 403,11",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "25/12/2024"
              },
              {
                "Dt Ocorr": "22/11/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/SEGUNDO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 175,02",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "22/12/2024"
              },
              {
                "Dt Ocorr": "22/11/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/SEGUNDO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 394,62",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "22/12/2024"
              },
              {
                "Dt Ocorr": "26/03/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/TERCEIRO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 374,40",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "25/04/2024"
              },
              {
                "Dt Ocorr": "26/03/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/PRIMEIRO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 374,40",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "25/04/2024"
              },
              {
                "Dt Ocorr": "20/03/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/SEGUNDO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 374,40",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "19/04/2024"
              },
              {
                "Dt Ocorr": "11/03/2024",
                "Tp Devedor": "T",
                "Nome": "SP-CAS/SEGUNDO CARTORIO DE CAMPINAS",
                "Vr Dívida": "R$ 380,54",
                "Cidade": "CAMPINAS",
                "UF": "SP",
                "Contrato": "/AI/",
                "Dt Disp": "10/04/2024"
              }
            ],
            "Protesto": [
              {
                "Data": "06/03/2024",
                "Valor Protesto": "380,54",
                "Cartório": "1",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              },
              {
                "Data": "11/03/2024",
                "Valor Protesto": "380,54",
                "Cartório": "2",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              },
              {
                "Data": "20/03/2024",
                "Valor Protesto": "374,40",
                "Cartório": "2",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              },
              {
                "Data": "26/03/2024",
                "Valor Protesto": "374,40",
                "Cartório": "3",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              },
              {
                "Data": "09/04/2024",
                "Valor Protesto": "170,09",
                "Cartório": "1",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              },
              {
                "Data": "22/11/2024",
                "Valor Protesto": "175,02",
                "Cartório": "2",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              },
              {
                "Data": "22/11/2024",
                "Valor Protesto": "394,62",
                "Cartório": "2",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              },
              {
                "Data": "25/11/2024",
                "Valor Protesto": "403,11",
                "Cartório": "3",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              },
              {
                "Data": "25/11/2024",
                "Valor Protesto": "175,02",
                "Cartório": "3",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              },
              {
                "Data": "27/11/2024",
                "Valor Protesto": "396,36",
                "Cartório": "1",
                "Cidade": "CAMPINAS",
                "UF": "SP"
              }
            ],
            "REFIN/PEFIN": [],
            "SERASA": [],
            "CADIN": [],
            "SICCF": [],
            "Cheque sem Fundos": [],
            "Ação Judicial": [],
            "Nome": "RAIMUNDO PINTO DA CONCEICAO"
          }
        }
      }
    ],
    "Google Sheets1": [
      {
        "json": {
          "Telefone": "553799781110",
          "Tipo Consulta": "Dividas CPF 3-1 (ehmconsultas - dividas/multi/cpf)",
          "Créditos": "3",
          "Data": "27/04/2025",
          "Hora": "14:44:15",
          "URL PDF": "https://storage.googleapis.com/a2p-v2-storage/863e8e85-41e1-4e2a-922f-f7d0ee73a883",
          "Origem Consulta": "https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/e73H94Q8AeAT/",
          "Opção Consulta": "CPF 3",
          "exec": "https://n8n.redequeroimoveis.com/workflow/FV9ZKVmXhKN0l5kr/executions/674215"
        }
      }
    ],
    "HTTP Request": [
      {
        "json": {}
      }
    ],
    "HTTP Request3": [
      {
        "json": {
          "data": {
            "Version": "1.0",
            "Status": 200,
            "SCPC": [
              {
                "Dt Ocorr": "10/04/2023",
                "Tp Devedor": "T",
                "Nome": "BANCO C6 SA",
                "Vr Dívida": "R$ 990,76",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "MANCC32676277880",
                "Dt Disp": "10/05/2023"
              },
              {
                "Dt Ocorr": "31/12/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/ESCOLA CRIAR-TE",
                "Vr Dívida": "R$ 7.126,82",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "2020061",
                "Dt Disp": "30/01/2023"
              },
              {
                "Dt Ocorr": "09/01/2022",
                "Tp Devedor": "T",
                "Nome": "ITAU UNIBANCO HOLDING SA",
                "Vr Dívida": "R$ 939,86",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "002781068160000",
                "Dt Disp": "08/02/2022"
              },
              {
                "Dt Ocorr": "13/12/2021",
                "Tp Devedor": "T",
                "Nome": "ITAU UNIBANCO S/A",
                "Vr Dívida": "R$ 3.077,24",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "000001872649932",
                "Dt Disp": "12/01/2022"
              },
              {
                "Dt Ocorr": "08/12/2021",
                "Tp Devedor": "T",
                "Nome": "LOJAS CEM/MATRIZ",
                "Vr Dívida": "R$ 4.038,30",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "UP=0;96;28613282",
                "Dt Disp": "07/01/2022"
              },
              {
                "Dt Ocorr": "11/10/2021",
                "Tp Devedor": "T",
                "Nome": "SP-CGT/LOJA OUSADIA",
                "Vr Dívida": "R$ 170,00",
                "Cidade": "CARAGUATATUBA",
                "UF": "SP",
                "Contrato": "139869/4",
                "Dt Disp": "10/11/2021"
              },
              {
                "Dt Ocorr": "07/09/2021",
                "Tp Devedor": "T",
                "Nome": "DMCARD PROC DE DADOS E C DE A LTDA",
                "Vr Dívida": "R$ 512,37",
                "Cidade": "SCPC SAO PAULO",
                "UF": "SP",
                "Contrato": "32676277880-0002896083",
                "Dt Disp": "07/10/2021"
              },
              {
                "Dt Ocorr": "02/04/2024",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 846,81",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "02/05/2024"
              },
              {
                "Dt Ocorr": "02/04/2024",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.346,65",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "02/05/2024"
              },
              {
                "Dt Ocorr": "21/12/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.889,38",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "20/01/2024"
              },
              {
                "Dt Ocorr": "26/07/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 351,41",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "25/08/2023"
              },
              {
                "Dt Ocorr": "26/07/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 390,19",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "25/08/2023"
              },
              {
                "Dt Ocorr": "26/07/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 675,17",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "25/08/2023"
              },
              {
                "Dt Ocorr": "28/03/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 7.126,82",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DS/",
                "Dt Disp": "27/04/2023"
              },
              {
                "Dt Ocorr": "15/02/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 258,32",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "17/03/2023"
              },
              {
                "Dt Ocorr": "10/02/2023",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 464,54",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "12/03/2023"
              },
              {
                "Dt Ocorr": "02/09/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 523,29",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/DM/",
                "Dt Disp": "02/10/2022"
              },
              {
                "Dt Ocorr": "12/04/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.630,45",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "12/05/2022"
              },
              {
                "Dt Ocorr": "12/04/2022",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 1.698,00",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/CD/",
                "Dt Disp": "12/05/2022"
              },
              {
                "Dt Ocorr": "24/11/2021",
                "Tp Devedor": "T",
                "Nome": "SP-UTB/1 CARTORIO",
                "Vr Dívida": "R$ 3.816,30",
                "Cidade": "UBATUBA",
                "UF": "SP",
                "Contrato": "UTB/NP/",
                "Dt Disp": "24/12/2021"
              }
            ],
            "Protesto": [
              {
                "Data": "24/11/2021",
                "Valor Protesto": "R$ 3.816,30",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "12/04/2022",
                "Valor Protesto": "R$ 1.698,00",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "12/04/2022",
                "Valor Protesto": "R$ 1.630,45",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "02/09/2022",
                "Valor Protesto": "R$ 523,29",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "31/01/2023",
                "Valor Protesto": "R$ 3.624,80",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "10/02/2023",
                "Valor Protesto": "R$ 464,54",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "15/02/2023",
                "Valor Protesto": "R$ 258,32",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "28/03/2023",
                "Valor Protesto": "R$ 7.126,82",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/07/2023",
                "Valor Protesto": "R$ 351,41",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/07/2023",
                "Valor Protesto": "R$ 675,17",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/07/2023",
                "Valor Protesto": "R$ 390,19",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "21/12/2023",
                "Valor Protesto": "R$ 1.889,38",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "02/04/2024",
                "Valor Protesto": "R$ 1.346,65",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "02/04/2024",
                "Valor Protesto": "R$ 846,81",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "24/10/2024",
                "Valor Protesto": "R$ 728,15",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "26/12/2024",
                "Valor Protesto": "R$ 763,28",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "10/01/2025",
                "Valor Protesto": "R$ 2.604,14",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              },
              {
                "Data": "25/02/2025",
                "Valor Protesto": "R$ 768,83",
                "Cartório": "01",
                "Cidade": "UBATUBA",
                "UF": "SP"
              }
            ],
            "REFIN/PEFIN": [],
            "SERASA": {
              "Dados Gerais": [
                {
                  "Data Primeira Ocorrência": "",
                  "Data Última Ocorrência": "",
                  "Quantidade Ocorrências": 60
                }
              ]
            },
            "CADIN": [],
            "SICCF": [],
            "Cheque sem Fundos": [],
            "Pendências REFIN/PEFIN": [
              {
                "Dt Ocorr": "09/01/2022",
                "Tipo": "R-CART CREDI",
                "Avalista": "N",
                "Vr Dívida": "939,86",
                "Contrato": "2781068160000",
                "Instituição": "060872504000123"
              },
              {
                "Dt Ocorr": "13/12/2021",
                "Tipo": "R-CRED FINAN",
                "Avalista": "N",
                "Vr Dívida": "3.077,24",
                "Contrato": "0001872649932",
                "Instituição": "060701190000104"
              },
              {
                "Dt Ocorr": "12/09/2021",
                "Tipo": "R-CRED FINAN",
                "Avalista": "N",
                "Vr Dívida": "19.504,00",
                "Contrato": "015000229668",
                "Instituição": "059588111000103"
              },
              {
                "Dt Ocorr": "10/12/2023",
                "Tipo": "R-EMPRES CTA",
                "Avalista": "N",
                "Vr Dívida": "156,06",
                "Contrato": "237106",
                "Instituição": "008561701000101"
              },
              {
                "Dt Ocorr": "14/12/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "441388001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/03/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "10327001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "10/02/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "53829001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "19/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "00315001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "19/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "00313001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "14/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,94",
                "Contrato": "70635001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "84906001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "250,00",
                "Contrato": "52516001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "01/01/2022",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "15.108,73",
                "Contrato": "92228001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/12/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "81725001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "26/11/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "52588001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "08/11/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "89876001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "10/10/2021",
                "Tipo": "R-CRED FINAN",
                "Avalista": "N",
                "Vr Dívida": "108,94",
                "Contrato": "149250882",
                "Instituição": "004088208000165"
              },
              {
                "Dt Ocorr": "07/10/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "09396001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/10/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "36061001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "25/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "845,20",
                "Contrato": "70266001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "25/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "70268001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "24/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "69134001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "24/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "69133001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "14/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "96017001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "14/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "96021001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "46992001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/09/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "16389001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "16/08/2021",
                "Tipo": "P-CONS VEICU",
                "Avalista": "N",
                "Vr Dívida": "1.715,71",
                "Contrato": "399/735-37",
                "Instituição": "045441789000154"
              },
              {
                "Dt Ocorr": "07/08/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "23482001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "17/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "44376001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "09/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "86370001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "37187001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/07/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "56549001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "30/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "28301001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "09/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "09383001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "09/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "09384001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/06/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "53327001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "07/05/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "63707001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "23/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "03354001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "18/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "78283001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "18/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "78285001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "05/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "99602001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/04/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "89881001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "04/03/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "281,74",
                "Contrato": "62600001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/03/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "34878001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/02/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "84506001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/01/2021",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "83691001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "17/12/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "22071001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/12/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "44318001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "11/11/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "281,74",
                "Contrato": "92311001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "11/11/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "92312001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/11/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "50136001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "13/10/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "187,42",
                "Contrato": "48584001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/10/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "01955001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/09/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "1.689,00",
                "Contrato": "64544001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "12/08/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "68619001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "03/08/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "124,96",
                "Contrato": "23600001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/07/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "899,00",
                "Contrato": "75679001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "02/05/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "899,00",
                "Contrato": "40321001",
                "Instituição": "010215988000160"
              },
              {
                "Dt Ocorr": "23/04/2020",
                "Tipo": "R-OUTRAS OPE",
                "Avalista": "N",
                "Vr Dívida": "845,20",
                "Contrato": "09941001",
                "Instituição": "010215988000160"
              }
            ],
            "Nome": "ANDERSON DOS SANTOS JORGE"
          }
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "n8n.redequeroimoveis.com",
            "content-length": "479",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "content-type": "application/json",
            "user-agent": "axios/1.8.2",
            "accept-encoding": "gzip, compress, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "CPF": "70583924123",
            "Telefone": "+553799781110",
            "Webhook": "https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/e73H94Q8AeAT/",
            "URL_LogoPDF": "semlogo",
            " Tipo consulta": "Completa",
            "Informações": "### Dados Pessoais\n*Nome:* NEILTON RODRIGUES DOS SANTOS\n*CPF:* 70583924123\n*Nascimento:* 16/10/1999\n*Nome da Mãe:* LUCINEIDE DAVI DOS SANTOS\n\n## *Telefones*\n- 5562993115118",
            "RequestToken": null,
            "tipo_ehmconsultas": "cpf_pros",
            "status_ehmconsultas": "true"
          },
          "webhookUrl": "http://localhost:5678/webhook-test/dividas-cpf_3-1-1",
          "executionMode": "test"
        }
      }
    ]
  },
  "versionId": "ce42d430-61ff-4907-b733-a09be7efcc1e",
  "triggerCount": 1,
  "tags": []
}