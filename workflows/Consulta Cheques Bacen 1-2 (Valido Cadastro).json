{
  "createdAt": "2025-07-25T01:16:00.085Z",
  "updatedAt": "2025-07-25T17:21:24.000Z",
  "id": "bmzYF8lSEfi97bzB",
  "name": "Consulta Cheques Bacen 1-2 (Valido Cadastro)",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json['Cheques Sem Fundos'].OCORRENCIAS[0] }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "04fdbd5c-f10b-4cdd-bb97-320dfe7ece3c",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1020,
        940
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            },
            {
              "name": "Informações",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}\n\n----------- / / -----------\n\n{{ $('Aggregate6').item.json.Consulta[1].Dados }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Tipo Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Tipo Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}"
            }
          ]
        },
        "options": {}
      },
      "id": "56994379-5b18-4db4-8ac6-f26526ee16c3",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3880,
        680
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "Consulta",
        "options": {}
      },
      "id": "e7af6b5e-4e47-43d6-a1d3-87aef521b8c6",
      "name": "Aggregate6",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2020,
        700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7871e4ab-2a18-4c60-a4b7-074ec47c43a8",
              "name": "Dados",
              "value": "={{ $json.CREDCADASTRAL }}",
              "type": "object"
            },
            {
              "id": "6c7b8c24-5692-4bc2-b32b-0fe9bda5ee1f",
              "name": "Pendencias",
              "value": "={{ $json.CREDCADASTRAL.PEND_FINANCEIRAS.OCORRENCIAS }}",
              "type": "array"
            },
            {
              "id": "7aa45f09-5560-435e-b054-5c39318af86c",
              "name": "Cheques Sem Fundos",
              "value": "={{ $json.CREDCADASTRAL.CH_SEM_FUNDOS_BACEN }}",
              "type": "object"
            },
            {
              "id": "8e925989-b41e-43f6-8c9b-60505ec5fdf8",
              "name": "Score",
              "value": "={{ $json.CREDCADASTRAL.SCORES }}",
              "type": "object"
            },
            {
              "id": "5e5fdf84-a46a-46c1-b2d9-75a86df205cd",
              "name": "CADIN",
              "value": "={{ $json.CREDCADASTRAL.CADIN }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "c75a62d7-1b5e-43cc-aa62-95a843e46e0c",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -1040,
        960
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.validocadastro.com.br/json/service.aspx",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"CodigoProduto\": \"333\",\n    \"Versao\": \"20180521\",\n    \"ChaveAcesso\": \"L1m5egI62W5WEg4WH8ihbwZ8xED1JlJeMXOp8kewYEQG8hA6+S/Ysy/E7Yc9Z1m+\",\n    \"Info\": {\n        \"Solicitante\": \"IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)\"\n    },\n    \"Parametros\": {\n        \"TipoPessoa\": \"{{ $json['Tipo Consulta'] }}\",\n        \"CPFCNPJ\": \"{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}\"\n    },\n    \"WebHook\": {\n        \"UrlCallBack\": \"\"\n    }\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "bac1cf7c-bdbf-45d7-b26e-127e92eca838",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1240,
        960
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.Dados.CH_SEM_FUNDOS_BACEN.STATUS_RETORNO.DESCRICAO }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "7bceb6f6-2830-45bf-8c84-c5113c4bc05f",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -820,
        960
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "220ad0ae-f1bf-4691-b834-96be75faed23",
      "name": "Retornar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4800,
        920
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c70341cc-56f1-488c-a95a-71b654115070",
      "name": "Se crédito existe",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5180,
        920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "39c49922-15ea-4bda-aa49-1d5e803dbb50",
      "name": "Retirar Créditos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        880
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "934c6e78-314b-48d8-95c5-e0a9e542c3b5",
      "name": "Retornar Créditos Disponíveis1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        1080
      ],
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/register/retirarcredits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json.creditos }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3471b8c6-cc69-4c9f-b930-118401d62dfa",
      "name": "Retirar Créditos2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5840,
        1080
      ],
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "=+553799781110"
            }
          ]
        },
        "options": {}
      },
      "id": "6c9d293e-f671-4809-98c5-06f768ea5bc8",
      "name": "Verificar Crédito Arthur",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        1380
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/owwGmbohHVdp/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "=+553799781110"
            },
            {
              "name": "API Crédito",
              "value": "Offline"
            },
            {
              "name": "Telefone Consulta",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Tipo Consulta",
              "value": "Financeiro BuscaSIX"
            }
          ]
        },
        "options": {}
      },
      "id": "e7306ffb-f3c0-4944-9720-b3e3f7b4807a",
      "name": "API Crédito Offline",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6060,
        1400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $('Verificar Crédito Arthur').item.json.creditos }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4814a89f-3201-46b2-98be-5f79cb0e8916",
      "name": "Se crédito existe3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5840,
        1380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4c4b8b4-ac50-4977-b5b7-22b2d88b5eed",
              "name": "Créditos a retirar",
              "value": "={{ $('Dados N8N').item.json['Credito consulta'] }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "b65881ae-4384-43e6-b116-cbb8c28a47fa",
      "name": "Créditos a retirar1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        5000,
        920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6611ca4d-c98b-4930-bf78-78785d12378b",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $('Créditos a retirar1').item.json['Créditos a retirar'] }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b5ba37fc-73a4-4988-9ed0-051275c4e639",
      "name": "Maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5400,
        900
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "553a4e95-35f9-406e-bfec-0e9d4cbe654a",
      "name": "Verificar saldo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5840,
        880
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Retirar Créditos",
        "height": 832.0660667109632,
        "width": 1533.4713488372086
      },
      "id": "8bbeee7d-f90d-4e71-ba00-52f9d420bfd2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4720,
        800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad9c09c1-3aaf-4c42-ab43-9f8f30a12e99",
              "leftValue": "={{ $('Retornar Créditos').item.json.creditos }}",
              "rightValue": "={{ $json.creditos }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "947e9bf5-cd6f-4c8d-8b4e-f5405856d61d",
      "name": "If11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6040,
        880
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Dados",
              "value": "=*Nome:* _{{ $json['Cheques Sem Fundos'].CORRENTISTA }}_\n*CNPJ/CNPJ:* _{{ $json['Cheques Sem Fundos'].CPFCNPJ }}_\n\n*Bacen*\n*Banco:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].NUM_BANCO }}_\n*Agencia:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].NUM_AGENCIA }}_\n*Motivo:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].MOTIVO_DEVOLUCAO }}_\n*Qnt cheques:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].QTD_CHEQUES }}_\n*Data última ocorrência:* _{{ $json['Cheques Sem Fundos'].OCORRENCIAS[0].DT_ULTIMA_OCORRENCIA }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d530b87d-12ef-49a7-ac0a-09b842aa35a9",
      "name": "Mapa - Informações",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1260,
        920
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3db00fee-081d-4b19-99dd-cbc4ab4a0e0e",
              "name": "Tipo Consulta",
              "value": "Consulta BACEN Cheques",
              "type": "string"
            },
            {
              "id": "c166d2b9-681c-4216-8f4d-0d1737c888dd",
              "name": "Credito consulta",
              "value": 2,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "972ebbc9-65c6-4786-b595-fc8753499f47",
      "name": "Dados N8N",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -3400,
        1000
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.validocadastro.com.br/json/service.aspx",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"CodigoProduto\": \"333\",\n    \"Versao\": \"20180521\",\n    \"ChaveAcesso\": \"L1m5egI62W5WEg4WH8ihbwZ8xED1JlJeMXOp8kewYEQG8hA6+S/Ysy/E7Yc9Z1m+\",\n    \"Info\": {\n        \"Solicitante\": \"IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)\"\n    },\n    \"Parametros\": {\n        \"TipoPessoa\": \"{{ $json['Tipo Consulta'] }}\",\n        \"CPFCNPJ\": \"{{ $('Webhook').item.json.body.CPF }}\"\n    },\n    \"WebHook\": {\n        \"UrlCallBack\": \"\"\n    }\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "901b52fe-237e-4036-a42c-75c784e0611d",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1240,
        1160
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Dados",
              "value": "=*Nome:* _{{ $json['Cheques Sem Fundos'].CORRENTISTA }}_\n*CNPJ/CNPJ:* _{{ $json['Cheques Sem Fundos'].CPFCNPJ }}_\n\n*Bacen*\n_Sem pendências registradas._",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4d6f7338-034a-4957-8e79-b0940ab6e8fe",
      "name": "Mapa - Informações1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1340,
        1140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Informações",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Tipo Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Tipo Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "0ebc58c1-9cd5-437e-8ede-b95eec316ea6",
      "name": "HTTP Request4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1220,
        2400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "43902ab5-67fc-4eb8-92d0-b83cee4e5d4d",
              "leftValue": "={{ $json.Dados.CH_SEM_FUNDOS_BACEN.CORRENTISTA }}",
              "rightValue": "CONSULTA CONCLUIDA COM SUCESSO",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "a26d5e73-c71a-4db9-b536-c9be0414be70",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1140,
        1160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Dados",
              "value": "=*CNPJ/CNPJ:* _{{ $json['Cheques Sem Fundos'].CPFCNPJ }}_\n\n*Bacen*\n_Sem pendências registradas._",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0a3efa35-dd0e-420f-af2b-cc73d0e3632c",
      "name": "Mapa - Informações2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1340,
        1360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false; // Verifica se possui 11 dígitos e não é uma sequência repetida\n\n    let soma = 0, resto;\n\n    // Validação do primeiro dígito verificador\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    // Validação do segundo dígito verificador\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false; // Verifica se possui 14 dígitos e não é uma sequência repetida\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o CPF ou CNPJ diretamente do campo 'body.CPF' ou 'body.CNPJ' dentro do 'Webhook'\nconst numero = ($('Webhook').item.json.body.CPF || $('Webhook').item.json.body.CNPJ).replace(/[^\\d]+/g, '');\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido // Retorna true ou false\n        }\n    }\n];\n"
      },
      "id": "b3634b8c-8688-4fe6-b741-064cd076f017",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3080,
        1020
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bfac3c94-a23c-4008-aa6c-dd5fcb21c8e6",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "09465669-ecbc-4f79-a976-0685054c241c",
      "name": "If26",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2880,
        1020
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "76899ebe-6d1c-498b-9e4b-e3ccbea50b2a",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -2900,
        1560
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=O CPF informado é inválido. Verifique os números digitados e tente novamente.\n\nObs: Digite apenas números, sem pontos, traços ou espaços."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "e19dba4f-bdab-4ae1-8304-4ec8f544e1d1",
      "name": "HTTP Request7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3100,
        1560
      ]
    },
    {
      "parameters": {
        "content": "## CPF / CNPJ inválido",
        "height": 817.3436136695202,
        "width": 456.60627452732734,
        "color": 3
      },
      "id": "43adf527-3abf-4ead-be8f-11f9f64bba3d",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3160,
        900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a7d99aeb-e37d-485d-8e8b-05393ba35b53",
      "name": "If28",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3100,
        1340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Telefone BC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "CPF inválido"
            },
            {
              "name": "Informações",
              "value": "=Erro"
            },
            {
              "name": "Nome Menu",
              "value": "=_{{ $('Dados N8N').item.json['Tipo Consulta'] }}_"
            },
            {
              "name": "Nome Menu Status",
              "value": "={{ $('Dados N8N').item.json['Tipo Consulta'] }} - Online"
            },
            {
              "name": "URL PDF",
              "value": "=Erro"
            }
          ]
        },
        "options": {}
      },
      "id": "4566c9fc-b230-4bd9-bd19-37245e91a1a0",
      "name": "HTTP Request5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2900,
        1340
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b49de03b-95c3-4eda-9803-4f5201404e9d",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1220,
        2560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bf9973c5-114d-4919-9fe2-96b89cfe5a82",
      "name": "If27",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1040,
        2400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "f38c4de2-d547-42e7-b274-d5b1fbca71a0",
      "name": "HTTP Request8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        2560
      ]
    },
    {
      "parameters": {
        "content": "## ERRO CONSULTA",
        "height": 617.54211011334,
        "width": 463.0557878889166,
        "color": 3
      },
      "id": "2a2c1eb7-561a-4d5e-8d01-c90ed722a319",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        940,
        2120
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9bd314ab-48cb-4596-96fa-377aef133762",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        3880,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eac5b724-1777-4b56-85dc-14b7b1659aad",
      "name": "If29",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3680,
        700
      ]
    },
    {
      "parameters": {
        "content": "## ENVIAR RESULTADO CONSULTA SITE",
        "height": 540.823728738776,
        "width": 462.8961536434481,
        "color": 2
      },
      "id": "ece7bd13-eb98-46b7-96cc-0fb3081e1535",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3620,
        580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=\n\n## PDF - 01\n{{ $('Gerar PDF API').item.json.FileUrl }}\n\n\n______________________________________________________________\n\n\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}\n\n--------------------- / / ---------------------\n\n{{ $('Aggregate6').item.json.Consulta[1].Dados.replace(/_ /g, '_').replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "a632c1f7-a79b-49ae-b496-571beae549e4",
      "name": "HTTP Request10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3680,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9b2738c6-cc21-4fef-812f-2a923fdabbd9",
      "name": "If10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2020,
        960
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/UfO1nbtNGdqa/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "=+553799781110"
            },
            {
              "name": "Consulta",
              "value": "=*Telefone:* _{{ $('Webhook').item.json.body.Telefone }}_\n*CPF / CNPJ:* _{{ $('Webhook').item.json.body.CPF }}_\n\n-----------//-----------\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "cd02da0d-4947-41a8-b334-331f240552a5",
      "name": "Acompanhar consulta site (Botconversa)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4220,
        1040
      ],
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "289599dc-4178-4f73-9367-2931901cd7ba",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1020,
        1580
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtém a data e hora do campo\nconst currentDate = new Date($('Date & Time1').item.json.currentDate);\n\n// Converte para o horário de São Paulo (GMT-3)\nconst options = { timeZone: 'America/Sao_Paulo', hour12: false };\nconst brazilianTime = new Date(currentDate.toLocaleString('en-US', options));\n\n// Obtém o dia da semana (0 = Domingo, 1 = Segunda, ..., 6 = Sábado) e a hora\nconst dayOfWeek = brazilianTime.getDay(); // 0=Domingo, 1=Segunda, ..., 6=Sábado\nconst hour = brazilianTime.getHours();\n\n// Verifica se a hora está entre 08:00 e 18:00 e se o dia é útil (segunda a sexta)\nif (hour >= 9 && hour < 18 && dayOfWeek >= 1 && dayOfWeek <= 5) {\n    return {\n        json: {\n            status: 'Horário funcionamento'\n        }\n    };\n} else {\n    return {\n        json: {\n            status: 'Fora do horário'\n        }\n    };\n}\n"
      },
      "id": "b8f49ebe-2a05-43e7-aa8e-806a599ebaf0",
      "name": "Code Horário funcionamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1200,
        1580
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "Tente novamente utilizando outra opção de consulta disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e4291d7c-6065-405b-bbe6-493f5def2964",
      "name": "Horário funcionamento1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1200,
        1740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8ec90439-29cc-4f7e-9318-906539cd9a2d",
              "leftValue": "={{ $json.status }}",
              "rightValue": "funcionamento",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "add452b1-9b8e-4967-ae27-e0adfb21425f",
      "name": "Verificar Horário funcionamento",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1020,
        1740
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00cfe53f-c309-4404-87b3-de0a2064903a",
              "name": "Consulta erro",
              "value": "🕗 Alguns birôs restringem as consultas ao horário comercial. Aguarde até o horário de funcionamento para realizar a consulta e melhor experiência ou tente novamente utilizando outra opção disponível.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fbfe3718-82c6-4787-8932-048ed0ca2f75",
      "name": "Fora do horário",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1020,
        1880
      ]
    },
    {
      "parameters": {
        "content": "## Horário funcionamento",
        "height": 578.2747827033502,
        "width": 397.97803245596407,
        "color": 3
      },
      "id": "37e85f79-b26d-49bc-a7c4-e9d53f89d980",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        960,
        1500
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para validar o CPF\nfunction validarCPF(cpf) {\n    cpf = cpf.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cpf.length !== 11 || /^(\\d)\\1+$/.test(cpf)) return false; // Verifica se possui 11 dígitos e não é uma sequência repetida\n\n    let soma = 0, resto;\n\n    // Validação do primeiro dígito verificador\n    for (let i = 1; i <= 9; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(9, 10))) return false;\n\n    // Validação do segundo dígito verificador\n    soma = 0;\n    for (let i = 1; i <= 10; i++) {\n        soma += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n    resto = (soma * 10) % 11;\n    if (resto === 10 || resto === 11) resto = 0;\n    if (resto !== parseInt(cpf.substring(10, 11))) return false;\n\n    return true;\n}\n\n// Função para validar o CNPJ\nfunction validarCNPJ(cnpj) {\n    cnpj = cnpj.replace(/[^\\d]+/g, ''); // Remove caracteres não numéricos\n    if (cnpj.length !== 14 || /^(\\d)\\1+$/.test(cnpj)) return false; // Verifica se possui 14 dígitos e não é uma sequência repetida\n\n    let tamanho = cnpj.length - 2;\n    let numeros = cnpj.substring(0, tamanho);\n    let digitos = cnpj.substring(tamanho);\n    let soma = 0;\n    let pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(0)) return false;\n\n    tamanho = tamanho + 1;\n    numeros = cnpj.substring(0, tamanho);\n    soma = 0;\n    pos = tamanho - 7;\n\n    for (let i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) pos = 9;\n    }\n\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n    if (resultado != digitos.charAt(1)) return false;\n\n    return true;\n}\n\n// Captura o CPF ou CNPJ diretamente do campo 'body.CPF' ou 'body.CNPJ' dentro do 'Webhook'\nconst numero = $('Webhook').item.json.body.CPF || $('Webhook').item.json.body.CNPJ;\nconst tipo = numero.length === 11 ? 'CPF' : 'CNPJ';\nconst valido = tipo === 'CPF' ? validarCPF(numero) : validarCNPJ(numero);\n\nreturn [\n    {\n        json: {\n            numeroOriginal: numero,\n            tipo: tipo,\n            valido: valido // Retorna true ou false\n        }\n    }\n];\n"
      },
      "id": "5efa0bb1-e0c8-41af-b9ab-95e9e852da6c",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3040,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8e0363a5-1e0a-42f9-a5aa-1488030ed12a",
              "leftValue": "={{ $json.RETORNO.CADASTRAIS.NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f9fb50b8-8300-4096-88ba-e29f048bc4f2",
      "name": "If35",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        480
      ]
    },
    {
      "parameters": {
        "jsCode": "// Captura o retorno do JSON\nconst retorno = $json.RETORNO || {};\nconst cadastrais = retorno.CADASTRAIS || {};\nconst telefonesFixo = retorno.TELEFONES_FIXO?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_FIXO.TELEFONE) \n        ? retorno.TELEFONES_FIXO.TELEFONE \n        : [retorno.TELEFONES_FIXO.TELEFONE] \n    : [];\nconst telefonesMovel = retorno.TELEFONES_MOVEL?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_MOVEL.TELEFONE) \n        ? retorno.TELEFONES_MOVEL.TELEFONE \n        : [retorno.TELEFONES_MOVEL.TELEFONE] \n    : [];\nconst emails = retorno.EMAILS?.EMAIL \n    ? Array.isArray(retorno.EMAILS.EMAIL) \n        ? retorno.EMAILS.EMAIL \n        : [retorno.EMAILS.EMAIL] \n    : [];\n// const enderecos = retorno.ENDERECOS?.ENDERECO \n//   ? Array.isArray(retorno.ENDERECOS.ENDERECO) \n//       ? retorno.ENDERECOS.ENDERECO \n//       : [retorno.ENDERECOS.ENDERECO] \n//   : [];\nconst parentes = retorno.POSSIVEIS_PARENTES?.CONTATO \n    ? Array.isArray(retorno.POSSIVEIS_PARENTES.CONTATO) \n        ? retorno.POSSIVEIS_PARENTES.CONTATO \n        : [retorno.POSSIVEIS_PARENTES.CONTATO] \n    : [];\nconst empresas = retorno.EMPRESAS_SOCIO?.EMPRESA_SOCIO \n    ? Array.isArray(retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO) \n        ? retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO \n        : [retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO] \n    : [];\n\n// Função para tratar dados\nfunction formatField(value) {\n    return value && value.trim() !== \"\" && value !== \"undefined\" ? value : null;\n}\n\n// Cria uma lista formatada com limite de itens\nfunction formatList(items, limit) {\n    return items.slice(0, limit).map(item => `- ${item}`).join('\\n');\n}\n\n// Monta o texto formatado\nlet formattedText = `*Nome:* _${formatField(cadastrais.NOME) || \"Não informado\"}_\n*CPF:* _${formatField(cadastrais.CPF) || \"Não informado\"}_\n*Data Nascimento:* _${formatField(cadastrais.NASCTO) || \"Não informado\"}_\n*Idade:* _${formatField(cadastrais.IDADE) || \"Não informado\"}_\\n\\n`;\n\n// Telefones\nconst allTelefones = [\n    ...telefonesFixo.map(tel => tel.NUMERO),\n    ...telefonesMovel.map(tel => tel.NUMERO)\n].filter(num => formatField(num)).slice(0, 5);\n\nif (allTelefones.length > 0) {\n    formattedText += `## *Telefone*\\n${formatList(allTelefones, 5)}\\n\\n`;\n}\n\n// Emails\nif (emails.length > 0) {\n    formattedText += `## *Email*\\n${formatList(emails.filter(email => formatField(email)), 5)}\\n\\n`;\n}\n\n// Endereços\n// if (enderecos.length > 0) {\n//     formattedText += `## *Endereços*\\n`;\n//     enderecos.slice(0, 3).forEach((endereco, index) => {\n//         formattedText += `*${index + 1}.*\\n`;\n//         formattedText += `*Logradouro:* _${formatField(endereco.LOGRADOURO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Número:* _${formatField(endereco.NUMERO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Complemento:* _${formatField(endereco.COMPLEMENTO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Bairro:* _${formatField(endereco.BAIRRO) || \"Não informado\"}_\\n`;\n//         formattedText += `*CEP:* _${formatField(endereco.CEP) || \"Não informado\"}_\\n`;\n//         formattedText += `*Cidade:* _${formatField(endereco.CIDADE) || \"Não informado\"}_\\n`;\n//         formattedText += `*Estado:* _${formatField(endereco.ESTADO) || \"Não informado\"}_\\n\\n`;\n//     });\n// }\n\n// Possíveis Parentes\nif (parentes.length > 0) {\n    const formattedParentes = parentes.slice(0, 5).map(parente => {\n        return `- _${formatField(parente.NOME) || \"Desconhecido\"} - ${formatField(parente.PARENTESCO) || \"Não informado\"}_`;\n    });\n    formattedText += `## *Possíveis Parentes*\\n${formattedParentes.join('\\n')}\\n\\n`;\n}\n\n// Empresas\nif (empresas.length > 0) {\n    formattedText += `## *Empresas*\\n`;\n    empresas.slice(0, 5).forEach((empresa, index) => {\n        formattedText += `*${index + 1}.*\\n`;\n        formattedText += `*Razão Social:* _${formatField(empresa.RAZAO_SOCIAL) || \"Não informado\"}_\\n`;\n        formattedText += `*CNPJ:* _${formatField(empresa.CNPJ) || \"Não informado\"}_\\n`;\n        formattedText += `*Cidade:* _${formatField(empresa.CIDADE) || \"Não informado\"}_\\n`;\n        formattedText += `*Qualificação:* _${formatField(empresa.QUALIFICACAO) || \"Não informado\"}_\\n`;\n        formattedText += `*Data Entrada:* _${formatField(empresa.DATA_ENTRADA) || \"Não informado\"}_\\n\\n`;\n    });\n}\n\n// Resultado\nreturn { formattedText };\n"
      },
      "id": "8469e500-bc5c-4518-b0d8-eb5b3e15f359",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        460
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedText }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1f0f4eb3-37a9-4d6d-96b2-86d5d952c96b",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        760,
        460
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "=http://confere.link/api/?acao=CONS_CPF&TK=IGGE-FAO-566021-PUN-4WT4&DADO={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 180000
        }
      },
      "id": "9541939e-9792-462a-880a-0a97693b12bd",
      "name": "Informações confere.link",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -240,
        480
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "position": [
        -40,
        480
      ],
      "typeVersion": 1,
      "id": "57deef10-44d8-45e2-826d-79269ebb8abe",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "attrkey": "$",
          "explicitRoot": true,
          "mergeAttrs": false
        }
      },
      "name": "XML",
      "type": "n8n-nodes-base.xml",
      "position": [
        140,
        480
      ],
      "typeVersion": 1,
      "id": "8e753f1a-91b8-4eca-ba3b-6f61e5dd2b4c",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c03549c2-86e4-473b-9be6-8a993248dc49",
      "name": "If36",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        940,
        460
      ]
    },
    {
      "parameters": {},
      "id": "a8ff6d97-8c6a-4224-b061-801b9cb612dd",
      "name": "Merge58",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1620,
        900
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0024250-715b-4df8-b09d-4c515dcbab1d",
              "name": "Informações",
              "value": "=*Nome:* _{{ $('HTTP Request').item.json.CREDCADASTRAL.CH_SEM_FUNDOS_BACEN.CORRENTISTA }}_\n*CNPJ/CNPJ:* _{{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2c9b6823-62d6-4b09-a569-9418a1bd3ef6",
      "name": "Mapa - Informações3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        940,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "82607e7b-ebb4-46e0-81eb-ab5a3abc6892",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "9844a1ba-9af7-438a-bb70-4335051dcd30",
      "name": "se typebot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3100,
        1180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: o CPF informado é inválido. Por favor, digite o CPF corretamente 🚨",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "abd49629-b891-4fda-a193-1e28290acafa",
      "name": "typebot",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -2660,
        1180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "4a0fde80-3bd1-4e43-ab17-9e4b4e186f7f",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "d171a776-8ffa-4e2c-878b-975e43667248",
      "name": "se typebot1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1040,
        2240
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "={{ $('se typebot1').item.json['Consulta erro'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "09ebbd28-cbbf-4796-84ff-fb7c6d65fa25",
      "name": "typebot1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1420,
        2240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a8295811-4c4d-4c6f-8cbf-be7035231d06",
      "name": "se typebot2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3700,
        420
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://v2.api2pdf.com/chrome/pdf/html",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "085551d3-3165-49d6-9fff-22ac23f127b9"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $json.output.replace('URL-LOGO', $('Google Sheets').item.json['URL PDF Imagem'] || 'https://i.imgur.com/g0gImpK.jpeg').replace(\"```html\", \"\").replace(\"```\", \"\") }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "9a677689-ea3c-42b6-8db5-86f160100a19",
      "name": "Gerar PDF API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3140,
        2020
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1KJ6pes3i5NfUaBNLgor2iYMEHuG69uVDHS_X9xBzZu0/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": 595284221,
          "mode": "list",
          "cachedResultName": "Dados trabalhados",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1KJ6pes3i5NfUaBNLgor2iYMEHuG69uVDHS_X9xBzZu0/edit#gid=595284221"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Telefone",
              "lookupValue": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "629d888c-5c30-4f3b-81d1-91936daad824",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        2580,
        2020
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleApi": {
          "id": "wp0EdElCZ5oZWPuR",
          "name": "Google Service Account account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_BMk1KISD0CRdTERdFq3scmpA",
          "mode": "list",
          "cachedResultName": "criar tabela consultas 2"
        },
        "prompt": "define",
        "text": "={{ $('If10').item.json.Consulta[0]['Informações'] }}\n\n----------------- / / -----------------\n\n{{ $('If10').item.json.Consulta[1].Dados }}",
        "options": {
          "timeout": 120000
        }
      },
      "id": "c201a5b0-85c5-4af0-aafb-31577e835d56",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [
        2760,
        2020
      ],
      "alwaysOutputData": true,
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "X02Q9OolJU4sWt8J",
          "name": "OpenAi account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Captura o retorno do JSON\nconst retorno = $json.RETORNO || {};\nconst cadastrais = retorno.CADASTRAIS || {};\nconst telefonesFixo = retorno.TELEFONES_FIXO?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_FIXO.TELEFONE) \n        ? retorno.TELEFONES_FIXO.TELEFONE \n        : [retorno.TELEFONES_FIXO.TELEFONE] \n    : [];\nconst telefonesMovel = retorno.TELEFONES_MOVEL?.TELEFONE \n    ? Array.isArray(retorno.TELEFONES_MOVEL.TELEFONE) \n        ? retorno.TELEFONES_MOVEL.TELEFONE \n        : [retorno.TELEFONES_MOVEL.TELEFONE] \n    : [];\nconst emails = retorno.EMAILS?.EMAIL \n    ? Array.isArray(retorno.EMAILS.EMAIL) \n        ? retorno.EMAILS.EMAIL \n        : [retorno.EMAILS.EMAIL] \n    : [];\n// const enderecos = retorno.ENDERECOS?.ENDERECO \n//   ? Array.isArray(retorno.ENDERECOS.ENDERECO) \n//       ? retorno.ENDERECOS.ENDERECO \n//       : [retorno.ENDERECOS.ENDERECO] \n//   : [];\nconst parentes = retorno.POSSIVEIS_PARENTES?.CONTATO \n    ? Array.isArray(retorno.POSSIVEIS_PARENTES.CONTATO) \n        ? retorno.POSSIVEIS_PARENTES.CONTATO \n        : [retorno.POSSIVEIS_PARENTES.CONTATO] \n    : [];\nconst empresas = retorno.EMPRESAS_SOCIO?.EMPRESA_SOCIO \n    ? Array.isArray(retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO) \n        ? retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO \n        : [retorno.EMPRESAS_SOCIO.EMPRESA_SOCIO] \n    : [];\n\n// Função para tratar dados\nfunction formatField(value) {\n    return value && value.trim() !== \"\" && value !== \"undefined\" ? value : null;\n}\n\n// Cria uma lista formatada com limite de itens\nfunction formatList(items, limit) {\n    return items.slice(0, limit).map(item => `- ${item}`).join('\\n');\n}\n\n// Monta o texto formatado\nlet formattedText = `*Nome:* _${formatField(cadastrais.NOME) || \"Não informado\"}_\n*CPF:* _${formatField(cadastrais.CPF) || \"Não informado\"}_\n*Data Nascimento:* _${formatField(cadastrais.NASCTO) || \"Não informado\"}_\n*Idade:* _${formatField(cadastrais.IDADE) || \"Não informado\"}_\\n\\n`;\n\n// Telefones\nconst allTelefones = [\n    ...telefonesFixo.map(tel => tel.NUMERO),\n    ...telefonesMovel.map(tel => tel.NUMERO)\n].filter(num => formatField(num)).slice(0, 5);\n\nif (allTelefones.length > 0) {\n    formattedText += `## *Telefone*\\n${formatList(allTelefones, 5)}\\n\\n`;\n}\n\n// Emails\nif (emails.length > 0) {\n    formattedText += `## *Email*\\n${formatList(emails.filter(email => formatField(email)), 5)}\\n\\n`;\n}\n\n// Endereços\n// if (enderecos.length > 0) {\n//     formattedText += `## *Endereços*\\n`;\n//     enderecos.slice(0, 3).forEach((endereco, index) => {\n//         formattedText += `*${index + 1}.*\\n`;\n//         formattedText += `*Logradouro:* _${formatField(endereco.LOGRADOURO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Número:* _${formatField(endereco.NUMERO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Complemento:* _${formatField(endereco.COMPLEMENTO) || \"Não informado\"}_\\n`;\n//         formattedText += `*Bairro:* _${formatField(endereco.BAIRRO) || \"Não informado\"}_\\n`;\n//         formattedText += `*CEP:* _${formatField(endereco.CEP) || \"Não informado\"}_\\n`;\n//         formattedText += `*Cidade:* _${formatField(endereco.CIDADE) || \"Não informado\"}_\\n`;\n//         formattedText += `*Estado:* _${formatField(endereco.ESTADO) || \"Não informado\"}_\\n\\n`;\n//     });\n// }\n\n// Possíveis Parentes\nif (parentes.length > 0) {\n    const formattedParentes = parentes.slice(0, 5).map(parente => {\n        return `- _${formatField(parente.NOME) || \"Desconhecido\"} - ${formatField(parente.PARENTESCO) || \"Não informado\"}_`;\n    });\n    formattedText += `## *Possíveis Parentes*\\n${formattedParentes.join('\\n')}\\n\\n`;\n}\n\n// Empresas\nif (empresas.length > 0) {\n    formattedText += `## *Empresas*\\n`;\n    empresas.slice(0, 5).forEach((empresa, index) => {\n        formattedText += `*${index + 1}.*\\n`;\n        formattedText += `*Razão Social:* _${formatField(empresa.RAZAO_SOCIAL) || \"Não informado\"}_\\n`;\n        formattedText += `*CNPJ:* _${formatField(empresa.CNPJ) || \"Não informado\"}_\\n`;\n        formattedText += `*Cidade:* _${formatField(empresa.CIDADE) || \"Não informado\"}_\\n`;\n        formattedText += `*Qualificação:* _${formatField(empresa.QUALIFICACAO) || \"Não informado\"}_\\n`;\n        formattedText += `*Data Entrada:* _${formatField(empresa.DATA_ENTRADA) || \"Não informado\"}_\\n\\n`;\n    });\n}\n\n// Resultado\nreturn { formattedText };\n"
      },
      "id": "9d83c4a2-19fa-4a60-be9d-9674d9ba8c5c",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        220
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedText }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c188621e-ee7a-40a3-805f-224711a3cf05",
      "name": "Edit Fields13",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        760,
        220
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set4",
      "type": "n8n-nodes-base.set",
      "position": [
        -40,
        240
      ],
      "typeVersion": 1,
      "id": "35f2650e-5689-436d-bfb6-5bdc59aa20d2",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "attrkey": "$",
          "explicitRoot": true,
          "mergeAttrs": false
        }
      },
      "name": "XML4",
      "type": "n8n-nodes-base.xml",
      "position": [
        140,
        240
      ],
      "typeVersion": 1,
      "id": "129901e1-2d06-4339-bd5d-55a3224d8ef4",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const data = $json;\n\n// Helper function to clean up and limit array data\nfunction formatArray(items, fields, limit = 5) {\n    const uniqueItems = [...new Set(\n        items\n            .filter(item => fields.some(field => item[field]))\n            .map(item => fields.map(field => item[field]).filter(Boolean).join(\" - \"))\n    )];\n    return uniqueItems.slice(0, limit).join(\"\\n- \");\n}\n\n// Extracting and formatting data\nconst personalData = data.msg['Dados Pessoais'] || {};\nconst documents = data.msg['Documentos'] || {};\nconst relatives = data.msg.Parentes || [];\nconst phones = data.msg.Telefones || [];\nconst emails = data.msg.Emails || [];\nconst addresses = data.msg.Enderecos || [];\n\n// Prepare formatted output\nlet formattedData = `### Dados Pessoais\n*Nome:* ${personalData.Nome || ''}\n*CPF:* ${documents.CPF || ''}\n*Nascimento:* ${personalData.Nascimento || ''}\n*Nome da Mãe:* ${personalData['Nome da Mae'] || ''}\n`;\n\nif (phones.length > 0) {\n    const formattedPhones = formatArray(phones, ['Telefone']);\n    if (formattedPhones) {\n        formattedData += `\\n\\n## *Telefones*\\n- ${formattedPhones}`;\n    }\n}\n\nif (emails.length > 0) {\n    const formattedEmails = formatArray(emails, ['E-mail']);\n    if (formattedEmails) {\n        formattedData += `\\n\\n## *E-mails*\\n- ${formattedEmails}`;\n    }\n}\n\nif (relatives.length > 0) {\n    const formattedRelatives = formatArray(relatives, ['Nome Vinculo', 'Vinculo']);\n    if (formattedRelatives) {\n        formattedData += `\\n\\n## *Possíveis Parentes*\\n- ${formattedRelatives}`;\n    }\n}\n\n// if (addresses.length > 0) {\n//     const formattedAddresses = formatArray(addresses, ['Rua', 'Bairro', 'CEP', 'Cidade', 'Estado']);\n//     if (formattedAddresses) {\n//         formattedData += `\\n\\n### Endereços\\n- ${formattedAddresses}`;\n//     }\n// }\n\n// Removing unnecessary lines with undefined values\nformattedData = formattedData\n    .split('\\n')\n    .filter(line => !line.includes('undefined') && line.trim() !== '• **CPF:**' && line.trim() !== '• **RG:**')\n    .join('\\n');\n\n// Output the formatted data\nreturn [{ json: { formattedData: formattedData.trim() } }];\n"
      },
      "id": "f8cae6e4-7bfe-4758-9e3e-543de948aefe",
      "name": "Code14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -60,
        -200
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "875cdf8f-d749-4908-b42d-b422e9e1493d",
              "name": "Informações",
              "value": "={{ $json.formattedData }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "44546798-1738-4fc8-b6e8-76ee2863371f",
      "name": "Edit Fields14",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        140,
        -200
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b8a8725c-4de0-49c8-8c64-37d71eee7859",
      "name": "If47",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        -200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8b8095b1-ba11-4306-8602-9e78be3503cd",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "Nome:",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "79722988-fb3c-443c-97bf-2e1bf299b9ca",
      "name": "If13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        320,
        20
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função para calcular idade com base na data de nascimento\nfunction calcularIdade(dataNasc) {\n    const hoje = new Date();\n    const [dia, mes, ano] = dataNasc.split('/');\n    const nascimento = new Date(`${ano}-${mes}-${dia}`);\n    let idade = hoje.getFullYear() - nascimento.getFullYear();\n    const mesAtual = hoje.getMonth();\n    const diaAtual = hoje.getDate();\n    if (mesAtual < nascimento.getMonth() || \n       (mesAtual === nascimento.getMonth() && diaAtual < nascimento.getDate())) {\n        idade--;\n    }\n    return idade;\n}\n\n// Função para evitar duplicatas\nfunction removerDuplicatas(array) {\n    return array.filter((item, index, self) =>\n        index === self.findIndex((t) => JSON.stringify(t) === JSON.stringify(item))\n    );\n}\n\n// Capturar o JSON retornado\nconst data = $json.resultado;\nconst dados = data.DADOS?.[0] || {};\nconst emails = removerDuplicatas(data.EMAIL || []).slice(0, 5);\nconst telefones = removerDuplicatas(data.HISTORICO_TELEFONES || [])\n    .filter(tel => tel.TELEFONE && tel.TELEFONE !== \"undefined\")\n    .slice(0, 5)\n    .map(tel => `${tel.DDD}${tel.TELEFONE}`);\nconst parentes = removerDuplicatas(data.PARENTES || []).slice(0, 5);\n\n// Início da formatação\nlet resultadoFormatado = \"\";\n\n// Adicionar dados principais\nif (dados.NOME && dados.CPF && dados.NASC) {\n    const idade = calcularIdade(dados.NASC);\n    resultadoFormatado += `*Nome:* _${dados.NOME}_\\n`;\n    resultadoFormatado += `*CPF:* _${dados.CPF}_\\n`;\n    resultadoFormatado += `*Data Nascimento:* _${dados.NASC}_\\n`;\n    resultadoFormatado += `*Idade:* _${idade} anos_\\n\\n`;\n}\n\n// Adicionar telefones\nif (telefones.length) {\n    resultadoFormatado += `## *Telefone*\\n`;\n    telefones.forEach(tel => {\n        resultadoFormatado += `- ${tel}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar emails\nif (emails.length) {\n    resultadoFormatado += `## *Email*\\n`;\n    emails.forEach(email => {\n        resultadoFormatado += `- ${email.EMAIL}\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Adicionar parentes\nif (parentes.length) {\n    resultadoFormatado += `## *Possíveis Parentes*\\n`;\n    parentes.forEach(parente => {\n        const nome = parente.NOME_VINCULO || \"Não informado\";\n        const vinculo = parente.VINCULO || \"Não informado\";\n        resultadoFormatado += `- _${nome} - ${vinculo}_\\n`;\n    });\n    resultadoFormatado += '\\n';\n}\n\n// Retornar resultado formatado\nreturn {\n    json: {\n        resultadoFormatado: resultadoFormatado.trim()\n    }\n};\n"
      },
      "id": "e16d4191-bea7-452b-abc9-6bb65aec806d",
      "name": "Code15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -40,
        20
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a71f79c-c28b-4ed8-811a-9c130e7df817",
              "name": "Informações",
              "value": "={{ $json.resultadoFormatado }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ee8ffa13-cc7d-44dc-8089-7082833c7233",
      "name": "Edit Fields15",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        140,
        20
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8e0363a5-1e0a-42f9-a5aa-1488030ed12a",
              "leftValue": "={{ $json.RETORNO.CADASTRAIS.NOME }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e138b990-0b92-46ff-8133-b04188ee1b5f",
      "name": "If48",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "803b1141-5ad4-4e73-8e98-f6110d87684a",
              "leftValue": "={{ $json['Informações'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "688878bc-ce72-456c-8267-a9bb425937ac",
      "name": "If49",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        940,
        220
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "62702212-4dbf-418b-9f92-b43bdced5299",
      "name": "If14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1300,
        200
      ]
    },
    {
      "parameters": {
        "url": "=https://api.searchlock.me/evodata?token=eDRFTvybunIMOnibuYVGTCFXcf&tipo=cpf&dados={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "655e8ca2-3186-4440-8473-aa2e8b6e4a90",
      "name": "evodata4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -240,
        -200
      ],
      "disabled": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "url": "=https://typebots.minerdapifoda.xyz:8080/api/cpffull?cpf={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "58c37b53-5dd7-4ef8-80c3-37cdc5a57278",
      "name": "minerdapifoda4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -240,
        20
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "url": "=http://confere.link/api/?acao=CONS_CPF&TK=IGGE-FAO-566021-PUN-4WT4&DADO={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "ea548805-ef18-47b9-a96b-5086e281e131",
      "name": "confere.link4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -240,
        240
      ],
      "retryOnFail": false,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: o CPF informado é inválido. Por favor, digite o CPF corretamente 🚨"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "85557bee-4cb9-4477-922e-ffce213fc927",
      "name": "Resposta Typebot CPF Errado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2880,
        1160
      ],
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://n8n.unisistemas.tech/webhook/resposta-typebot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "={{ $json['Consulta erro'] }}"
            },
            {
              "name": "Retorno Consulta",
              "value": "Erro"
            },
            {
              "name": "Webhook",
              "value": "={{ $('Webhook').item.json.body.Webhook }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ce635074-e75e-4106-90d7-29588251a655",
      "name": "Resposta Typebot Erro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1220,
        2220
      ],
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "valido-cadastro_bacen-1-2",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "b2cc7ab4-b130-4614-a798-4f5ffa369678",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3620,
        1000
      ],
      "webhookId": "56fbf750-1288-4d13-8266-30ed7eeef6d8"
    },
    {
      "parameters": {
        "jsCode": "const agora = new Date().toLocaleString(\"pt-BR\", { timeZone: \"America/Sao_Paulo\" });\n\n// Divide data e hora\nconst [dataStrRaw, horaStr] = agora.split(' ');\nconst dataStr = dataStrRaw.replace(',', '');\n\n// Inverte a data de dd/mm/yyyy para dd/mm/yyyy (sem necessidade, mas ok se quiser manter)\nconst [dia, mes, ano] = dataStr.split('/');\nconst dataFormatada = `${dia}/${mes}/${ano}`;\n\n// Monta a URL da execução\nconst executionId = $execution.id;\nconst workflowId = $workflow.id;\nconst baseUrl = \"https://n8n.redequeroimoveis.com\";\nconst executionUrl = `${baseUrl}/workflow/${workflowId}/executions/${executionId}`;\n\n// Retorna tudo em um único objeto\nreturn [{\n  json: {\n    data: dataFormatada,\n    hora: horaStr,\n    executionUrl: executionUrl\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6420,
        1340
      ],
      "id": "1edf2164-6f80-4480-8368-da47431dc003",
      "name": "Code4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4523dbda-713f-421c-94d1-db6b52bbbe08",
              "name": "resposta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d1607f31-c81f-4db2-b13b-c109744b0d70",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -1800,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "3a0d598a-3b82-480e-b95a-b760b969e9fe",
              "leftValue": "={{ $json.creditos }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2251de26-029d-4933-8e30-fadffa90f6fe",
      "name": "Crédito maior ou igual1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1800,
        200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "botconversa",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3baa7fdf-4a3c-4757-b897-d157997ce0a3",
      "name": "Se site / bc1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2140,
        100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Webhook').item.json.body.Webhook }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "TelefoneBC",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "CPF",
              "value": "={{ $('Webhook').item.json.body.CPF }}"
            },
            {
              "name": "Consulta",
              "value": "=Atenção: você não possui créditos suficientes para realizar esta consulta. Adquira mais créditos ou tente através de outro módulo."
            },
            {
              "name": "Retorno Consulta",
              "value": "Ok"
            }
          ]
        },
        "options": {}
      },
      "id": "d20e6409-285c-43db-bcc6-97e877c87289",
      "name": "Crédito inferior1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1980,
        400
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "5c1dea41-6947-41c9-990f-00b4417e1257",
      "name": "Respond to Webhook6",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -1800,
        400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://api.uniconsultas.io:3000/3406bddf-8759-404e-bd3f-a4261a6c6ce6/select/api/credits",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "73ace623-56c8-4433-bc98-a392ba53c291",
      "name": "Retornar Créditos Site1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1980,
        200
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "typebot",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "60288151-e6eb-4293-b30b-a838e064013e",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8bed34f6-1945-4096-ad7f-727d95255de5",
      "name": "If23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1980,
        580
      ]
    },
    {
      "parameters": {
        "content": "## SE SITE VERIFICAR CRÉDITO",
        "height": 779,
        "width": 710,
        "color": 4
      },
      "id": "2facd24d-8ef8-4954-9dc2-2ac74b58caac",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2220,
        40
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "b3537d53-3488-4a2c-8c87-079f40680398",
              "leftValue": "={{ $('Webhook').item.json.body.Webhook }}",
              "rightValue": "consultasite44",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8c380b0c-b7b3-4f67-bb86-f340b1d9fde5",
      "name": "Se base44",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3380,
        200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "64530896-b254-4c99-991f-167b429c9304",
              "name": "html",
              "value": "={{ $json.output.replace('URL-LOGO', $('Google Sheets').item.json['URL PDF Imagem'] || 'https://i.imgur.com/g0gImpK.jpeg').replace(\"```html\", \"\").replace(\"```\", \"\") }}",
              "type": "string"
            },
            {
              "id": "842b2f23-b0c2-4713-a419-890e04377971",
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "774d16d2-47c6-411a-8c78-78812c161e93",
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2793c104-3158-469e-ba7c-31d0ecc50322",
      "name": "resposta-base44",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3700,
        180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8e5d1e6-feda-4373-8e50-936f54a48786",
              "name": "Créditos",
              "value": "=2",
              "type": "string"
            },
            {
              "id": "e83c4952-cefe-4e2e-accf-865e014c5c20",
              "name": "Opção Consulta",
              "value": "Bacen",
              "type": "string"
            },
            {
              "id": "b465d432-f3ad-4b56-8e49-81a06ca7db1a",
              "name": "Tipo Consulta",
              "value": "={{ $workflow.name }}",
              "type": "string"
            },
            {
              "id": "ccbdfb0b-45f1-40b2-b095-fcfefa698376",
              "name": "Telefone",
              "value": "={{ $('Webhook').item.json.body.Telefone }}",
              "type": "string"
            },
            {
              "id": "41bac44d-098a-4889-ad47-0138194c7d6b",
              "name": "Dado consultado",
              "value": "={{ $('If26').item.json.numeroOriginal.replace(/[.\\-\\/\\s]/g, '') }}",
              "type": "string"
            },
            {
              "id": "5f0eaada-894e-45cf-8c51-3f1a65fb785e",
              "name": "Data",
              "value": "={{ $json.data }}",
              "type": "string"
            },
            {
              "id": "f34f0ad5-5beb-4941-a1be-d63c2f099f22",
              "name": "Hora",
              "value": "={{ $json.hora }}",
              "type": "string"
            },
            {
              "id": "80f689ee-d4ec-4b52-ad1d-e1e710f72420",
              "name": "=URL PDF",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}",
              "type": "string"
            },
            {
              "id": "7c7fe4c7-5f91-4a5c-af93-3104c80aab4c",
              "name": "Origem Consulta",
              "value": "={{ $('Webhook').item.json.body.Webhook }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6620,
        780
      ],
      "id": "1a241015-4c0f-4ffb-ab56-9a29dac78b7e",
      "name": "Dados Histórico"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6819f5703086936c581632c2/entities/Historico",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "tipo_consulta",
              "value": "={{ $json['Tipo Consulta'] }}"
            },
            {
              "name": "creditos",
              "value": "={{ $json['Créditos'] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            },
            {
              "name": "url_pdf",
              "value": "={{ $json['URL PDF'] }}"
            },
            {
              "name": "origem",
              "value": "={{ $json['Origem Consulta'] }}"
            },
            {
              "name": "opcao",
              "value": "={{ $json['Opção Consulta'] }}"
            },
            {
              "name": "exec",
              "value": "={{ $('Code4').item.json.executionUrl }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6840,
        780
      ],
      "id": "f2da00e7-fa08-4005-bc75-4d69cd628ef8",
      "name": "Base44 API - Histórico",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/UltimaConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $json.output.replace('URL-LOGO', $('Google Sheets').item.json['URL PDF Imagem'] || 'https://i.imgur.com/g0gImpK.jpeg').replace(\"```html\", \"\").replace(\"```\", \"\") }}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            },
            {
              "name": "telefone",
              "value": "={{ $json.Telefone }}"
            },
            {
              "name": "dado_consultado",
              "value": "={{ $json[\"Dado consultado\"] }}"
            },
            {
              "name": "data",
              "value": "={{ $('Code4').item.json.data_iso }}"
            },
            {
              "name": "hora",
              "value": "={{ $json.Hora }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6840,
        940
      ],
      "id": "7149809f-591c-41b9-9613-1571f8ecc6a6",
      "name": "Base44 API - Última Consulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "html",
              "value": "={{ $json.output.replace('URL-LOGO', $('Google Sheets').item.json['URL PDF Imagem'] || 'https://i.imgur.com/g0gImpK.jpeg').replace(\"```html\", \"\").replace(\"```\", \"\") }}"
            },
            {
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'].replace(/[*_]/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3540,
        180
      ],
      "id": "6363bef7-44af-4b80-9cc0-3e83ad7f2c99",
      "name": "Base44 API - RetornoConsulta",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://base44.app/api/apps/6810f69b135122c2415c3aa4/entities/RetornoConsulta",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "876ed4d9d16b40b3b54ab5da6d49a0a4"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "requestToken",
              "value": "={{ $('Webhook').item.json.body.RequestToken }}"
            },
            {
              "name": "resposta",
              "value": "={{ $('se typebot1').item.json['Consulta erro'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1420,
        2060
      ],
      "id": "3a2e2086-756e-4b43-bbe7-97d5dba75ae6",
      "name": "Base44 API - Erro Consulta",
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37111169-e67b-43ee-856e-7deb5fa193ab",
              "name": "resposta",
              "value": "={{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}\n\n----------- / / -----------\n\n{{ $('Aggregate6').item.json.Consulta[1].Dados }}",
              "type": "string"
            },
            {
              "id": "e298fd1f-2f1c-4140-bf94-7c782ced4329",
              "name": "urlpdf",
              "value": "={{ $('Gerar PDF API').item.json.FileUrl }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4060,
        400
      ],
      "id": "38a63280-a422-4d44-8b13-edcc17fb6c45",
      "name": "resposta typebot"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.unisistemas.tech/message/sendText/{{ $('Webhook').item.json.body.Webhook.split('_')[1] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.Webhook.split('_').pop() }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Webhook').item.json.body.Telefone }}"
            },
            {
              "name": "text",
              "value": "=*UniConsultas*\nTodas as consultas em um só lugar!\n\n------- / / -------\n\n## Consulta Cheques Bacen\n\n{{ $('Aggregate6').item.json.Consulta[0]['Informações'] }}\n\n----------- / / -----------\n\n{{ $('Aggregate6').item.json.Consulta[1].Dados }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3880,
        400
      ],
      "id": "fef84005-a77f-4af7-aa05-dcd46d3b6a46",
      "name": "EvolutionAPI - Consulta"
    }
  ],
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Mapa - Informações",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate6": {
      "main": [
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          },
          {
            "node": "evodata4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos": {
      "main": [
        [
          {
            "node": "Créditos a retirar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe": {
      "main": [
        [
          {
            "node": "Maior ou igual1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Crédito Arthur",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos": {
      "main": [
        [
          {
            "node": "Verificar saldo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Disponíveis1": {
      "main": [
        [
          {
            "node": "Retirar Créditos2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Crédito Arthur": {
      "main": [
        [
          {
            "node": "Se crédito existe3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se crédito existe3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "API Crédito Offline",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Créditos a retirar1": {
      "main": [
        [
          {
            "node": "Se crédito existe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Maior ou igual1": {
      "main": [
        [
          {
            "node": "Retirar Créditos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Disponíveis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar saldo": {
      "main": [
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Dados N8N": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações1": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Mapa - Informações1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações2": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "If26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If26": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If28": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If27": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If29": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request10",
            "type": "main",
            "index": 0
          },
          {
            "node": "Acompanhar consulta site (Botconversa)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request10": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook3": {
      "main": [
        [
          {
            "node": "Retornar Créditos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Code Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Horário funcionamento": {
      "main": [
        [
          {
            "node": "Verificar Horário funcionamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Horário funcionamento": {
      "main": [
        [
          {
            "node": "Horário funcionamento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fora do horário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Horário funcionamento1": {
      "main": [
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fora do horário": {
      "main": [
        [
          {
            "node": "se typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retirar Créditos2": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API Crédito Offline": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If35": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "If36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Informações confere.link": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "If35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If36": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mapa - Informações3": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge58": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot": {
      "main": [
        [
          {
            "node": "Resposta Typebot CPF Errado",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot1": {
      "main": [
        [
          {
            "node": "Resposta Typebot Erro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "typebot1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "se typebot2": {
      "main": [
        [
          {
            "node": "EvolutionAPI - Consulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Gerar PDF API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "Edit Fields13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields13": {
      "main": [
        [
          {
            "node": "If49",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set4": {
      "main": [
        [
          {
            "node": "XML4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML4": {
      "main": [
        [
          {
            "node": "If48",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "Edit Fields14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields14": {
      "main": [
        [
          {
            "node": "If47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If47": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "minerdapifoda4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "confere.link4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "Edit Fields15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields15": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If48": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If49": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "evodata4": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "minerdapifoda4": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "confere.link4": {
      "main": [
        [
          {
            "node": "Set4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "Merge58",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mapa - Informações3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot CPF Errado": {
      "main": [
        [
          {
            "node": "typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta Typebot Erro": {
      "main": [
        [
          {
            "node": "Base44 API - Erro Consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados N8N",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar PDF API": {
      "main": [
        [
          {
            "node": "Se base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Dados Histórico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito maior ou igual1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se site / bc1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Retornar Créditos Site1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crédito inferior1": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retornar Créditos Site1": {
      "main": [
        [
          {
            "node": "Crédito maior ou igual1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If23": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crédito inferior1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Se base44": {
      "main": [
        [
          {
            "node": "Base44 API - RetornoConsulta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "se typebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta-base44": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados Histórico": {
      "main": [
        [
          {
            "node": "Base44 API - Histórico",
            "type": "main",
            "index": 0
          },
          {
            "node": "Base44 API - Última Consulta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - RetornoConsulta": {
      "main": [
        [
          {
            "node": "resposta-base44",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base44 API - Erro Consulta": {
      "main": [
        [
          {
            "node": "typebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "resposta typebot": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionAPI - Consulta": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "HTTP Request2": [
      {
        "json": {
          "HEADER": {
            "INFORMACOES_RETORNO": {
              "VERSAO": "20180521",
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "CHAVE_CONSULTA": "19351663",
              "PRODUTO": "333-CCF BACEN",
              "CLIENTE": "113.832.236-96-ARTHUR BALDIOTTI MENDONCA ALVARES",
              "DATA_HORA_CONSULTA": "10/10/2024 12:11",
              "TERMINAL": "",
              "SOLICITANTE": "11383223696",
              "PDF": "https://api.validocadastro.com.br/tools/generate-pdf.aspx?file_code=sd8eNAYcCb9S1afPVdlqUgIIXz%2b6IjS1JXMsCUgDPww%3d",
              "ENTIDADE": "13",
              "REQUISICAO": "274b3f18d4ec44f49f46d3e1934f05ca/10102024132016"
            },
            "PARAMETROS": {
              "CPFCNPJ": "11383223696",
              "TIPO_PESSOA": "",
              "CMC7": "",
              "VALOR": "",
              "DT_VENCIMENTO": "",
              "DDD": "",
              "TELEFONE": "",
              "CEP": "",
              "NOME": "",
              "NOME_MAE": "",
              "NOME_PAI": "",
              "ENDERECO": "",
              "ENDERECO_NUM": "",
              "ENDERECO_COMPLEMENTO": "",
              "ENDERECO_BAIRRO": "",
              "CIDADE": "",
              "FOTO_BASE64": "",
              "IDADE": "",
              "NACIONALIDADE": "",
              "NUM_BENEFICIO_INSS": "",
              "EMAIL": "",
              "SEXO": "",
              "OBITO": "",
              "DATA_NASCIMENTO": "",
              "SOM_SEMELHANTE": "",
              "REGISTRO_GERAL": "",
              "RG_ORGAO_EXPEDIDOR": "",
              "RG_UF_EXPEDIDOR": "",
              "CART_NAC_HABILITACAO": "",
              "CNH_CATEGORIA": "",
              "CNH_DATA_PRIMEIRA_HABILITACAO": "",
              "CNH_DATA_ULTIMA_EMISSAO": "",
              "CNH_DATA_VALIDADE": "",
              "CNH_REGISTRO_NACIONAL_ESTRANGEIRO": "",
              "CNH_SITUACAO": "",
              "PLACA": "",
              "CHASSI": "",
              "SITUACAO_CPF_CNPJ": "",
              "NUM_CAMBIO": "",
              "NUM_MOTOR": "",
              "NUM_CARROCERIA": "",
              "NUM_EIXO_TRASEIRO": "",
              "NUM_TERCEIRO_EIXO": "",
              "CRLV": "",
              "RENAVAM": "",
              "UF": "",
              "KILOMETRAGEM": "",
              "TIPO_DOCUMENTO_ENVIADO": "",
              "CARTEIRAPROFISSIONAL": "",
              "CP_ORGAO_EXPEDIDOR": "",
              "CP_UF_EXPEDIDOR": "",
              "PASSAPORTE": "",
              "PASSAPORTE_ORGAO_EXPEDIDOR": "",
              "PASSAPORTE_UF_EXPEDIDOR": "",
              "CERTIFICADORESERVISTA": "",
              "CR_ORGAO_EXPEDIDOR": "",
              "CR_UF_EXPEDIDOR": "",
              "CRV": "",
              "MES_ANO": "",
              "ALCUNHA": "",
              "NUMERO_PROCESSO": ""
            },
            "DADOS_RETORNADOS": {
              "DADOS_RECEITA_FEDERAL": "0",
              "ALERTA_DOCUMENTOS_ROUBADOS": "0",
              "DADOS_AGENCIA_BANCARIA": "0",
              "PROTESTO_SINTETICO": "0",
              "PROTESTO_ANALITICO": "0",
              "ENDERECOS": "0",
              "FALENCIAS_ACOES_RECUPERACOES": "0",
              "INFORMACOES_ELEITORAIS": "0",
              "QUADRO_SOCIETARIO": "0",
              "PARTICIPACAO_EM_EMPRESAS": "0",
              "PENDENCIAS_INTERNAS": "0",
              "PENDENCIAS_FINANCEIRAS": "0",
              "INFORMACOES_DA_EMPRESA": "0",
              "CCF_BACEN": "1",
              "CCF_VAREJO": "0",
              "RECHEQUE_ONLINE": "0",
              "RECHEQUE": "0",
              "CONTUMACIA": "0",
              "ENDERECO_DO_CEP": "0",
              "PASSAGENS_COMERCIAIS": "0",
              "INFORMACOES_ALERTAS_RESTRICOES": "0",
              "SCORE": "0",
              "ADMINISTRADORES_DA_EMPRESA": "0",
              "TITULOS_A_VENCER": "0",
              "HISTORICO_DE_PAGAMENTOS": "0",
              "REFERENCIA_DE_NEGOCIOS": "0",
              "PRINCIPAIS_FORNECEDORES": "0",
              "IDENTIFICACAO_PESSOA_FISICA": "0",
              "OCUPACAO_PESSOA_FISICA": "0",
              "PARTICIPACAO_EM_FALENCIAS": "0",
              "TELEFONE_FIXO": "0",
              "TITULAR_DO_TELEFONE": "0",
              "OUTROS_TELEFONES": "0",
              "TELEFONE_CELULAR": "0",
              "PARENTES": "0",
              "CONTATOS": "0",
              "LOCAIS_TRABALHO": "0",
              "TELEFONE_COMERCIAL": "0",
              "DADOS_GERAIS": "0",
              "VIZINHOS": "0",
              "RESIDENTES": "0",
              "BENEFICIO": "0",
              "EMAILS": "0",
              "INFOBUSCA": "0",
              "VINCULO_MESMO_ENDERECO": "0",
              "SOMENTE_TELEFONE": "0",
              "SOMENTE_ENDERECO": "0",
              "RELATORIO_TEXTO": "0",
              "VEICULOS_POR_DOCUMENTO": "0",
              "CNH": "0",
              "AGREGADOS": "0",
              "BIN_NACIONAL": "0",
              "BIN_ESTADUAL": "0",
              "GRAVAME": "0",
              "LEILAO": "0",
              "CONFERENCIA_MOTOR_E_CHASSI": "0",
              "HISTORICO_PROPRIETARIOS": "0",
              "HISTORICO_ROUBO_FURTO": "0",
              "ROUBO_FURTO": "0",
              "PERDA_TOTAL": "0",
              "ALERTAS": "0",
              "RECALL": "0",
              "DPVAT": "0",
              "DECODIFICADOR_DE_CHASSI": "0",
              "PRECIFICADOR": "0",
              "RENAJUD": "0",
              "RENACH": "0",
              "CRLV": "0",
              "REMARKETING": "0",
              "INDICIO_SINISTRO": "0",
              "PARECER_TECNICO": "0",
              "PENDENCIAS_REFIN": "0",
              "PENDENCIAS_VENCIDAS": "0",
              "LOCALIZADOR_AGREGADOS": "0",
              "CARACTERISTICAS_ADICIONAIS": "0",
              "LAUDO_CAUTELAR": "0",
              "DECISAO": "0",
              "LIMITE_CREDITO": "0",
              "FATURAMENTO_PRESUMIDO": "0",
              "PARTICIPACAO_SOCIO_ADM_OUTRAS_EMPRESAS": "0",
              "PARTICIPACOES_EMPRESAS_CONSULTADAS": "0",
              "HIST_CONSULTAS": "0",
              "ACOES_CIVEIS": "0",
              "FALENCIA_RECUPERACAO_JUDICIAL": "0",
              "ANALISE_KILOMETRAGEM": "0",
              "PONTUALIDADE_PAGTO": "0",
              "PROPRIETARIO_ATUAL_VEICULO": "0",
              "VALIDACAO_PESSOA_FISICA": "0",
              "VALIDACAO_PF_BASICA": "0",
              "VALIDACAO_PF_BIOMETRIA_FACE": "0",
              "VALIDACAO_PF_CNH": "0",
              "VALIDACAO_PF_DOCUMENTO": "0",
              "VALIDACAO_PF_ENDERECO": "0",
              "VALIDACAO_PF_FILIACAO": "0",
              "AUTO_VISTORIA": "0",
              "INDICE_SECURITARIO": "0",
              "CALCULO_VALORIZACAO": "0",
              "ATPVE": "0",
              "CREDITO_CONCEDIDO": "0",
              "RENDA_PRESUMIDA": "0",
              "COMPROMETIMENTO_PAGTO": "0",
              "LEILAO_CONJUGADO": "0",
              "CSV": "0",
              "RENAINF": "0",
              "RELATORIO_ARQUIVO": "0",
              "INDICIO_SINISTRO_CONJUGADO": "0",
              "CONSULTA_GENERICA": "0",
              "BATIDOS": "0",
              "RELATORIO_SCR": "0",
              "CADIN": "0",
              "ACOES_TRABALHISTAS": "0",
              "RELATORIO_SCR_SINTETICO": "0",
              "CPR": "0",
              "FICHA_TECNICA_VEICULAR": "0",
              "CHECK_LIST_VEICULAR": "0",
              "DIVIDA_ATIVA_PESSOA_FISICA": "0",
              "DIVIDA_ATIVA_PESSOA_JURIDICA": "0",
              "PENDENCIAS_ISP": "0",
              "RELATORIO_JURIDICO_EMPRESARIAL": "0",
              "INFORMACOES_CRIMINAIS": "0",
              "PROCURADOS_JUSTICA": "0",
              "RELATORIO_JURIDICO_PESSOA_FISICA": "0",
              "DETALHAMENTO_ACAO_JUDICIAL": "0",
              "RELATORIO_IMOVEIS": "0",
              "DEBITOS_IPVA": "0",
              "DEBITO_DIRETO_AUTORIZADO": "0",
              "CONTROLE_POSITIVO": "0",
              "ALERTA_INDICIO": "0",
              "RELATORIO_CREDITICIO_ARQUIVO": "0",
              "IMAGENS_VEICULO": "0",
              "RELATORIO_SCR_ENCAPSULADO": "0",
              "RESTRICOES_FINANCEIRAS": "0"
            },
            "CONTROLE": {
              "QUANTIDADE_OCORRENCIAS": "1",
              "OCORRENCIAS": [
                {
                  "CONTEUDO": "42",
                  "FONTE": "53",
                  "STATUS": "1"
                }
              ]
            }
          },
          "CREDCADASTRAL": {
            "CH_SEM_FUNDOS_BACEN": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "QUANTIDADE_OCORRENCIA": "21",
              "CORRENTISTA": "ARTHUR BALDIOTTI MENDONCA ALVARES",
              "TIPO_PESSOA": "FISICA",
              "CPFCNPJ": "113.832.236-96",
              "OCORRENCIAS": [
                {
                  "DCR_BANCO": "237 BANCO BRADESCO S A",
                  "NUM_BANCO": "237 BANCO BRADESCO S A",
                  "NUM_AGENCIA": "1954",
                  "MOTIVO_DEVOLUCAO": "12 - MOTIVO 12",
                  "QTD_CHEQUES": "21",
                  "DT_ULTIMA_OCORRENCIA": "10/2024",
                  "DADOS_AGENCIA": "",
                  "DOC_RELACIONADO": "113.832.236-96"
                }
              ]
            }
          },
          "VEICULAR": {}
        }
      }
    ],
    "HTTP Request": [
      {
        "json": {
          "HEADER": {
            "INFORMACOES_RETORNO": {
              "VERSAO": "20180521",
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "CHAVE_CONSULTA": "20658942",
              "PRODUTO": "333-CCF BACEN",
              "CLIENTE": "40.126.612/0001-40-ARTHUR BALDIOTTI MENDONCA ALVARES",
              "DATA_HORA_CONSULTA": "10/12/2024 07:42",
              "TERMINAL": "",
              "SOLICITANTE": "IDENTIFICAÇÃO DO CLIENTE FINAL (OPCIONAL)",
              "PDF": "https://api.validocadastro.com.br/tools/generate-pdf.aspx?file_code=tKi5jdodKHuzudNzcy2IdSBLYXPRD%2fp3Ja2Y2f7qu%2fQ%3d",
              "ENTIDADE": "13",
              "REQUISICAO": "31724041c28f4d62b19fe6998894fca1/10122024074227"
            },
            "PARAMETROS": {
              "CPFCNPJ": "11383223696"
            },
            "DADOS_RETORNADOS": {
              "DADOS_RECEITA_FEDERAL": "0",
              "ALERTA_DOCUMENTOS_ROUBADOS": "0",
              "DADOS_AGENCIA_BANCARIA": "0",
              "PROTESTO_SINTETICO": "0",
              "PROTESTO_ANALITICO": "0",
              "ENDERECOS": "0",
              "FALENCIAS_ACOES_RECUPERACOES": "0",
              "INFORMACOES_ELEITORAIS": "0",
              "QUADRO_SOCIETARIO": "0",
              "PARTICIPACAO_EM_EMPRESAS": "0",
              "PENDENCIAS_INTERNAS": "0",
              "PENDENCIAS_FINANCEIRAS": "0",
              "INFORMACOES_DA_EMPRESA": "0",
              "CCF_BACEN": "1",
              "CCF_VAREJO": "0",
              "RECHEQUE_ONLINE": "0",
              "RECHEQUE": "0",
              "CONTUMACIA": "0",
              "ENDERECO_DO_CEP": "0",
              "PASSAGENS_COMERCIAIS": "0",
              "INFORMACOES_ALERTAS_RESTRICOES": "0",
              "SCORE": "0",
              "ADMINISTRADORES_DA_EMPRESA": "0",
              "TITULOS_A_VENCER": "0",
              "HISTORICO_DE_PAGAMENTOS": "0",
              "REFERENCIA_DE_NEGOCIOS": "0",
              "PRINCIPAIS_FORNECEDORES": "0",
              "IDENTIFICACAO_PESSOA_FISICA": "0",
              "OCUPACAO_PESSOA_FISICA": "0",
              "PARTICIPACAO_EM_FALENCIAS": "0",
              "TELEFONE_FIXO": "0",
              "TITULAR_DO_TELEFONE": "0",
              "OUTROS_TELEFONES": "0",
              "TELEFONE_CELULAR": "0",
              "PARENTES": "0",
              "CONTATOS": "0",
              "LOCAIS_TRABALHO": "0",
              "TELEFONE_COMERCIAL": "0",
              "DADOS_GERAIS": "0",
              "VIZINHOS": "0",
              "RESIDENTES": "0",
              "BENEFICIO": "0",
              "EMAILS": "0",
              "INFOBUSCA": "0",
              "VINCULO_MESMO_ENDERECO": "0",
              "SOMENTE_TELEFONE": "0",
              "SOMENTE_ENDERECO": "0",
              "RELATORIO_TEXTO": "0",
              "VEICULOS_POR_DOCUMENTO": "0",
              "CNH": "0",
              "AGREGADOS": "0",
              "BIN_NACIONAL": "0",
              "BIN_ESTADUAL": "0",
              "GRAVAME": "0",
              "LEILAO": "0",
              "CONFERENCIA_MOTOR_E_CHASSI": "0",
              "HISTORICO_PROPRIETARIOS": "0",
              "HISTORICO_ROUBO_FURTO": "0",
              "ROUBO_FURTO": "0",
              "PERDA_TOTAL": "0",
              "ALERTAS": "0",
              "RECALL": "0",
              "DPVAT": "0",
              "DECODIFICADOR_DE_CHASSI": "0",
              "PRECIFICADOR": "0",
              "RENAJUD": "0",
              "RENACH": "0",
              "CRLV": "0",
              "REMARKETING": "0",
              "INDICIO_SINISTRO": "0",
              "PARECER_TECNICO": "0",
              "PENDENCIAS_REFIN": "0",
              "PENDENCIAS_VENCIDAS": "0",
              "LOCALIZADOR_AGREGADOS": "0",
              "CARACTERISTICAS_ADICIONAIS": "0",
              "LAUDO_CAUTELAR": "0",
              "DECISAO": "0",
              "LIMITE_CREDITO": "0",
              "FATURAMENTO_PRESUMIDO": "0",
              "PARTICIPACAO_SOCIO_ADM_OUTRAS_EMPRESAS": "0",
              "PARTICIPACOES_EMPRESAS_CONSULTADAS": "0",
              "HIST_CONSULTAS": "0",
              "ACOES_CIVEIS": "0",
              "FALENCIA_RECUPERACAO_JUDICIAL": "0",
              "ANALISE_KILOMETRAGEM": "0",
              "PONTUALIDADE_PAGTO": "0",
              "PROPRIETARIO_ATUAL_VEICULO": "0",
              "VALIDACAO_PESSOA_FISICA": "0",
              "VALIDACAO_PF_BASICA": "0",
              "VALIDACAO_PF_BIOMETRIA_FACE": "0",
              "VALIDACAO_PF_CNH": "0",
              "VALIDACAO_PF_DOCUMENTO": "0",
              "VALIDACAO_PF_ENDERECO": "0",
              "VALIDACAO_PF_FILIACAO": "0",
              "AUTO_VISTORIA": "0",
              "INDICE_SECURITARIO": "0",
              "CALCULO_VALORIZACAO": "0",
              "ATPVE": "0",
              "CREDITO_CONCEDIDO": "0",
              "RENDA_PRESUMIDA": "0",
              "COMPROMETIMENTO_PAGTO": "0",
              "LEILAO_CONJUGADO": "0",
              "CSV": "0",
              "RENAINF": "0",
              "RELATORIO_ARQUIVO": "0",
              "INDICIO_SINISTRO_CONJUGADO": "0",
              "CONSULTA_GENERICA": "0",
              "BATIDOS": "0",
              "RELATORIO_SCR": "0",
              "CADIN": "0",
              "ACOES_TRABALHISTAS": "0",
              "RELATORIO_SCR_SINTETICO": "0",
              "CPR": "0",
              "FICHA_TECNICA_VEICULAR": "0",
              "CHECK_LIST_VEICULAR": "0",
              "DIVIDA_ATIVA_PESSOA_FISICA": "0",
              "DIVIDA_ATIVA_PESSOA_JURIDICA": "0",
              "PENDENCIAS_ISP": "0",
              "RELATORIO_JURIDICO_EMPRESARIAL": "0",
              "INFORMACOES_CRIMINAIS": "0",
              "PROCURADOS_JUSTICA": "0",
              "RELATORIO_JURIDICO_PESSOA_FISICA": "0",
              "DETALHAMENTO_ACAO_JUDICIAL": "0",
              "RELATORIO_IMOVEIS": "0",
              "DEBITOS_IPVA": "0",
              "DEBITO_DIRETO_AUTORIZADO": "0",
              "CONTROLE_POSITIVO": "0",
              "ALERTA_INDICIO": "0",
              "RELATORIO_CREDITICIO_ARQUIVO": "0",
              "IMAGENS_VEICULO": "0",
              "RELATORIO_SCR_ENCAPSULADO": "0",
              "RESTRICOES_FINANCEIRAS": "0"
            },
            "CONTROLE": {
              "QUANTIDADE_OCORRENCIAS": "1",
              "OCORRENCIAS": [
                {
                  "CONTEUDO": "42",
                  "FONTE": "53",
                  "STATUS": "1"
                }
              ]
            }
          },
          "CREDCADASTRAL": {
            "CH_SEM_FUNDOS_BACEN": {
              "STATUS_RETORNO": {
                "CODIGO": "1",
                "DESCRICAO": "CONSULTA CONCLUIDA COM SUCESSO"
              },
              "QUANTIDADE_OCORRENCIA": "10",
              "CORRENTISTA": "ARTHUR BALDIOTTI MENDONCA ALVARES",
              "TIPO_PESSOA": "FISICA",
              "CPFCNPJ": "113.832.236-96",
              "OCORRENCIAS": [
                {
                  "DCR_BANCO": "237 BANCO BRADESCO S A",
                  "NUM_BANCO": "237 BANCO BRADESCO S A",
                  "NUM_AGENCIA": "1954",
                  "MOTIVO_DEVOLUCAO": "12 - MOTIVO 12",
                  "QTD_CHEQUES": "10",
                  "DT_ULTIMA_OCORRENCIA": "12/2024",
                  "DADOS_AGENCIA": "",
                  "DOC_RELACIONADO": "113.832.236-96"
                }
              ]
            }
          },
          "VEICULAR": {}
        }
      }
    ],
    "Informações confere.link": [
      {
        "json": {
          "data": "<?xml version='1.0' encoding='ISO-8859-1'?><RETORNO>\r\n<CADASTRAIS>\r\n<CPF>11383223696</CPF>\r\n<NOME>ARTHUR BALDIOTTI MENDONCA ALVARES</NOME>\r\n<NOME_MAE>MARIA LUIZA BALDIOTTI MENDONCA</NOME_MAE>\r\n<NASCTO>03/04/1993</NASCTO>\r\n<IDADE>31 anos</IDADE>\r\n<SEXO>Masculino</SEXO>\r\n\r\n<RG></RG>\r\n<ORGAO_EMISSOR></ORGAO_EMISSOR>\r\n<UF_EMISSAO></UF_EMISSAO>\r\n<TITULO_ELEITOR></TITULO_ELEITOR>\r\n<NIT></NIT>\r\n<ESCOLARIDADE> </ESCOLARIDADE>\r\n<NACIONALIDADE></NACIONALIDADE>\r\n<PROFISSAO></PROFISSAO>\r\n<SALARIO></SALARIO>\r\n<CLASSE_ECONOMICA></CLASSE_ECONOMICA>\r\n<CONSTA_OBITO></CONSTA_OBITO>\r\n\r\n</CADASTRAIS>\r\n<INSS>\r\n\r\n</INSS><TELEFONES_FIXO><TELEFONE><NUMERO>3133344803</NUMERO><OPERADORA>TELEMAR/MG</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>FIXO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE></TELEFONES_FIXO><TELEFONES_MOVEL><TELEFONE><NUMERO>31997781110</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999493378</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>PRE PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999812824</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA>23/03/2013</DATA_REFERENCIA><TIPO_TEL>MOVEL POS-PAGO</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>alta</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>37999951110</NUMERO><OPERADORA>VIVO</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE><TELEFONE><NUMERO>31975122221</NUMERO><OPERADORA>TIM CELULAR S.A.</OPERADORA><DATA_REFERENCIA></DATA_REFERENCIA><TIPO_TEL>MOVEL</TIPO_TEL><TEM_ZAP></TEM_ZAP><NAO_PERTUBE>n�o</NAO_PERTUBE><IMG></IMG><PRIORIDADE>media</PRIORIDADE></TELEFONE></TELEFONES_MOVEL><EMAILS><EMAIL>tiosam_importados@hotmail.com</EMAIL>\r\n<EMAIL>arthurbaldiotti@hotmail.com</EMAIL>\r\n</EMAILS><ENDERECOS><ENDERECO><LOGRADOURO>R FRANCISCO SALES</LOGRADOURO><NUMERO>129</NUMERO><COMPLEMENTO>AP 602</COMPLEMENTO><BAIRRO>CENTRO</BAIRRO><CEP>35660017</CEP><CIDADE>PARA DE MINAS</CIDADE><ESTADO>MG</ESTADO></ENDERECO></ENDERECOS><POSSIVEIS_PARENTES><CONTATO><CPF>43315763615</CPF>\r\n<NOME>MARIA LUIZA BALDIOTTI MENDONCA</NOME>   \r\n<IDADE>63 anos</IDADE>\r\n<LOCAL>PARA DE MINAS/MG</LOCAL>\r\n<PARENTESCO>MAE</PARENTESCO>\r\n</CONTATO>\r\n<CONTATO>\r\n<CPF>11628911654</CPF>\r\n<NOME>AUGUSTO BALDIOTTI MENDONCA ALVARES</NOME>   \r\n<IDADE>24 anos</IDADE>\r\n<LOCAL></LOCAL>\r\n<PARENTESCO>IRMAO(A)</PARENTESCO>\r\n</CONTATO></POSSIVEIS_PARENTES><POSSIVEIS_CONTATOS></POSSIVEIS_CONTATOS><REFERENCIA_PROFISSIONAL></REFERENCIA_PROFISSIONAL><EMPRESAS_SOCIO><EMPRESA_SOCIO>\r\n<RAZAO_SOCIAL>REDE QUERO IMOVEIS LTDA</RAZAO_SOCIAL>\r\n<CNPJ>40126612000140</CNPJ>\r\n<CIDADE>PARA DE MINAS-MG</CIDADE>\r\n<QUALIFICACAO>Socio-Administrador</QUALIFICACAO>\r\n<DATA_ENTRADA>16/12/2020</DATA_ENTRADA>\r\n<VALOR_PARTICIPACAO></VALOR_PARTICIPACAO>\r\n</EMPRESA_SOCIO></EMPRESAS_SOCIO></RETORNO>"
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "n8n.redequeroimoveis.com",
            "content-length": "239",
            "sentry-trace": "6bce1d8818974d33bc51d67ac3cae226-a982df14e85b087c-0",
            "baggage": "sentry-trace_id=6bce1d8818974d33bc51d67ac3cae226,sentry-environment=production_new,sentry-release=05db53e5ef28d80a44c0d17b3d9a7efe15fd78c8,sentry-public_key=af3c6636fa6e4f89948eaa4e575b3286,sentry-transaction=/api/v1/blocks_integration/test_request/,sentry-sample_rate=0.0003125,sentry-sampled=false",
            "user-agent": "python-requests/2.32.3",
            "accept-encoding": "gzip, deflate",
            "accept": "*/*",
            "content-type": "application/json"
          },
          "params": {},
          "query": {},
          "body": {
            "CPF": "11383223696",
            "Webhook": "https://backend.botconversa.com.br/api/v1/webhooks-automation/catch/66767/G0KnTsuHzz25/",
            "Telefone": "553799781110",
            "URL_LogoPDF": "11HQEpkA-HEprYtECt9loSst9Jdm3huIX1KfXnsSX_30",
            "Tipo consulta": "CPF"
          },
          "webhookUrl": "http://localhost:5678/webhook-test/valido-cadastro_bacen",
          "executionMode": "test"
        }
      }
    ],
    "OpenAI1": [
      {
        "json": {
          "content": "### Dados Pessoais\n*Nome:* ARTHUR BALDIOTTI MENDONCA ALVARES\n*CPF:* 11383223696\n*Nascimento:* 03/04/1993\n*Nome da Mãe:* MARIA LUIZA BALDIOTTI MENDONCA\n\n\n## *Telefones*\n- 5537999781110\n- 55319946-4694\n- 553732322848\n- 31997781110\n- 37999493378\n\n## *E-mails*\n- tiosam_importados@hotmail.com\n- arthurbaldiotti@hotmail.com\n\n## *Possíveis Parentes*\n- RITA DE CASSIA CARVALHO BALDIOTTI - TIA(O)\n- MARCIA APARECIDA CARVALHO BALDIOTTI PONCE - TIA(O)\n- LUIZ MIGUEL CARVALHO BALDIOTTI - TIA(O)\n- REGINA AUXILIADORA CARVALHO BALDIOTTI VENCATO - TIA(O)\n- MARCELA BALDIOTTI PONCE - PRIMA(O)\n\n----------------- / / -----------------\n\n*Nome:* _ARTHUR BALDIOTTI MENDONCA ALVARES_\n*CNPJ/CNPJ:* _113.832.236-96_\n\n*Bacen*\n*Banco:* _237 BANCO BRADESCO S A_\n*Agencia:* _1954_\n*Motivo:* _12 - MOTIVO 12_\n*Qnt cheques:* _10_\n*Data última ocorrência:* _12/2024_",
          "signal": {
            "aborted": false,
            "onabort": null
          },
          "timeout": 120000,
          "output": "```html\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Consulta de Análise de Crédito</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 0; padding: 0; }\n        h2 { color: #333; }\n        .section { margin-bottom: 20px; padding: 10px; border: 1px solid #ccc; border-radius: 5px; }\n        .section-header { font-weight: bold; }\n        table { width: 100%; border-collapse: collapse; margin-top: 10px; font-size: 11px; }\n        th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n\n        /* Estilo para a imagem do banner */\n        .banner {\n            width: 100%;\n            height: auto;\n            display: block;\n            margin-top: 0;\n        }\n\n        .footer {\n            font-size: 9px;\n            text-align: left;\n            padding: 10px;\n        }\n    </style>\n</head>\n<body>\n\n<!-- Imagem do banner -->\n<img src=\"URL-LOGO\" alt=\"Logo\" class=\"banner\">\n\n<br><br>\n\n<div class=\"section\">\n    <p><strong>Nome:</strong> ARTHUR BALDIOTTI MENDONCA ALVARES</p>\n    <p><strong>CPF:</strong> 11383223696</p>\n    <p><strong>Data Nascimento:</strong> 03/04/1993</p>\n    <p><strong>Nome da Mãe:</strong> MARIA LUIZA BALDIOTTI MENDONCA</p>\n\n    <h2 class=\"section-header\">Telefones</h2>\n    <ul>\n        <li>5537999781110</li>\n        <li>55319946-4694</li>\n        <li>553732322848</li>\n        <li>31997781110</li>\n        <li>37999493378</li>\n    </ul>\n\n    <h2 class=\"section-header\">E-mails</h2>\n    <ul>\n        <li>tiosam_importados@hotmail.com</li>\n        <li>arthurbaldiotti@hotmail.com</li>\n    </ul>\n\n    <h2 class=\"section-header\">Possíveis Parentes</h2>\n    <ul>\n        <li>RITA DE CASSIA CARVALHO BALDIOTTI - TIA(O)</li>\n        <li>MARCIA APARECIDA CARVALHO BALDIOTTI PONCE - TIA(O)</li>\n        <li>LUIZ MIGUEL CARVALHO BALDIOTTI - TIA(O)</li>\n        <li>REGINA AUXILIADORA CARVALHO BALDIOTTI VENCATO - TIA(O)</li>\n        <li>MARCELA BALDIOTTI PONCE - PRIMA(O)</li>\n    </ul>\n</div>\n\n<div class=\"section\">\n    <p><strong>Nome:</strong> ARTHUR BALDIOTTI MENDONCA ALVARES</p>\n    <p><strong>CNPJ:</strong> 113.832.236-96</p>\n\n    <h2 class=\"section-header\">Bacen</h2>\n    <table>\n        <thead>\n            <tr>\n                <th>Banco</th>\n                <th>Agência</th>\n                <th>Motivo</th>\n                <th>Qnt Cheques</th>\n                <th>Data Última Ocorrência</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>237 BANCO BRADESCO S A</td>\n                <td>1954</td>\n                <td>12 - MOTIVO 12</td>\n                <td>10</td>\n                <td>12/2024</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<div class=\"section\">\n    <h2 class=\"section-header\">Resumo através de IA</h2>\n    <p>Arthur Baldiotti Mendonça Alvares apresenta um conjunto de dados pessoais e financeiros relacionados a contatos familiares, telefones e e-mails. Além disso, possui informações relacionadas a cheques e sua conta no Banco Bradesco, com evidências de ocorrências passadas. É essencial monitorar esses dados e regularizar questões pendentes para garantir uma boa situação financeira e a manutenção do crédito.</p>\n</div>\n\n<div class=\"footer\">\n    <p><strong>INFORMAÇÕES IMPORTANTES:</strong><br>\n    ESTAS INFORMAÇÕES SÃO CONFIDENCIAIS E DEVERÃO SER UTILIZADAS, ÚNICA E EXCLUSIVAMENTE, PARA ORIENTAÇÃO DAS TRANSAÇÕES COMERCIAIS DO USUÁRIO, RESPONSABILIZANDO-SE CIVIL E CRIMINALMENTE POR DANOS QUE OCASIONAR A TERCEIROS, QUANDO UTILIZADAS EM DESACORDO COM A LEGISLAÇÃO EM VIGOR.<br><br>\n\n    <p><strong>MINUTA DE DECLARAÇÃO LGPD:</strong><br>\n    DECLARO QUE A UTILIZAÇÃO DOS DADOS RESPEITARÁ AS FINALIDADES E PROCEDIMENTOS LEGALMENTE ADMITIDOS PELA LEI GERAL DE PROTEÇÃO DE DADOS DIVULGADOS EM MINHA PÁGINA INICIAL DE ACESSO.\n</div>\n\n</body>\n</html>\n```",
          "runId": "run_p2yTHIBRVhFBIDcXyP5b9Ase",
          "threadId": "thread_UjqVETLmoH9mXLHqfgbJPFyB"
        }
      }
    ]
  },
  "versionId": "3266bc79-101f-4add-9231-d70212dc0e60",
  "triggerCount": 1,
  "tags": []
}